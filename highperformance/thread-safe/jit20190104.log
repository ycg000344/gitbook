<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='10140' time_ms='1546594001825'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.40-b25
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.40-b25) for windows-amd64 JRE (1.8.0_40-b26), built on Mar  7 2015 13:51:59 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit20190104.log -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.3\lib\idea_rt.jar=50196:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.3\bin -Dfile.encoding=UTF-8 
</args>
<command>
com.study.volatiletest.VisibilityDemo
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.40-b25
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_40\jre\lib\endorsed
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_40\jre\bin
java.library.path=C:\Program Files\Java\jdk1.8.0_40\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_40\bin;C:\basic\gradle-4.10.2\bin;C:\basic\groovy-2.4.5\bin;C:\basic\Far;C:\basic\VSCode-win32-1.10.2;C:\Program Files\Git;C:\basic\ffmpeg\bin;C:\basic\node;C:\basic\Python27;c:\Program Files\MySQL\MySQL Server 5.7\bin;C:\Program Files\Git\cmd;C:\WINDOWS\System32\OpenSSH\;C:\basic\Python27\Scripts;C:\basic\spring-2.1.1.BUILD-SNAPSHOT\bin;C:\Users\65060\AppData\Local\Microsoft\WindowsApps;C:\basic\Microsoft VS Code\bin;.
java.home=C:\Program Files\Java\jdk1.8.0_40\jre
java.class.path=C:\Program Files\Java\jdk1.8.0_40\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\rt.jar;D:\tmp\xxp\out\production\xxp
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_40\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_40\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_40\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.study.volatiletest.VisibilityDemo
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='22584'/>
<thread_logfile thread='22584' filename='C:\Users\65060\AppData\Local\Temp\\hs_c22584_pid10140.log'/>
<writer thread='10816'/>
<thread_logfile thread='10816' filename='C:\Users\65060\AppData\Local\Temp\\hs_c10816_pid10140.log'/>
<writer thread='9344'/>
<thread_logfile thread='9344' filename='C:\Users\65060\AppData\Local\Temp\\hs_c9344_pid10140.log'/>
<writer thread='20164'/>
<task_queued compile_id='1' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.211' comment='tiered' hot_count='128'/>
<writer thread='9344'/>
Loaded disassembler from C:\Program Files\Java\jdk1.8.0_40\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x00000000030d38d0:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x000000001739d160} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000030d3a20: mov    0x8(%rdx),%r10d
  0x00000000030d3a24: shl    $0x3,%r10
  0x00000000030d3a28: cmp    %rax,%r10
  0x00000000030d3a2b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030d3a31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030d3a3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030d3a40: mov    %eax,-0x6000(%rsp)
  0x00000000030d3a47: push   %rbp
  0x00000000030d3a48: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x00000000030d3a4c: mov    0x10(%rdx),%eax    ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x00000000030d3a4f: add    $0x30,%rsp
  0x00000000030d3a53: pop    %rbp
  0x00000000030d3a54: test   %eax,-0x28e395a(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030d3a5a: retq   
  0x00000000030d3a5b: nop
  0x00000000030d3a5c: nop
  0x00000000030d3a5d: mov    0x2a8(%r15),%rax
  0x00000000030d3a64: movabs $0x0,%r10
  0x00000000030d3a6e: mov    %r10,0x2a8(%r15)
  0x00000000030d3a75: movabs $0x0,%r10
  0x00000000030d3a7f: mov    %r10,0x2b0(%r15)
  0x00000000030d3a86: add    $0x30,%rsp
  0x00000000030d3a8a: pop    %rbp
  0x00000000030d3a8b: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030d3a90: hlt    
  0x00000000030d3a91: hlt    
  0x00000000030d3a92: hlt    
  0x00000000030d3a93: hlt    
  0x00000000030d3a94: hlt    
  0x00000000030d3a95: hlt    
  0x00000000030d3a96: hlt    
  0x00000000030d3a97: hlt    
  0x00000000030d3a98: hlt    
  0x00000000030d3a99: hlt    
  0x00000000030d3a9a: hlt    
  0x00000000030d3a9b: hlt    
  0x00000000030d3a9c: hlt    
  0x00000000030d3a9d: hlt    
  0x00000000030d3a9e: hlt    
  0x00000000030d3a9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030d3aa0: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030d3aa5: mov    %rsp,-0x28(%rsp)
  0x00000000030d3aaa: sub    $0x80,%rsp
  0x00000000030d3ab1: mov    %rax,0x78(%rsp)
  0x00000000030d3ab6: mov    %rcx,0x70(%rsp)
  0x00000000030d3abb: mov    %rdx,0x68(%rsp)
  0x00000000030d3ac0: mov    %rbx,0x60(%rsp)
  0x00000000030d3ac5: mov    %rbp,0x50(%rsp)
  0x00000000030d3aca: mov    %rsi,0x48(%rsp)
  0x00000000030d3acf: mov    %rdi,0x40(%rsp)
  0x00000000030d3ad4: mov    %r8,0x38(%rsp)
  0x00000000030d3ad9: mov    %r9,0x30(%rsp)
  0x00000000030d3ade: mov    %r10,0x28(%rsp)
  0x00000000030d3ae3: mov    %r11,0x20(%rsp)
  0x00000000030d3ae8: mov    %r12,0x18(%rsp)
  0x00000000030d3aed: mov    %r13,0x10(%rsp)
  0x00000000030d3af2: mov    %r14,0x8(%rsp)
  0x00000000030d3af7: mov    %r15,(%rsp)
  0x00000000030d3afb: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030d3b05: movabs $0x30d3aa5,%rdx    ;   {internal_word}
  0x00000000030d3b0f: mov    %rsp,%r8
  0x00000000030d3b12: and    $0xfffffffffffffff0,%rsp
  0x00000000030d3b16: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030d3b1b: hlt    
[Deopt Handler Code]
  0x00000000030d3b1c: movabs $0x30d3b1c,%r10    ;   {section_word}
  0x00000000030d3b26: push   %r10
  0x00000000030d3b28: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030d3b2d: hlt    
  0x00000000030d3b2e: hlt    
  0x00000000030d3b2f: hlt    
<nmethod compile_id='1' compiler='C1' level='1' entry='0x00000000030d3a20' size='704' address='0x00000000030d38d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='132' iicount='132' stamp='0.325'/>
<writer thread='20164'/>
<task_queued compile_id='2' method='java/lang/String lastIndexOf (II)I' bytes='52' count='128' backedge_count='5759' iicount='128' level='3' stamp='0.326' comment='tiered' hot_count='128'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31632'/>
</blob>
<writer thread='24112'/>
<task_queued compile_id='3' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='384' iicount='384' level='3' stamp='0.326' comment='tiered' hot_count='384'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030dbf50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x00000000030dc0e0: mov    0x8(%rdx),%r10d
  0x00000000030dc0e4: shl    $0x3,%r10
  0x00000000030dc0e8: cmp    %rax,%r10
  0x00000000030dc0eb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030dc0f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030dc0fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030dc100: mov    %eax,-0x6000(%rsp)
  0x00000000030dc107: push   %rbp
  0x00000000030dc108: sub    $0x40,%rsp
  0x00000000030dc10c: movabs $0x1744f3d8,%rax   ;   {metadata(method data for {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc116: mov    0xdc(%rax),%esi
  0x00000000030dc11c: add    $0x8,%esi
  0x00000000030dc11f: mov    %esi,0xdc(%rax)
  0x00000000030dc125: movabs $0x171b5350,%rax   ;   {metadata({method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc12f: and    $0x1ff8,%esi
  0x00000000030dc135: cmp    $0x0,%esi
  0x00000000030dc138: je     0x00000000030dc340  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1637)

  0x00000000030dc13e: cmp    $0x10000,%r8d
  0x00000000030dc145: movabs $0x1744f3d8,%rax   ;   {metadata(method data for {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc14f: movabs $0x108,%rsi
  0x00000000030dc159: jge    0x00000000030dc169
  0x00000000030dc15f: movabs $0x118,%rsi
  0x00000000030dc169: mov    (%rax,%rsi,1),%rdi
  0x00000000030dc16d: lea    0x1(%rdi),%rdi
  0x00000000030dc171: mov    %rdi,(%rax,%rsi,1)
  0x00000000030dc175: jge    0x00000000030dc315  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1637)

  0x00000000030dc17b: mov    0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1640)

  0x00000000030dc17e: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1641)
                                                ; implicit exception: dispatches to 0x00000000030dc357
  0x00000000030dc181: dec    %edx
  0x00000000030dc183: movabs $0x1744f3d8,%rsi   ;   {metadata(method data for {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc18d: addq   $0x1,0x128(%rsi)
  0x00000000030dc195: movabs $0x17397da0,%rsi   ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030dc19f: mov    0xdc(%rsi),%edi
  0x00000000030dc1a5: add    $0x8,%edi
  0x00000000030dc1a8: mov    %edi,0xdc(%rsi)
  0x00000000030dc1ae: movabs $0x17284698,%rsi   ;   {metadata({method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030dc1b8: and    $0x7ffff8,%edi
  0x00000000030dc1be: cmp    $0x0,%edi
  0x00000000030dc1c1: je     0x00000000030dc35c
  0x00000000030dc1c7: cmp    %edx,%r9d
  0x00000000030dc1ca: movabs $0x17397da0,%rsi   ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030dc1d4: movabs $0x108,%rdi
  0x00000000030dc1de: jg     0x00000000030dc1ee
  0x00000000030dc1e4: movabs $0x118,%rdi
  0x00000000030dc1ee: mov    (%rsi,%rdi,1),%rbx
  0x00000000030dc1f2: lea    0x1(%rbx),%rbx
  0x00000000030dc1f6: mov    %rbx,(%rsi,%rdi,1)
  0x00000000030dc1fa: jg     0x00000000030dc215  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1641)

  0x00000000030dc200: movabs $0x17397da0,%rdx   ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030dc20a: incl   0x128(%rdx)
  0x00000000030dc210: jmpq   0x00000000030dc2b6  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1641)

  0x00000000030dc215: mov    %rdx,%r9
  0x00000000030dc218: jmpq   0x00000000030dc2b6  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1641)

  0x00000000030dc21d: data16 xchg %ax,%ax
  0x00000000030dc220: movslq %r9d,%rdx
  0x00000000030dc223: cmp    0xc(%rax),%r9d
  0x00000000030dc227: jae    0x00000000030dc373
  0x00000000030dc22d: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1643)

  0x00000000030dc232: cmp    %r8d,%edx
  0x00000000030dc235: movabs $0x1744f3d8,%rdx   ;   {metadata(method data for {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc23f: movabs $0x158,%rsi
  0x00000000030dc249: jne    0x00000000030dc259
  0x00000000030dc24f: movabs $0x168,%rsi
  0x00000000030dc259: mov    (%rdx,%rsi,1),%rdi
  0x00000000030dc25d: lea    0x1(%rdi),%rdi
  0x00000000030dc261: mov    %rdi,(%rdx,%rsi,1)
  0x00000000030dc265: je     0x00000000030dc2f5  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1643)

  0x00000000030dc26b: dec    %r9d
  0x00000000030dc26e: movabs $0x1744f3d8,%rdx   ;   {metadata(method data for {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc278: mov    0xe0(%rdx),%esi
  0x00000000030dc27e: add    $0x8,%esi
  0x00000000030dc281: mov    %esi,0xe0(%rdx)
  0x00000000030dc287: movabs $0x171b5350,%rdx   ;   {metadata({method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc291: and    $0xfff8,%esi
  0x00000000030dc297: cmp    $0x0,%esi
  0x00000000030dc29a: je     0x00000000030dc37c  ; OopMap{rax=Oop off=448}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1642)

  0x00000000030dc2a0: test   %eax,-0x28ec1a6(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030dc2a6: movabs $0x1744f3d8,%rdx   ;   {metadata(method data for {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc2b0: incl   0x178(%rdx)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1642)

  0x00000000030dc2b6: cmp    $0x0,%r9d
  0x00000000030dc2ba: movabs $0x1744f3d8,%rdx   ;   {metadata(method data for {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc2c4: movabs $0x138,%rsi
  0x00000000030dc2ce: jl     0x00000000030dc2de
  0x00000000030dc2d4: movabs $0x148,%rsi
  0x00000000030dc2de: mov    (%rdx,%rsi,1),%rdi
  0x00000000030dc2e2: lea    0x1(%rdi),%rdi
  0x00000000030dc2e6: mov    %rdi,(%rdx,%rsi,1)
  0x00000000030dc2ea: jl     0x00000000030dc304
  0x00000000030dc2f0: jmpq   0x00000000030dc220  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1642)

  0x00000000030dc2f5: mov    %r9,%rax
  0x00000000030dc2f8: add    $0x40,%rsp
  0x00000000030dc2fc: pop    %rbp
  0x00000000030dc2fd: test   %eax,-0x28ec203(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dc303: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1644)

  0x00000000030dc304: mov    $0xffffffff,%eax
  0x00000000030dc309: add    $0x40,%rsp
  0x00000000030dc30d: pop    %rbp
  0x00000000030dc30e: test   %eax,-0x28ec214(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dc314: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1647)

  0x00000000030dc315: mov    %rdx,%rsi
  0x00000000030dc318: movabs $0x1744f3d8,%rdi   ;   {metadata(method data for {method} {0x00000000171b5358} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc322: addq   $0x1,0x190(%rdi)
  0x00000000030dc32a: nop
  0x00000000030dc32b: nop
  0x00000000030dc32c: nop
  0x00000000030dc32d: nop
  0x00000000030dc32e: nop
  0x00000000030dc32f: callq  0x00000000030161a0  ; OopMap{off=596}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1649)
                                                ;   {optimized virtual_call}
  0x00000000030dc334: add    $0x40,%rsp
  0x00000000030dc338: pop    %rbp
  0x00000000030dc339: test   %eax,-0x28ec23f(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dc33f: retq   
  0x00000000030dc340: mov    %rax,0x8(%rsp)
  0x00000000030dc345: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030dc34d: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=626}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1637)
                                                ;   {runtime_call}
  0x00000000030dc352: jmpq   0x00000000030dc13e
  0x00000000030dc357: callq  0x0000000003041280  ; OopMap{rax=Oop off=636}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1641)
                                                ;   {runtime_call}
  0x00000000030dc35c: mov    %rsi,0x8(%rsp)
  0x00000000030dc361: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030dc369: callq  0x00000000030d3220  ; OopMap{rax=Oop off=654}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1641)
                                                ;   {runtime_call}
  0x00000000030dc36e: jmpq   0x00000000030dc1c7
  0x00000000030dc373: mov    %r9,(%rsp)
  0x00000000030dc377: callq  0x0000000003041940  ; OopMap{rax=Oop off=668}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1643)
                                                ;   {runtime_call}
  0x00000000030dc37c: mov    %rdx,0x8(%rsp)
  0x00000000030dc381: movq   $0x28,(%rsp)
  0x00000000030dc389: callq  0x00000000030d3220  ; OopMap{rax=Oop off=686}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1642)
                                                ;   {runtime_call}
  0x00000000030dc38e: jmpq   0x00000000030dc2a0
  0x00000000030dc393: nop
  0x00000000030dc394: nop
  0x00000000030dc395: mov    0x2a8(%r15),%rax
  0x00000000030dc39c: movabs $0x0,%r10
  0x00000000030dc3a6: mov    %r10,0x2a8(%r15)
  0x00000000030dc3ad: movabs $0x0,%r10
  0x00000000030dc3b7: mov    %r10,0x2b0(%r15)
  0x00000000030dc3be: add    $0x40,%rsp
  0x00000000030dc3c2: pop    %rbp
  0x00000000030dc3c3: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030dc3c8: hlt    
  0x00000000030dc3c9: hlt    
  0x00000000030dc3ca: hlt    
  0x00000000030dc3cb: hlt    
  0x00000000030dc3cc: hlt    
  0x00000000030dc3cd: hlt    
  0x00000000030dc3ce: hlt    
  0x00000000030dc3cf: hlt    
  0x00000000030dc3d0: hlt    
  0x00000000030dc3d1: hlt    
  0x00000000030dc3d2: hlt    
  0x00000000030dc3d3: hlt    
  0x00000000030dc3d4: hlt    
  0x00000000030dc3d5: hlt    
  0x00000000030dc3d6: hlt    
  0x00000000030dc3d7: hlt    
  0x00000000030dc3d8: hlt    
  0x00000000030dc3d9: hlt    
  0x00000000030dc3da: hlt    
  0x00000000030dc3db: hlt    
  0x00000000030dc3dc: hlt    
  0x00000000030dc3dd: hlt    
  0x00000000030dc3de: hlt    
  0x00000000030dc3df: hlt    
[Stub Code]
  0x00000000030dc3e0: nop                       ;   {no_reloc}
  0x00000000030dc3e1: nop
  0x00000000030dc3e2: nop
  0x00000000030dc3e3: nop
  0x00000000030dc3e4: nop
  0x00000000030dc3e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030dc3ef: jmpq   0x00000000030dc3ef  ;   {runtime_call}
[Exception Handler]
  0x00000000030dc3f4: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030dc3f9: mov    %rsp,-0x28(%rsp)
  0x00000000030dc3fe: sub    $0x80,%rsp
  0x00000000030dc405: mov    %rax,0x78(%rsp)
  0x00000000030dc40a: mov    %rcx,0x70(%rsp)
  0x00000000030dc40f: mov    %rdx,0x68(%rsp)
  0x00000000030dc414: mov    %rbx,0x60(%rsp)
  0x00000000030dc419: mov    %rbp,0x50(%rsp)
  0x00000000030dc41e: mov    %rsi,0x48(%rsp)
  0x00000000030dc423: mov    %rdi,0x40(%rsp)
  0x00000000030dc428: mov    %r8,0x38(%rsp)
  0x00000000030dc42d: mov    %r9,0x30(%rsp)
  0x00000000030dc432: mov    %r10,0x28(%rsp)
  0x00000000030dc437: mov    %r11,0x20(%rsp)
  0x00000000030dc43c: mov    %r12,0x18(%rsp)
  0x00000000030dc441: mov    %r13,0x10(%rsp)
  0x00000000030dc446: mov    %r14,0x8(%rsp)
  0x00000000030dc44b: mov    %r15,(%rsp)
  0x00000000030dc44f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030dc459: movabs $0x30dc3f9,%rdx    ;   {internal_word}
  0x00000000030dc463: mov    %rsp,%r8
  0x00000000030dc466: and    $0xfffffffffffffff0,%rsp
  0x00000000030dc46a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030dc46f: hlt    
[Deopt Handler Code]
  0x00000000030dc470: movabs $0x30dc470,%r10    ;   {section_word}
  0x00000000030dc47a: push   %r10
  0x00000000030dc47c: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030dc481: hlt    
  0x00000000030dc482: hlt    
  0x00000000030dc483: hlt    
  0x00000000030dc484: hlt    
  0x00000000030dc485: hlt    
  0x00000000030dc486: hlt    
  0x00000000030dc487: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x00000000030dc0e0' size='1912' address='0x00000000030dbf50' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1352' scopes_pcs_offset='1536' dependencies_offset='1888' nul_chk_table_offset='1896' method='java/lang/String lastIndexOf (II)I' bytes='52' count='129' backedge_count='5786' iicount='129' stamp='0.794'/>
<writer thread='24112'/>
<task_queued compile_id='4' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='642' backedge_count='3029' iicount='642' level='3' stamp='0.794' comment='tiered' hot_count='640'/>
<task_queued compile_id='5' method='java/lang/String hashCode ()I' bytes='55' count='974' backedge_count='17408' iicount='974' level='3' stamp='0.794' comment='tiered' hot_count='974'/>
<writer thread='20164'/>
<task_queued compile_id='6' method='java/lang/String getChars (II[CI)V' bytes='62' count='768' iicount='768' level='3' stamp='0.794' comment='tiered' hot_count='768'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030dc710:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000030dc880: mov    0x8(%rdx),%r10d
  0x00000000030dc884: shl    $0x3,%r10
  0x00000000030dc888: cmp    %rax,%r10
  0x00000000030dc88b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030dc891: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030dc89c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030dc8a0: mov    %eax,-0x6000(%rsp)
  0x00000000030dc8a7: push   %rbp
  0x00000000030dc8a8: sub    $0x30,%rsp
  0x00000000030dc8ac: movabs $0x1738e838,%rax   ;   {metadata(method data for {method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc8b6: mov    0xdc(%rax),%esi
  0x00000000030dc8bc: add    $0x8,%esi
  0x00000000030dc8bf: mov    %esi,0xdc(%rax)
  0x00000000030dc8c5: movabs $0x171b4f80,%rax   ;   {metadata({method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc8cf: and    $0x1ff8,%esi
  0x00000000030dc8d5: cmp    $0x0,%esi
  0x00000000030dc8d8: je     0x00000000030dca11  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1454)

  0x00000000030dc8de: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1454)

  0x00000000030dc8e1: cmp    $0x0,%eax
  0x00000000030dc8e4: movabs $0x1738e838,%rsi   ;   {metadata(method data for {method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc8ee: movabs $0x108,%rdi
  0x00000000030dc8f8: jne    0x00000000030dc908
  0x00000000030dc8fe: movabs $0x118,%rdi
  0x00000000030dc908: mov    (%rsi,%rdi,1),%rbx
  0x00000000030dc90c: lea    0x1(%rbx),%rbx
  0x00000000030dc910: mov    %rbx,(%rsi,%rdi,1)
  0x00000000030dc914: jne    0x00000000030dca05  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1455)

  0x00000000030dc91a: mov    0xc(%rdx),%esi     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1455)

  0x00000000030dc91d: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ; implicit exception: dispatches to 0x00000000030dca28
  0x00000000030dc920: cmp    $0x0,%edi
  0x00000000030dc923: movabs $0x1738e838,%rbx   ;   {metadata(method data for {method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc92d: movabs $0x128,%rcx
  0x00000000030dc937: jle    0x00000000030dc947
  0x00000000030dc93d: movabs $0x138,%rcx
  0x00000000030dc947: mov    (%rbx,%rcx,1),%r8
  0x00000000030dc94b: lea    0x1(%r8),%r8
  0x00000000030dc94f: mov    %r8,(%rbx,%rcx,1)
  0x00000000030dc953: jle    0x00000000030dca05  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1455)

  0x00000000030dc959: mov    $0x0,%ebx
  0x00000000030dc95e: jmpq   0x00000000030dc9ca  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1458)

  0x00000000030dc963: nopl   0x0(%rax,%rax,1)
  0x00000000030dc968: movslq %ebx,%rcx
  0x00000000030dc96b: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1459)

  0x00000000030dc970: mov    %rax,%r8
  0x00000000030dc973: shl    $0x5,%eax
  0x00000000030dc976: sub    %r8d,%eax
  0x00000000030dc979: add    %ecx,%eax
  0x00000000030dc97b: inc    %ebx
  0x00000000030dc97d: movabs $0x1738e838,%rcx   ;   {metadata(method data for {method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc987: mov    0xe0(%rcx),%r8d
  0x00000000030dc98e: add    $0x8,%r8d
  0x00000000030dc992: mov    %r8d,0xe0(%rcx)
  0x00000000030dc999: movabs $0x171b4f80,%rcx   ;   {metadata({method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc9a3: and    $0xfff8,%r8d
  0x00000000030dc9aa: cmp    $0x0,%r8d
  0x00000000030dc9ae: je     0x00000000030dca2d  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)

  0x00000000030dc9b4: test   %eax,-0x28ec8ba(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030dc9ba: movabs $0x1738e838,%rcx   ;   {metadata(method data for {method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc9c4: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)

  0x00000000030dc9ca: cmp    %edi,%ebx
  0x00000000030dc9cc: movabs $0x1738e838,%rcx   ;   {metadata(method data for {method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dc9d6: movabs $0x148,%r8
  0x00000000030dc9e0: jge    0x00000000030dc9f0
  0x00000000030dc9e6: movabs $0x158,%r8
  0x00000000030dc9f0: mov    (%rcx,%r8,1),%r9
  0x00000000030dc9f4: lea    0x1(%r9),%r9
  0x00000000030dc9f8: mov    %r9,(%rcx,%r8,1)
  0x00000000030dc9fc: jl     0x00000000030dc968  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1458)

  0x00000000030dca02: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1461)

  0x00000000030dca05: add    $0x30,%rsp
  0x00000000030dca09: pop    %rbp
  0x00000000030dca0a: test   %eax,-0x28ec910(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dca10: retq   
  0x00000000030dca11: mov    %rax,0x8(%rsp)
  0x00000000030dca16: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030dca1e: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1454)
                                                ;   {runtime_call}
  0x00000000030dca23: jmpq   0x00000000030dc8de
  0x00000000030dca28: callq  0x0000000003041280  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ;   {runtime_call}
  0x00000000030dca2d: mov    %rcx,0x8(%rsp)
  0x00000000030dca32: movq   $0x2d,(%rsp)
  0x00000000030dca3a: callq  0x00000000030d3220  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1458)
                                                ;   {runtime_call}
  0x00000000030dca3f: jmpq   0x00000000030dc9b4
  0x00000000030dca44: nop
  0x00000000030dca45: nop
  0x00000000030dca46: mov    0x2a8(%r15),%rax
  0x00000000030dca4d: movabs $0x0,%r10
  0x00000000030dca57: mov    %r10,0x2a8(%r15)
  0x00000000030dca5e: movabs $0x0,%r10
  0x00000000030dca68: mov    %r10,0x2b0(%r15)
  0x00000000030dca6f: add    $0x30,%rsp
  0x00000000030dca73: pop    %rbp
  0x00000000030dca74: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030dca79: hlt    
  0x00000000030dca7a: hlt    
  0x00000000030dca7b: hlt    
  0x00000000030dca7c: hlt    
  0x00000000030dca7d: hlt    
  0x00000000030dca7e: hlt    
  0x00000000030dca7f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030dca80: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030dca85: mov    %rsp,-0x28(%rsp)
  0x00000000030dca8a: sub    $0x80,%rsp
  0x00000000030dca91: mov    %rax,0x78(%rsp)
  0x00000000030dca96: mov    %rcx,0x70(%rsp)
  0x00000000030dca9b: mov    %rdx,0x68(%rsp)
  0x00000000030dcaa0: mov    %rbx,0x60(%rsp)
  0x00000000030dcaa5: mov    %rbp,0x50(%rsp)
  0x00000000030dcaaa: mov    %rsi,0x48(%rsp)
  0x00000000030dcaaf: mov    %rdi,0x40(%rsp)
  0x00000000030dcab4: mov    %r8,0x38(%rsp)
  0x00000000030dcab9: mov    %r9,0x30(%rsp)
  0x00000000030dcabe: mov    %r10,0x28(%rsp)
  0x00000000030dcac3: mov    %r11,0x20(%rsp)
  0x00000000030dcac8: mov    %r12,0x18(%rsp)
  0x00000000030dcacd: mov    %r13,0x10(%rsp)
  0x00000000030dcad2: mov    %r14,0x8(%rsp)
  0x00000000030dcad7: mov    %r15,(%rsp)
  0x00000000030dcadb: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030dcae5: movabs $0x30dca85,%rdx    ;   {internal_word}
  0x00000000030dcaef: mov    %rsp,%r8
  0x00000000030dcaf2: and    $0xfffffffffffffff0,%rsp
  0x00000000030dcaf6: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030dcafb: hlt    
[Deopt Handler Code]
  0x00000000030dcafc: movabs $0x30dcafc,%r10    ;   {section_word}
  0x00000000030dcb06: push   %r10
  0x00000000030dcb08: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030dcb0d: hlt    
  0x00000000030dcb0e: hlt    
  0x00000000030dcb0f: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x00000000030dc880' size='1448' address='0x00000000030dc710' relocation_offset='288' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='984' backedge_count='17569' iicount='984' stamp='1.158'/>
<writer thread='1104'/>
<task_queued compile_id='7' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' level='1' stamp='1.158' comment='tiered' hot_count='256'/>
<writer thread='24112'/>
<task_queued compile_id='8' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='640' backedge_count='1149' iicount='640' level='3' stamp='1.158' comment='tiered' hot_count='640'/>
<task_queued compile_id='9' method='java/lang/String toCharArray ()[C' bytes='25' count='384' iicount='384' level='3' stamp='1.158' comment='tiered' hot_count='384'/>
<task_queued compile_id='10' method='java/lang/Math min (II)I' bytes='11' count='2304' iicount='2304' level='3' stamp='1.159' comment='tiered' hot_count='2304'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030dd0d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000030dd260: mov    0x8(%rdx),%r10d
  0x00000000030dd264: shl    $0x3,%r10
  0x00000000030dd268: cmp    %rax,%r10
  0x00000000030dd26b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030dd271: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030dd27c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030dd280: mov    %eax,-0x6000(%rsp)
  0x00000000030dd287: push   %rbp
  0x00000000030dd288: sub    $0x30,%rsp
  0x00000000030dd28c: movabs $0x174002a0,%rax   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd296: mov    0xdc(%rax),%esi
  0x00000000030dd29c: add    $0x8,%esi
  0x00000000030dd29f: mov    %esi,0xdc(%rax)
  0x00000000030dd2a5: movabs $0x171b45a0,%rax   ;   {metadata({method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd2af: and    $0x1ff8,%esi
  0x00000000030dd2b5: cmp    $0x0,%esi
  0x00000000030dd2b8: je     0x00000000030dd686  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 965)

  0x00000000030dd2be: cmp    %r8,%rdx
  0x00000000030dd2c1: movabs $0x174002a0,%rax   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd2cb: movabs $0x108,%rsi
  0x00000000030dd2d5: jne    0x00000000030dd2e5
  0x00000000030dd2db: movabs $0x118,%rsi
  0x00000000030dd2e5: mov    (%rax,%rsi,1),%rdi
  0x00000000030dd2e9: lea    0x1(%rdi),%rdi
  0x00000000030dd2ed: mov    %rdi,(%rax,%rsi,1)
  0x00000000030dd2f1: je     0x00000000030dd675  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 965)

  0x00000000030dd2f7: cmp    $0x0,%r8
  0x00000000030dd2fb: jne    0x00000000030dd316
  0x00000000030dd2fd: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd307: orl    $0x100,0x120(%rdi)
  0x00000000030dd311: jmpq   0x00000000030dd3d8
  0x00000000030dd316: movabs $0x1000016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000030dd320: mov    0x8(%r8),%esi
  0x00000000030dd324: shl    $0x3,%rsi
  0x00000000030dd328: cmp    %rsi,%rbx
  0x00000000030dd32b: jne    0x00000000030dd3bc
  0x00000000030dd331: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd33b: mov    0x8(%r8),%ebx
  0x00000000030dd33f: shl    $0x3,%rbx
  0x00000000030dd343: cmp    0x130(%rdi),%rbx
  0x00000000030dd34a: jne    0x00000000030dd359
  0x00000000030dd34c: addq   $0x1,0x138(%rdi)
  0x00000000030dd354: jmpq   0x00000000030dd3dd
  0x00000000030dd359: cmp    0x140(%rdi),%rbx
  0x00000000030dd360: jne    0x00000000030dd36f
  0x00000000030dd362: addq   $0x1,0x148(%rdi)
  0x00000000030dd36a: jmpq   0x00000000030dd3dd
  0x00000000030dd36f: cmpq   $0x0,0x130(%rdi)
  0x00000000030dd37a: jne    0x00000000030dd393
  0x00000000030dd37c: mov    %rbx,0x130(%rdi)
  0x00000000030dd383: movq   $0x1,0x138(%rdi)
  0x00000000030dd38e: jmpq   0x00000000030dd3dd
  0x00000000030dd393: cmpq   $0x0,0x140(%rdi)
  0x00000000030dd39e: jne    0x00000000030dd3b7
  0x00000000030dd3a0: mov    %rbx,0x140(%rdi)
  0x00000000030dd3a7: movq   $0x1,0x148(%rdi)
  0x00000000030dd3b2: jmpq   0x00000000030dd3dd
  0x00000000030dd3b7: jmpq   0x00000000030dd3dd
  0x00000000030dd3bc: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd3c6: subq   $0x1,0x128(%rdi)
  0x00000000030dd3ce: jmpq   0x00000000030dd3d8
  0x00000000030dd3d3: jmpq   0x00000000030dd3dd
  0x00000000030dd3d8: xor    %rax,%rax
  0x00000000030dd3db: jmp    0x00000000030dd3e7
  0x00000000030dd3dd: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 968)

  0x00000000030dd3e7: cmp    $0x0,%eax
  0x00000000030dd3ea: movabs $0x174002a0,%rax   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd3f4: movabs $0x158,%rsi
  0x00000000030dd3fe: je     0x00000000030dd40e
  0x00000000030dd404: movabs $0x168,%rsi
  0x00000000030dd40e: mov    (%rax,%rsi,1),%rdi
  0x00000000030dd412: lea    0x1(%rdi),%rdi
  0x00000000030dd416: mov    %rdi,(%rax,%rsi,1)
  0x00000000030dd41a: je     0x00000000030dd664  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 968)

  0x00000000030dd420: cmp    $0x0,%r8
  0x00000000030dd424: jne    0x00000000030dd43f
  0x00000000030dd426: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd430: orl    $0x100,0x170(%rdi)
  0x00000000030dd43a: jmpq   0x00000000030dd501
  0x00000000030dd43f: movabs $0x1000016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000030dd449: mov    0x8(%r8),%esi
  0x00000000030dd44d: shl    $0x3,%rsi
  0x00000000030dd451: cmp    %rsi,%rbx
  0x00000000030dd454: jne    0x00000000030dd4e5
  0x00000000030dd45a: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd464: mov    0x8(%r8),%ebx
  0x00000000030dd468: shl    $0x3,%rbx
  0x00000000030dd46c: cmp    0x180(%rdi),%rbx
  0x00000000030dd473: jne    0x00000000030dd482
  0x00000000030dd475: addq   $0x1,0x188(%rdi)
  0x00000000030dd47d: jmpq   0x00000000030dd501
  0x00000000030dd482: cmp    0x190(%rdi),%rbx
  0x00000000030dd489: jne    0x00000000030dd498
  0x00000000030dd48b: addq   $0x1,0x198(%rdi)
  0x00000000030dd493: jmpq   0x00000000030dd501
  0x00000000030dd498: cmpq   $0x0,0x180(%rdi)
  0x00000000030dd4a3: jne    0x00000000030dd4bc
  0x00000000030dd4a5: mov    %rbx,0x180(%rdi)
  0x00000000030dd4ac: movq   $0x1,0x188(%rdi)
  0x00000000030dd4b7: jmpq   0x00000000030dd501
  0x00000000030dd4bc: cmpq   $0x0,0x190(%rdi)
  0x00000000030dd4c7: jne    0x00000000030dd4e0
  0x00000000030dd4c9: mov    %rbx,0x190(%rdi)
  0x00000000030dd4d0: movq   $0x1,0x198(%rdi)
  0x00000000030dd4db: jmpq   0x00000000030dd501
  0x00000000030dd4e0: jmpq   0x00000000030dd501
  0x00000000030dd4e5: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd4ef: subq   $0x1,0x178(%rdi)
  0x00000000030dd4f7: jmpq   0x00000000030dd69d
  0x00000000030dd4fc: jmpq   0x00000000030dd501
  0x00000000030dd501: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15 (line 969)

  0x00000000030dd504: mov    0xc(%rdx),%esi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 970)

  0x00000000030dd507: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 970)
                                                ; implicit exception: dispatches to 0x00000000030dd6a6
  0x00000000030dd50a: mov    0xc(%rax),%eax     ;*getfield value
                                                ; - java.lang.String::equals@27 (line 971)
                                                ; implicit exception: dispatches to 0x00000000030dd6ab
  0x00000000030dd50d: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 971)
                                                ; implicit exception: dispatches to 0x00000000030dd6b0
  0x00000000030dd510: cmp    %ebx,%edi
  0x00000000030dd512: movabs $0x174002a0,%rbx   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd51c: movabs $0x1a8,%rdx
  0x00000000030dd526: jne    0x00000000030dd536
  0x00000000030dd52c: movabs $0x1b8,%rdx
  0x00000000030dd536: mov    (%rbx,%rdx,1),%rcx
  0x00000000030dd53a: lea    0x1(%rcx),%rcx
  0x00000000030dd53e: mov    %rcx,(%rbx,%rdx,1)
  0x00000000030dd542: jne    0x00000000030dd664  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 971)

  0x00000000030dd548: mov    $0x0,%ebx
  0x00000000030dd54d: jmpq   0x00000000030dd5ff  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 975)

  0x00000000030dd552: nopw   0x0(%rax,%rax,1)
  0x00000000030dd558: movslq %ebx,%rdi
  0x00000000030dd55b: cmp    0xc(%rsi),%ebx
  0x00000000030dd55e: jae    0x00000000030dd6b5
  0x00000000030dd564: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 976)

  0x00000000030dd569: movslq %ebx,%rcx
  0x00000000030dd56c: cmp    0xc(%rax),%ebx
  0x00000000030dd56f: jae    0x00000000030dd6be
  0x00000000030dd575: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 976)

  0x00000000030dd57a: cmp    %ecx,%edi
  0x00000000030dd57c: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd586: movabs $0x1e8,%rcx
  0x00000000030dd590: je     0x00000000030dd5a0
  0x00000000030dd596: movabs $0x1f8,%rcx
  0x00000000030dd5a0: mov    (%rdi,%rcx,1),%r8
  0x00000000030dd5a4: lea    0x1(%r8),%r8
  0x00000000030dd5a8: mov    %r8,(%rdi,%rcx,1)
  0x00000000030dd5ac: jne    0x00000000030dd642  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 976)

  0x00000000030dd5b2: inc    %ebx
  0x00000000030dd5b4: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd5be: mov    0xe0(%rdi),%ecx
  0x00000000030dd5c4: add    $0x8,%ecx
  0x00000000030dd5c7: mov    %ecx,0xe0(%rdi)
  0x00000000030dd5cd: movabs $0x171b45a0,%rdi   ;   {metadata({method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd5d7: and    $0xfff8,%ecx
  0x00000000030dd5dd: cmp    $0x0,%ecx
  0x00000000030dd5e0: je     0x00000000030dd6c7  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 978)

  0x00000000030dd5e6: test   %eax,-0x28ed4ec(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030dd5ec: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd5f6: incl   0x208(%rdi)
  0x00000000030dd5fc: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 978)

  0x00000000030dd5ff: mov    %rdi,%rdx
  0x00000000030dd602: dec    %edx
  0x00000000030dd604: cmp    $0x0,%edi
  0x00000000030dd607: movabs $0x174002a0,%rdi   ;   {metadata(method data for {method} {0x00000000171b45a8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030dd611: movabs $0x1c8,%rcx
  0x00000000030dd61b: je     0x00000000030dd62b
  0x00000000030dd621: movabs $0x1d8,%rcx
  0x00000000030dd62b: mov    (%rdi,%rcx,1),%r8
  0x00000000030dd62f: lea    0x1(%r8),%r8
  0x00000000030dd633: mov    %r8,(%rdi,%rcx,1)
  0x00000000030dd637: je     0x00000000030dd653
  0x00000000030dd63d: jmpq   0x00000000030dd558  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 975)

  0x00000000030dd642: mov    $0x0,%eax
  0x00000000030dd647: add    $0x30,%rsp
  0x00000000030dd64b: pop    %rbp
  0x00000000030dd64c: test   %eax,-0x28ed552(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dd652: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 977)

  0x00000000030dd653: mov    $0x1,%eax
  0x00000000030dd658: add    $0x30,%rsp
  0x00000000030dd65c: pop    %rbp
  0x00000000030dd65d: test   %eax,-0x28ed563(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dd663: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 980)

  0x00000000030dd664: mov    $0x0,%eax
  0x00000000030dd669: add    $0x30,%rsp
  0x00000000030dd66d: pop    %rbp
  0x00000000030dd66e: test   %eax,-0x28ed574(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dd674: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 983)

  0x00000000030dd675: mov    $0x1,%eax
  0x00000000030dd67a: add    $0x30,%rsp
  0x00000000030dd67e: pop    %rbp
  0x00000000030dd67f: test   %eax,-0x28ed585(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dd685: retq   
  0x00000000030dd686: mov    %rax,0x8(%rsp)
  0x00000000030dd68b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030dd693: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 965)
                                                ;   {runtime_call}
  0x00000000030dd698: jmpq   0x00000000030dd2be
  0x00000000030dd69d: mov    %r8,(%rsp)
  0x00000000030dd6a1: callq  0x00000000030d0d40  ; OopMap{rdx=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 969)
                                                ;   {runtime_call}
  0x00000000030dd6a6: callq  0x0000000003041280  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 970)
                                                ;   {runtime_call}
  0x00000000030dd6ab: callq  0x0000000003041280  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 971)
                                                ;   {runtime_call}
  0x00000000030dd6b0: callq  0x0000000003041280  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 971)
                                                ;   {runtime_call}
  0x00000000030dd6b5: mov    %rbx,(%rsp)
  0x00000000030dd6b9: callq  0x0000000003041940  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 976)
                                                ;   {runtime_call}
  0x00000000030dd6be: mov    %rbx,(%rsp)
  0x00000000030dd6c2: callq  0x0000000003041940  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 976)
                                                ;   {runtime_call}
  0x00000000030dd6c7: mov    %rdi,0x8(%rsp)
  0x00000000030dd6cc: movq   $0x4a,(%rsp)
  0x00000000030dd6d4: callq  0x00000000030d3220  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 978)
                                                ;   {runtime_call}
  0x00000000030dd6d9: jmpq   0x00000000030dd5e6
  0x00000000030dd6de: nop
  0x00000000030dd6df: nop
  0x00000000030dd6e0: mov    0x2a8(%r15),%rax
  0x00000000030dd6e7: movabs $0x0,%r10
  0x00000000030dd6f1: mov    %r10,0x2a8(%r15)
  0x00000000030dd6f8: movabs $0x0,%r10
  0x00000000030dd702: mov    %r10,0x2b0(%r15)
  0x00000000030dd709: add    $0x30,%rsp
  0x00000000030dd70d: pop    %rbp
  0x00000000030dd70e: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030dd713: hlt    
  0x00000000030dd714: hlt    
  0x00000000030dd715: hlt    
  0x00000000030dd716: hlt    
  0x00000000030dd717: hlt    
  0x00000000030dd718: hlt    
  0x00000000030dd719: hlt    
  0x00000000030dd71a: hlt    
  0x00000000030dd71b: hlt    
  0x00000000030dd71c: hlt    
  0x00000000030dd71d: hlt    
  0x00000000030dd71e: hlt    
  0x00000000030dd71f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030dd720: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030dd725: mov    %rsp,-0x28(%rsp)
  0x00000000030dd72a: sub    $0x80,%rsp
  0x00000000030dd731: mov    %rax,0x78(%rsp)
  0x00000000030dd736: mov    %rcx,0x70(%rsp)
  0x00000000030dd73b: mov    %rdx,0x68(%rsp)
  0x00000000030dd740: mov    %rbx,0x60(%rsp)
  0x00000000030dd745: mov    %rbp,0x50(%rsp)
  0x00000000030dd74a: mov    %rsi,0x48(%rsp)
  0x00000000030dd74f: mov    %rdi,0x40(%rsp)
  0x00000000030dd754: mov    %r8,0x38(%rsp)
  0x00000000030dd759: mov    %r9,0x30(%rsp)
  0x00000000030dd75e: mov    %r10,0x28(%rsp)
  0x00000000030dd763: mov    %r11,0x20(%rsp)
  0x00000000030dd768: mov    %r12,0x18(%rsp)
  0x00000000030dd76d: mov    %r13,0x10(%rsp)
  0x00000000030dd772: mov    %r14,0x8(%rsp)
  0x00000000030dd777: mov    %r15,(%rsp)
  0x00000000030dd77b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030dd785: movabs $0x30dd725,%rdx    ;   {internal_word}
  0x00000000030dd78f: mov    %rsp,%r8
  0x00000000030dd792: and    $0xfffffffffffffff0,%rsp
  0x00000000030dd796: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030dd79b: hlt    
[Deopt Handler Code]
  0x00000000030dd79c: movabs $0x30dd79c,%r10    ;   {section_word}
  0x00000000030dd7a6: push   %r10
  0x00000000030dd7a8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030dd7ad: hlt    
  0x00000000030dd7ae: hlt    
  0x00000000030dd7af: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x00000000030dd260' size='2504' address='0x00000000030dd0d0' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='696' backedge_count='3225' iicount='696' stamp='1.580'/>
<writer thread='1104'/>
<task_queued compile_id='11' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5248' iicount='5248' level='3' stamp='1.580' comment='tiered' hot_count='5248'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030ddad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000030ddc40: mov    0x8(%rdx),%r10d
  0x00000000030ddc44: shl    $0x3,%r10
  0x00000000030ddc48: cmp    %rax,%r10
  0x00000000030ddc4b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030ddc51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030ddc5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030ddc60: mov    %eax,-0x6000(%rsp)
  0x00000000030ddc67: push   %rbp
  0x00000000030ddc68: sub    $0x30,%rsp
  0x00000000030ddc6c: movabs $0x1742c620,%rax   ;   {metadata(method data for {method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ddc76: mov    0xdc(%rax),%esi
  0x00000000030ddc7c: add    $0x8,%esi
  0x00000000030ddc7f: mov    %esi,0xdc(%rax)
  0x00000000030ddc85: movabs $0x171b4d78,%rax   ;   {metadata({method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ddc8f: and    $0x1ff8,%esi
  0x00000000030ddc95: cmp    $0x0,%esi
  0x00000000030ddc98: je     0x00000000030dde4d  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1391)

  0x00000000030ddc9e: mov    0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1391)

  0x00000000030ddca1: mov    0xc(%r8),%esi      ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1393)
                                                ; implicit exception: dispatches to 0x00000000030dde64
  0x00000000030ddca5: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1395)
                                                ; implicit exception: dispatches to 0x00000000030dde69
  0x00000000030ddca8: cmp    $0x0,%r9d
  0x00000000030ddcac: movabs $0x1742c620,%rbx   ;   {metadata(method data for {method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ddcb6: movabs $0x108,%rdx
  0x00000000030ddcc0: jl     0x00000000030ddcd0
  0x00000000030ddcc6: movabs $0x118,%rdx
  0x00000000030ddcd0: mov    (%rbx,%rdx,1),%rcx
  0x00000000030ddcd4: lea    0x1(%rcx),%rcx
  0x00000000030ddcd8: mov    %rcx,(%rbx,%rdx,1)
  0x00000000030ddcdc: jl     0x00000000030dde1a  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1397)

  0x00000000030ddce2: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1397)
                                                ; implicit exception: dispatches to 0x00000000030dde6e
  0x00000000030ddce5: sub    %edi,%ebx
  0x00000000030ddce7: cmp    %ebx,%r9d
  0x00000000030ddcea: movabs $0x1742c620,%rbx   ;   {metadata(method data for {method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ddcf4: movabs $0x128,%rdx
  0x00000000030ddcfe: jle    0x00000000030ddd0e
  0x00000000030ddd04: movabs $0x138,%rdx
  0x00000000030ddd0e: mov    (%rbx,%rdx,1),%rcx
  0x00000000030ddd12: lea    0x1(%rcx),%rcx
  0x00000000030ddd16: mov    %rcx,(%rbx,%rdx,1)
  0x00000000030ddd1a: jg     0x00000000030dde1a  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1397)

  0x00000000030ddd20: mov    $0x0,%ebx
  0x00000000030ddd25: jmpq   0x00000000030dddda  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1400)

  0x00000000030ddd2a: nopw   0x0(%rax,%rax,1)
  0x00000000030ddd30: mov    %r9,%rdx
  0x00000000030ddd33: inc    %edx
  0x00000000030ddd35: movslq %r9d,%rcx
  0x00000000030ddd38: cmp    0xc(%rax),%r9d
  0x00000000030ddd3c: jae    0x00000000030dde73
  0x00000000030ddd42: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1401)

  0x00000000030ddd47: mov    %rbx,%r8
  0x00000000030ddd4a: inc    %r8d
  0x00000000030ddd4d: movslq %ebx,%r9
  0x00000000030ddd50: cmp    0xc(%rsi),%ebx
  0x00000000030ddd53: jae    0x00000000030dde7c
  0x00000000030ddd59: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1401)

  0x00000000030ddd5f: movabs $0x1742c620,%r9    ;   {metadata(method data for {method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ddd69: mov    0xe0(%r9),%r11d
  0x00000000030ddd70: add    $0x8,%r11d
  0x00000000030ddd74: mov    %r11d,0xe0(%r9)
  0x00000000030ddd7b: movabs $0x171b4d78,%r9    ;   {metadata({method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ddd85: and    $0xfff8,%r11d
  0x00000000030ddd8c: cmp    $0x0,%r11d
  0x00000000030ddd90: je     0x00000000030dde85  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1401)

  0x00000000030ddd96: test   %eax,-0x28edc9c(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030ddd9c: cmp    %ebx,%ecx
  0x00000000030ddd9e: movabs $0x1742c620,%rbx   ;   {metadata(method data for {method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ddda8: movabs $0x168,%rcx
  0x00000000030dddb2: je     0x00000000030dddc2
  0x00000000030dddb8: movabs $0x178,%rcx
  0x00000000030dddc2: mov    (%rbx,%rcx,1),%r9
  0x00000000030dddc6: lea    0x1(%r9),%r9
  0x00000000030dddca: mov    %r9,(%rbx,%rcx,1)
  0x00000000030dddce: jne    0x00000000030dde2b  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1401)

  0x00000000030dddd4: mov    %r8,%rbx
  0x00000000030dddd7: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1400)

  0x00000000030dddda: dec    %edi
  0x00000000030ddddc: cmp    $0x0,%edi
  0x00000000030ddddf: movabs $0x1742c620,%rdx   ;   {metadata(method data for {method} {0x00000000171b4d80} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ddde9: movabs $0x148,%rcx
  0x00000000030dddf3: jl     0x00000000030dde03
  0x00000000030dddf9: movabs $0x158,%rcx
  0x00000000030dde03: mov    (%rdx,%rcx,1),%r8
  0x00000000030dde07: lea    0x1(%r8),%r8
  0x00000000030dde0b: mov    %r8,(%rdx,%rcx,1)
  0x00000000030dde0f: jl     0x00000000030dde3c
  0x00000000030dde15: jmpq   0x00000000030ddd30  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1400)

  0x00000000030dde1a: mov    $0x0,%eax
  0x00000000030dde1f: add    $0x30,%rsp
  0x00000000030dde23: pop    %rbp
  0x00000000030dde24: test   %eax,-0x28edd2a(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dde2a: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1398)

  0x00000000030dde2b: mov    $0x0,%eax
  0x00000000030dde30: add    $0x30,%rsp
  0x00000000030dde34: pop    %rbp
  0x00000000030dde35: test   %eax,-0x28edd3b(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dde3b: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1402)

  0x00000000030dde3c: mov    $0x1,%eax
  0x00000000030dde41: add    $0x30,%rsp
  0x00000000030dde45: pop    %rbp
  0x00000000030dde46: test   %eax,-0x28edd4c(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dde4c: retq   
  0x00000000030dde4d: mov    %rax,0x8(%rsp)
  0x00000000030dde52: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030dde5a: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1391)
                                                ;   {runtime_call}
  0x00000000030dde5f: jmpq   0x00000000030ddc9e
  0x00000000030dde64: callq  0x0000000003041280  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1393)
                                                ;   {runtime_call}
  0x00000000030dde69: callq  0x0000000003041280  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1395)
                                                ;   {runtime_call}
  0x00000000030dde6e: callq  0x0000000003041280  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1397)
                                                ;   {runtime_call}
  0x00000000030dde73: mov    %r9,(%rsp)
  0x00000000030dde77: callq  0x0000000003041940  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1401)
                                                ;   {runtime_call}
  0x00000000030dde7c: mov    %rbx,(%rsp)
  0x00000000030dde80: callq  0x0000000003041940  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1401)
                                                ;   {runtime_call}
  0x00000000030dde85: mov    %r9,0x8(%rsp)
  0x00000000030dde8a: movq   $0x41,(%rsp)
  0x00000000030dde92: callq  0x00000000030d3220  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1401)
                                                ;   {runtime_call}
  0x00000000030dde97: jmpq   0x00000000030ddd96
  0x00000000030dde9c: nop
  0x00000000030dde9d: nop
  0x00000000030dde9e: mov    0x2a8(%r15),%rax
  0x00000000030ddea5: movabs $0x0,%r10
  0x00000000030ddeaf: mov    %r10,0x2a8(%r15)
  0x00000000030ddeb6: movabs $0x0,%r10
  0x00000000030ddec0: mov    %r10,0x2b0(%r15)
  0x00000000030ddec7: add    $0x30,%rsp
  0x00000000030ddecb: pop    %rbp
  0x00000000030ddecc: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030dded1: hlt    
  0x00000000030dded2: hlt    
  0x00000000030dded3: hlt    
  0x00000000030dded4: hlt    
  0x00000000030dded5: hlt    
  0x00000000030dded6: hlt    
  0x00000000030dded7: hlt    
  0x00000000030dded8: hlt    
  0x00000000030dded9: hlt    
  0x00000000030ddeda: hlt    
  0x00000000030ddedb: hlt    
  0x00000000030ddedc: hlt    
  0x00000000030ddedd: hlt    
  0x00000000030ddede: hlt    
  0x00000000030ddedf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030ddee0: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030ddee5: mov    %rsp,-0x28(%rsp)
  0x00000000030ddeea: sub    $0x80,%rsp
  0x00000000030ddef1: mov    %rax,0x78(%rsp)
  0x00000000030ddef6: mov    %rcx,0x70(%rsp)
  0x00000000030ddefb: mov    %rdx,0x68(%rsp)
  0x00000000030ddf00: mov    %rbx,0x60(%rsp)
  0x00000000030ddf05: mov    %rbp,0x50(%rsp)
  0x00000000030ddf0a: mov    %rsi,0x48(%rsp)
  0x00000000030ddf0f: mov    %rdi,0x40(%rsp)
  0x00000000030ddf14: mov    %r8,0x38(%rsp)
  0x00000000030ddf19: mov    %r9,0x30(%rsp)
  0x00000000030ddf1e: mov    %r10,0x28(%rsp)
  0x00000000030ddf23: mov    %r11,0x20(%rsp)
  0x00000000030ddf28: mov    %r12,0x18(%rsp)
  0x00000000030ddf2d: mov    %r13,0x10(%rsp)
  0x00000000030ddf32: mov    %r14,0x8(%rsp)
  0x00000000030ddf37: mov    %r15,(%rsp)
  0x00000000030ddf3b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030ddf45: movabs $0x30ddee5,%rdx    ;   {internal_word}
  0x00000000030ddf4f: mov    %rsp,%r8
  0x00000000030ddf52: and    $0xfffffffffffffff0,%rsp
  0x00000000030ddf56: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030ddf5b: hlt    
[Deopt Handler Code]
  0x00000000030ddf5c: movabs $0x30ddf5c,%r10    ;   {section_word}
  0x00000000030ddf66: push   %r10
  0x00000000030ddf68: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030ddf6d: hlt    
  0x00000000030ddf6e: hlt    
  0x00000000030ddf6f: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x00000000030ddc40' size='1824' address='0x00000000030ddad0' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='727' backedge_count='1260' iicount='727' stamp='1.871'/>
<writer thread='24112'/>
<task_queued compile_id='12' method='java/lang/String charAt (I)C' bytes='29' count='101638' iicount='101638' stamp='1.871' comment='tiered' hot_count='101632'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030de210:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000000030de360: mov    0x8(%rdx),%r10d
  0x00000000030de364: shl    $0x3,%r10
  0x00000000030de368: cmp    %rax,%r10
  0x00000000030de36b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030de371: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030de37c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030de380: mov    %eax,-0x6000(%rsp)
  0x00000000030de387: push   %rbp
  0x00000000030de388: sub    $0x50,%rsp
  0x00000000030de38c: movabs $0x172de480,%rcx   ;   {metadata(method data for {method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000030de396: mov    0xdc(%rcx),%esi
  0x00000000030de39c: add    $0x8,%esi
  0x00000000030de39f: mov    %esi,0xdc(%rcx)
  0x00000000030de3a5: movabs $0x171b0488,%rcx   ;   {metadata({method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000030de3af: and    $0x1ff8,%esi
  0x00000000030de3b5: cmp    $0x0,%esi
  0x00000000030de3b8: je     0x00000000030de3d7
  0x00000000030de3be: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000000030de3c1: mov    %rdx,0x40(%rsp)
  0x00000000030de3c6: callq  0x0000000003040fe0  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00000000030de3cb: add    $0x50,%rsp
  0x00000000030de3cf: pop    %rbp
  0x00000000030de3d0: test   %eax,-0x28ee2d6(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030de3d6: retq   
  0x00000000030de3d7: mov    %rcx,0x8(%rsp)
  0x00000000030de3dc: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030de3e4: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x00000000030de3e9: jmp    0x00000000030de3be
  0x00000000030de3eb: nop
  0x00000000030de3ec: nop
  0x00000000030de3ed: mov    0x2a8(%r15),%rax
  0x00000000030de3f4: movabs $0x0,%r10
  0x00000000030de3fe: mov    %r10,0x2a8(%r15)
  0x00000000030de405: movabs $0x0,%r10
  0x00000000030de40f: mov    %r10,0x2b0(%r15)
  0x00000000030de416: add    $0x50,%rsp
  0x00000000030de41a: pop    %rbp
  0x00000000030de41b: jmpq   0x0000000003041de0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00000000030de420: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030de425: mov    %rsp,-0x28(%rsp)
  0x00000000030de42a: sub    $0x80,%rsp
  0x00000000030de431: mov    %rax,0x78(%rsp)
  0x00000000030de436: mov    %rcx,0x70(%rsp)
  0x00000000030de43b: mov    %rdx,0x68(%rsp)
  0x00000000030de440: mov    %rbx,0x60(%rsp)
  0x00000000030de445: mov    %rbp,0x50(%rsp)
  0x00000000030de44a: mov    %rsi,0x48(%rsp)
  0x00000000030de44f: mov    %rdi,0x40(%rsp)
  0x00000000030de454: mov    %r8,0x38(%rsp)
  0x00000000030de459: mov    %r9,0x30(%rsp)
  0x00000000030de45e: mov    %r10,0x28(%rsp)
  0x00000000030de463: mov    %r11,0x20(%rsp)
  0x00000000030de468: mov    %r12,0x18(%rsp)
  0x00000000030de46d: mov    %r13,0x10(%rsp)
  0x00000000030de472: mov    %r14,0x8(%rsp)
  0x00000000030de477: mov    %r15,(%rsp)
  0x00000000030de47b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030de485: movabs $0x30de425,%rdx    ;   {internal_word}
  0x00000000030de48f: mov    %rsp,%r8
  0x00000000030de492: and    $0xfffffffffffffff0,%rsp
  0x00000000030de496: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030de49b: hlt    
[Deopt Handler Code]
  0x00000000030de49c: movabs $0x30de49c,%r10    ;   {section_word}
  0x00000000030de4a6: push   %r10
  0x00000000030de4a8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030de4ad: hlt    
  0x00000000030de4ae: hlt    
  0x00000000030de4af: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x00000000030de360' size='800' address='0x00000000030de210' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='792' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5262' iicount='5262' stamp='1.997'/>
<writer thread='24112'/>
Decoding compiled method 0x00000000030dfa50:
Code:
[Entry Point]
  # {method} {0x00000000171c95d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x00000000030dfbc0: mov    0x8(%rdx),%r10d
  0x00000000030dfbc4: shl    $0x3,%r10
  0x00000000030dfbc8: cmp    %r10,%rax
  0x00000000030dfbcb: je     0x00000000030dfbd8
  0x00000000030dfbd1: jmpq   0x0000000003015f60  ;   {runtime_call}
  0x00000000030dfbd6: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000030dfbd8: mov    %eax,-0x6000(%rsp)
  0x00000000030dfbdf: push   %rbp
  0x00000000030dfbe0: mov    %rsp,%rbp
  0x00000000030dfbe3: sub    $0x80,%rsp
  0x00000000030dfbea: mov    %rsi,0x30(%rsp)
  0x00000000030dfbef: mov    %rdi,0x28(%rsp)
  0x00000000030dfbf4: mov    %r9,0x48(%rsp)
  0x00000000030dfbf9: cmp    $0x0,%r9
  0x00000000030dfbfd: lea    0x48(%rsp),%rax
  0x00000000030dfc02: cmove  0x48(%rsp),%rax
  0x00000000030dfc08: mov    %rax,0x20(%rsp)
  0x00000000030dfc0d: mov    %r8,%r9
  0x00000000030dfc10: mov    %rdx,0x38(%rsp)
  0x00000000030dfc15: cmp    $0x0,%rdx
  0x00000000030dfc19: lea    0x38(%rsp),%r8
  0x00000000030dfc1e: cmove  0x38(%rsp),%r8
  0x00000000030dfc24: movabs $0xd5b80c78,%r14   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000030dfc2e: mov    %r14,0x68(%rsp)
  0x00000000030dfc33: lea    0x68(%rsp),%r14
  0x00000000030dfc38: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x00000000030dfc3b: movabs $0x30dfc3b,%r10    ;   {section_word}
  0x00000000030dfc45: mov    %r10,0x1e0(%r15)
  0x00000000030dfc4c: mov    %rsp,0x1d8(%r15)
  0x00000000030dfc53: cmpb   $0x0,0x5802a48d(%rip)        # 0x000000005b10a0e7
                                                ;   {external_word}
  0x00000000030dfc5a: je     0x00000000030dfca2
  0x00000000030dfc60: push   %rdx
  0x00000000030dfc61: push   %r8
  0x00000000030dfc63: push   %r9
  0x00000000030dfc65: movabs $0x171c95d0,%rdx   ;   {metadata({method} {0x00000000171c95d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000000030dfc6f: mov    %r15,%rcx
  0x00000000030dfc72: sub    $0x20,%rsp
  0x00000000030dfc76: test   $0xf,%esp
  0x00000000030dfc7c: je     0x00000000030dfc94
  0x00000000030dfc82: sub    $0x8,%rsp
  0x00000000030dfc86: callq  0x000000005ab38c80  ;   {runtime_call}
  0x00000000030dfc8b: add    $0x8,%rsp
  0x00000000030dfc8f: jmpq   0x00000000030dfc99
  0x00000000030dfc94: callq  0x000000005ab38c80  ;   {runtime_call}
  0x00000000030dfc99: add    $0x20,%rsp
  0x00000000030dfc9d: pop    %r9
  0x00000000030dfc9f: pop    %r8
  0x00000000030dfca1: pop    %rdx
  0x00000000030dfca2: lea    0x1f8(%r15),%rcx
  0x00000000030dfca9: movl   $0x4,0x270(%r15)
  0x00000000030dfcb4: callq  0x000000005a8e0476  ;   {runtime_call}
  0x00000000030dfcb9: vzeroupper 
  0x00000000030dfcbc: movl   $0x5,0x270(%r15)
  0x00000000030dfcc7: mov    %r15d,%ecx
  0x00000000030dfcca: shr    $0x4,%ecx
  0x00000000030dfccd: and    $0xffc,%ecx
  0x00000000030dfcd3: movabs $0xef0000,%r10     ;   {external_word}
  0x00000000030dfcdd: mov    %ecx,(%r10,%rcx,1)
  0x00000000030dfce1: cmpl   $0x0,0x5802afe5(%rip)        # 0x000000005b10acd0
                                                ;   {external_word}
  0x00000000030dfceb: jne    0x00000000030dfcff
  0x00000000030dfcf1: cmpl   $0x0,0x30(%r15)
  0x00000000030dfcf9: je     0x00000000030dfd18
  0x00000000030dfcff: mov    %r15,%rcx
  0x00000000030dfd02: mov    %rsp,%r12
  0x00000000030dfd05: sub    $0x20,%rsp
  0x00000000030dfd09: and    $0xfffffffffffffff0,%rsp
  0x00000000030dfd0d: callq  0x000000005ab4f0a0  ;   {runtime_call}
  0x00000000030dfd12: mov    %r12,%rsp
  0x00000000030dfd15: xor    %r12,%r12
  0x00000000030dfd18: movl   $0x8,0x270(%r15)
  0x00000000030dfd23: cmpl   $0x1,0x29c(%r15)
  0x00000000030dfd2e: je     0x00000000030dfdbe
  0x00000000030dfd34: cmpb   $0x0,0x5802a3ac(%rip)        # 0x000000005b10a0e7
                                                ;   {external_word}
  0x00000000030dfd3b: je     0x00000000030dfd79
  0x00000000030dfd41: movabs $0x171c95d0,%rdx   ;   {metadata({method} {0x00000000171c95d8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000000030dfd4b: mov    %r15,%rcx
  0x00000000030dfd4e: sub    $0x20,%rsp
  0x00000000030dfd52: test   $0xf,%esp
  0x00000000030dfd58: je     0x00000000030dfd70
  0x00000000030dfd5e: sub    $0x8,%rsp
  0x00000000030dfd62: callq  0x000000005ab38c80  ;   {runtime_call}
  0x00000000030dfd67: add    $0x8,%rsp
  0x00000000030dfd6b: jmpq   0x00000000030dfd75
  0x00000000030dfd70: callq  0x000000005ab38c80  ;   {runtime_call}
  0x00000000030dfd75: add    $0x20,%rsp
  0x00000000030dfd79: movabs $0x0,%r10
  0x00000000030dfd83: mov    %r10,0x1d8(%r15)
  0x00000000030dfd8a: movabs $0x0,%r10
  0x00000000030dfd94: mov    %r10,0x1e0(%r15)
  0x00000000030dfd9b: mov    0x38(%r15),%rcx
  0x00000000030dfd9f: movl   $0x0,0x100(%rcx)
  0x00000000030dfda9: leaveq 
  0x00000000030dfdaa: cmpq   $0x0,0x8(%r15)
  0x00000000030dfdb2: jne    0x00000000030dfdb9
  0x00000000030dfdb8: retq   
  0x00000000030dfdb9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000030dfdbe: mov    %rsp,%r12
  0x00000000030dfdc1: sub    $0x20,%rsp
  0x00000000030dfdc5: and    $0xfffffffffffffff0,%rsp
  0x00000000030dfdc9: callq  0x000000005ab38ca0  ;   {runtime_call}
  0x00000000030dfdce: mov    %r12,%rsp
  0x00000000030dfdd1: xor    %r12,%r12
  0x00000000030dfdd4: jmpq   0x00000000030dfd34
  0x00000000030dfdd9: hlt    
  0x00000000030dfdda: hlt    
  0x00000000030dfddb: hlt    
  0x00000000030dfddc: hlt    
  0x00000000030dfddd: hlt    
  0x00000000030dfdde: hlt    
  0x00000000030dfddf: hlt    
<nmethod compile_id='13' compile_kind='c2n' level='0' entry='0x00000000030dfbc0' size='912' address='0x00000000030dfa50' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='4224' iicount='4224' stamp='2.222'/>
<writer thread='22584'/>
Decoding compiled method 0x00000000030e15d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b3d40} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x00000000030e1720: mov    0x8(%rdx),%r10d
  0x00000000030e1724: shl    $0x3,%r10
  0x00000000030e1728: cmp    %r10,%rax
  0x00000000030e172b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e1731: data16 xchg %ax,%ax
  0x00000000030e1734: nopl   0x0(%rax,%rax,1)
  0x00000000030e173c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e1740: mov    %eax,-0x6000(%rsp)
  0x00000000030e1747: push   %rbp
  0x00000000030e1748: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 645)

  0x00000000030e174c: test   %r8d,%r8d
  0x00000000030e174f: jl     0x00000000030e1789  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)

  0x00000000030e1751: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 645)

  0x00000000030e1755: mov    0xc(%r10),%ebp     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ; implicit exception: dispatches to 0x00000000030e17b1
  0x00000000030e1759: cmp    %ebp,%r8d
  0x00000000030e175c: jge    0x00000000030e179d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)

  0x00000000030e175e: cmp    %ebp,%r8d
  0x00000000030e1761: jae    0x00000000030e1775
  0x00000000030e1763: movzwl 0x10(%r10,%r8,2),%eax
  0x00000000030e1769: add    $0x20,%rsp
  0x00000000030e176d: pop    %rbp
  0x00000000030e176e: test   %eax,-0x28f1774(%rip)        # 0x00000000007f0000
                                                ;   {poll_return}
  0x00000000030e1774: retq   
  0x00000000030e1775: mov    $0xffffffe4,%edx
  0x00000000030e177a: mov    %r8d,%ebp
  0x00000000030e177d: mov    %r10d,(%rsp)
  0x00000000030e1781: xchg   %ax,%ax
  0x00000000030e1783: callq  0x00000000030157a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ;   {runtime_call}
  0x00000000030e1788: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)

  0x00000000030e1789: mov    %rdx,%rbp
  0x00000000030e178c: mov    %r8d,0x4(%rsp)
  0x00000000030e1791: mov    $0xffffff65,%edx
  0x00000000030e1796: nop
  0x00000000030e1797: callq  0x00000000030157a0  ; OopMap{rbp=Oop off=124}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ;   {runtime_call}
  0x00000000030e179c: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)

  0x00000000030e179d: mov    %rdx,(%rsp)
  0x00000000030e17a1: mov    %r8d,0xc(%rsp)
  0x00000000030e17a6: mov    $0xffffff65,%edx
  0x00000000030e17ab: callq  0x00000000030157a0  ; OopMap{[0]=Oop off=144}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ;   {runtime_call}
  0x00000000030e17b0: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)

  0x00000000030e17b1: mov    $0xfffffff6,%edx
  0x00000000030e17b6: nop
  0x00000000030e17b7: callq  0x00000000030157a0  ; OopMap{off=156}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ;   {runtime_call}
  0x00000000030e17bc: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)

  0x00000000030e17bd: hlt    
  0x00000000030e17be: hlt    
  0x00000000030e17bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e17c0: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030e17c5: callq  0x00000000030e17ca
  0x00000000030e17ca: subq   $0x5,(%rsp)
  0x00000000030e17cf: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e17d4: hlt    
  0x00000000030e17d5: hlt    
  0x00000000030e17d6: hlt    
  0x00000000030e17d7: hlt    
<nmethod compile_id='12' compiler='C2' level='4' entry='0x00000000030e1720' size='896' address='0x00000000030e15d0' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='528' scopes_pcs_offset='632' dependencies_offset='872' nul_chk_table_offset='880' method='java/lang/String charAt (I)C' bytes='29' count='101690' iicount='101690' stamp='2.338'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030df690:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000030df7e0: mov    %eax,-0x6000(%rsp)
  0x00000000030df7e7: push   %rbp
  0x00000000030df7e8: sub    $0x30,%rsp
  0x00000000030df7ec: movabs $0x17397da0,%rax   ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030df7f6: mov    0xdc(%rax),%esi
  0x00000000030df7fc: add    $0x8,%esi
  0x00000000030df7ff: mov    %esi,0xdc(%rax)
  0x00000000030df805: movabs $0x17284698,%rax   ;   {metadata({method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030df80f: and    $0x1ff8,%esi
  0x00000000030df815: cmp    $0x0,%esi
  0x00000000030df818: je     0x00000000030df87e  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00000000030df81e: cmp    %r8d,%edx
  0x00000000030df821: movabs $0x17397da0,%rax   ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030df82b: movabs $0x108,%rsi
  0x00000000030df835: jg     0x00000000030df845
  0x00000000030df83b: movabs $0x118,%rsi
  0x00000000030df845: mov    (%rax,%rsi,1),%rdi
  0x00000000030df849: lea    0x1(%rdi),%rdi
  0x00000000030df84d: mov    %rdi,(%rax,%rsi,1)
  0x00000000030df851: jg     0x00000000030df86c  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x00000000030df857: movabs $0x17397da0,%rax   ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030df861: incl   0x128(%rax)
  0x00000000030df867: jmpq   0x00000000030df86f  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x00000000030df86c: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00000000030df86f: mov    %rdx,%rax
  0x00000000030df872: add    $0x30,%rsp
  0x00000000030df876: pop    %rbp
  0x00000000030df877: test   %eax,-0x28ef77d(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030df87d: retq   
  0x00000000030df87e: mov    %rax,0x8(%rsp)
  0x00000000030df883: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030df88b: callq  0x00000000030d3220  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00000000030df890: jmp    0x00000000030df81e
  0x00000000030df892: nop
  0x00000000030df893: nop
  0x00000000030df894: mov    0x2a8(%r15),%rax
  0x00000000030df89b: movabs $0x0,%r10
  0x00000000030df8a5: mov    %r10,0x2a8(%r15)
  0x00000000030df8ac: movabs $0x0,%r10
  0x00000000030df8b6: mov    %r10,0x2b0(%r15)
  0x00000000030df8bd: add    $0x30,%rsp
  0x00000000030df8c1: pop    %rbp
  0x00000000030df8c2: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030df8c7: hlt    
  0x00000000030df8c8: hlt    
  0x00000000030df8c9: hlt    
  0x00000000030df8ca: hlt    
  0x00000000030df8cb: hlt    
  0x00000000030df8cc: hlt    
  0x00000000030df8cd: hlt    
  0x00000000030df8ce: hlt    
  0x00000000030df8cf: hlt    
  0x00000000030df8d0: hlt    
  0x00000000030df8d1: hlt    
  0x00000000030df8d2: hlt    
  0x00000000030df8d3: hlt    
  0x00000000030df8d4: hlt    
  0x00000000030df8d5: hlt    
  0x00000000030df8d6: hlt    
  0x00000000030df8d7: hlt    
  0x00000000030df8d8: hlt    
  0x00000000030df8d9: hlt    
  0x00000000030df8da: hlt    
  0x00000000030df8db: hlt    
  0x00000000030df8dc: hlt    
  0x00000000030df8dd: hlt    
  0x00000000030df8de: hlt    
  0x00000000030df8df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030df8e0: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030df8e5: mov    %rsp,-0x28(%rsp)
  0x00000000030df8ea: sub    $0x80,%rsp
  0x00000000030df8f1: mov    %rax,0x78(%rsp)
  0x00000000030df8f6: mov    %rcx,0x70(%rsp)
  0x00000000030df8fb: mov    %rdx,0x68(%rsp)
  0x00000000030df900: mov    %rbx,0x60(%rsp)
  0x00000000030df905: mov    %rbp,0x50(%rsp)
  0x00000000030df90a: mov    %rsi,0x48(%rsp)
  0x00000000030df90f: mov    %rdi,0x40(%rsp)
  0x00000000030df914: mov    %r8,0x38(%rsp)
  0x00000000030df919: mov    %r9,0x30(%rsp)
  0x00000000030df91e: mov    %r10,0x28(%rsp)
  0x00000000030df923: mov    %r11,0x20(%rsp)
  0x00000000030df928: mov    %r12,0x18(%rsp)
  0x00000000030df92d: mov    %r13,0x10(%rsp)
  0x00000000030df932: mov    %r14,0x8(%rsp)
  0x00000000030df937: mov    %r15,(%rsp)
  0x00000000030df93b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030df945: movabs $0x30df8e5,%rdx    ;   {internal_word}
  0x00000000030df94f: mov    %rsp,%r8
  0x00000000030df952: and    $0xfffffffffffffff0,%rsp
  0x00000000030df956: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030df95b: hlt    
[Deopt Handler Code]
  0x00000000030df95c: movabs $0x30df95c,%r10    ;   {section_word}
  0x00000000030df966: push   %r10
  0x00000000030df968: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030df96d: hlt    
  0x00000000030df96e: hlt    
  0x00000000030df96f: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x00000000030df7e0' size='904' address='0x00000000030df690' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='2336' iicount='2336' stamp='2.484'/>
<writer thread='24112'/>
<task_queued compile_id='14' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6528' iicount='6528' stamp='2.484' comment='tiered' hot_count='6528'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030ded90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x00000000030def40: mov    0x8(%rdx),%r10d
  0x00000000030def44: shl    $0x3,%r10
  0x00000000030def48: cmp    %rax,%r10
  0x00000000030def4b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030def51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030def5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030def60: mov    %eax,-0x6000(%rsp)
  0x00000000030def67: push   %rbp
  0x00000000030def68: sub    $0x60,%rsp
  0x00000000030def6c: movabs $0x173f6550,%rbx   ;   {metadata(method data for {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030def76: mov    0xdc(%rbx),%eax
  0x00000000030def7c: add    $0x8,%eax
  0x00000000030def7f: mov    %eax,0xdc(%rbx)
  0x00000000030def85: movabs $0x171b4190,%rbx   ;   {metadata({method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030def8f: and    $0x1ff8,%eax
  0x00000000030def95: cmp    $0x0,%eax
  0x00000000030def98: je     0x00000000030df1c6  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 805)

  0x00000000030def9e: cmp    $0x0,%r8d
  0x00000000030defa2: movabs $0x173f6550,%rbx   ;   {metadata(method data for {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030defac: movabs $0x108,%rax
  0x00000000030defb6: jge    0x00000000030defc6
  0x00000000030defbc: movabs $0x118,%rax
  0x00000000030defc6: mov    (%rbx,%rax,1),%rcx
  0x00000000030defca: lea    0x1(%rcx),%rcx
  0x00000000030defce: mov    %rcx,(%rbx,%rax,1)
  0x00000000030defd2: jl     0x00000000030df186  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 805)

  0x00000000030defd8: mov    0xc(%rdx),%edx     ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 808)

  0x00000000030defdb: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 808)
                                                ; implicit exception: dispatches to 0x00000000030df1dd
  0x00000000030defde: cmp    %ebx,%r9d
  0x00000000030defe1: movabs $0x173f6550,%rbx   ;   {metadata(method data for {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030defeb: movabs $0x138,%rax
  0x00000000030deff5: jle    0x00000000030df005
  0x00000000030deffb: movabs $0x148,%rax
  0x00000000030df005: mov    (%rbx,%rax,1),%rcx
  0x00000000030df009: lea    0x1(%rcx),%rcx
  0x00000000030df00d: mov    %rcx,(%rbx,%rax,1)
  0x00000000030df011: jg     0x00000000030df146  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 808)

  0x00000000030df017: cmp    %r9d,%r8d
  0x00000000030df01a: movabs $0x173f6550,%rbx   ;   {metadata(method data for {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030df024: movabs $0x168,%rax
  0x00000000030df02e: jle    0x00000000030df03e
  0x00000000030df034: movabs $0x178,%rax
  0x00000000030df03e: mov    (%rbx,%rax,1),%rcx
  0x00000000030df042: lea    0x1(%rcx),%rcx
  0x00000000030df046: mov    %rcx,(%rbx,%rax,1)
  0x00000000030df04a: jg     0x00000000030df0fe  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 811)

  0x00000000030df050: movabs $0x173f6550,%rbx   ;   {metadata(method data for {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030df05a: addq   $0x1,0x198(%rbx)
  0x00000000030df062: mov    %r9,%rbx
  0x00000000030df065: sub    %r8d,%ebx
  0x00000000030df068: mov    %rdi,%r9
  0x00000000030df06b: mov    %rsi,%rdi
  0x00000000030df06e: mov    %rbx,%rsi
  0x00000000030df071: test   %r9,%r9
  0x00000000030df074: je     0x00000000030df1e2
  0x00000000030df07a: test   %r8d,%r8d
  0x00000000030df07d: jl     0x00000000030df1e2
  0x00000000030df083: test   %edi,%edi
  0x00000000030df085: jl     0x00000000030df1e2
  0x00000000030df08b: lea    (%r8,%rsi,1),%rcx
  0x00000000030df08f: cmp    0xc(%rdx),%ecx
  0x00000000030df092: ja     0x00000000030df1e2
  0x00000000030df098: lea    (%rdi,%rsi,1),%rcx
  0x00000000030df09c: cmp    0xc(%r9),%ecx
  0x00000000030df0a0: ja     0x00000000030df1e2
  0x00000000030df0a6: test   %esi,%esi
  0x00000000030df0a8: jl     0x00000000030df1e2
  0x00000000030df0ae: je     0x00000000030df0f2
  0x00000000030df0b4: movslq %r8d,%r8
  0x00000000030df0b7: movslq %edi,%rdi
  0x00000000030df0ba: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000030df0bf: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000030df0c4: mov    %rsi,%r8
  0x00000000030df0c7: sub    $0x20,%rsp
  0x00000000030df0cb: test   $0xf,%esp
  0x00000000030df0d1: je     0x00000000030df0e9
  0x00000000030df0d7: sub    $0x8,%rsp
  0x00000000030df0db: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000000030df0e0: add    $0x8,%rsp
  0x00000000030df0e4: jmpq   0x00000000030df0ee
  0x00000000030df0e9: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000000030df0ee: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 814)

  0x00000000030df0f2: add    $0x60,%rsp
  0x00000000030df0f6: pop    %rbp
  0x00000000030df0f7: test   %eax,-0x28eeffd(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030df0fd: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 815)

  0x00000000030df0fe: xchg   %ax,%ax
  0x00000000030df100: jmpq   0x00000000030df200  ;   {no_reloc}
  0x00000000030df105: add    %al,(%rax)
  0x00000000030df107: add    %al,(%rax)
  0x00000000030df109: add    %ch,%cl
  0x00000000030df10b: sti    
  0x00000000030df10c: add    %al,(%rax)
  0x00000000030df10e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 812)

  0x00000000030df111: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030df114: push   %rax
  0x00000000030df115: gs (bad) 
  0x00000000030df117: (bad)  
  0x00000000030df118: add    %al,(%rax)
  0x00000000030df11a: add    %al,(%rax)
  0x00000000030df11c: addq   $0x1,0x188(%rsi)
  0x00000000030df124: sub    %r8d,%r9d
  0x00000000030df127: mov    %r9,%r8
  0x00000000030df12a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 812)

  0x00000000030df12d: mov    %rax,0x38(%rsp)
  0x00000000030df132: nop
  0x00000000030df133: nop
  0x00000000030df134: nop
  0x00000000030df135: nop
  0x00000000030df136: nop
  0x00000000030df137: callq  0x00000000030161a0  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 812)
                                                ;   {optimized virtual_call}
  0x00000000030df13c: mov    0x38(%rsp),%rax
  0x00000000030df141: jmpq   0x00000000030df28e  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 812)

  0x00000000030df146: xchg   %ax,%ax
  0x00000000030df148: jmpq   0x00000000030df226  ;   {no_reloc}
  0x00000000030df14d: add    %al,(%rax)
  0x00000000030df14f: add    %al,(%rax)
  0x00000000030df151: add    %ch,%cl
  0x00000000030df153: flds   (%rax)
  0x00000000030df155: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 809)

  0x00000000030df157: mov    %rax,%r8
  0x00000000030df15a: movabs $0x173f6550,%rdx   ;   {metadata(method data for {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030df164: addq   $0x1,0x158(%rdx)
  0x00000000030df16c: mov    %r9,%r8
  0x00000000030df16f: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 809)

  0x00000000030df172: mov    %rax,0x40(%rsp)
  0x00000000030df177: callq  0x00000000030161a0  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 809)
                                                ;   {optimized virtual_call}
  0x00000000030df17c: mov    0x40(%rsp),%rax
  0x00000000030df181: jmpq   0x00000000030df28e  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 809)

  0x00000000030df186: xchg   %ax,%ax
  0x00000000030df188: jmpq   0x00000000030df24c  ;   {no_reloc}
  0x00000000030df18d: add    %al,(%rax)
  0x00000000030df18f: add    %al,(%rax)
  0x00000000030df191: add    %ch,%cl
  0x00000000030df193: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 806)

  0x00000000030df198: mov    %eax,%edx
  0x00000000030df19a: movabs $0x173f6550,%rsi   ;   {metadata(method data for {method} {0x00000000171b4198} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030df1a4: addq   $0x1,0x128(%rsi)
  0x00000000030df1ac: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 806)

  0x00000000030df1af: mov    %rax,0x48(%rsp)
  0x00000000030df1b4: nop
  0x00000000030df1b5: nop
  0x00000000030df1b6: nop
  0x00000000030df1b7: callq  0x00000000030161a0  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 806)
                                                ;   {optimized virtual_call}
  0x00000000030df1bc: mov    0x48(%rsp),%rax
  0x00000000030df1c1: jmpq   0x00000000030df28e
  0x00000000030df1c6: mov    %rbx,0x8(%rsp)
  0x00000000030df1cb: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030df1d3: callq  0x00000000030d3220  ; OopMap{rdx=Oop rdi=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 805)
                                                ;   {runtime_call}
  0x00000000030df1d8: jmpq   0x00000000030def9e
  0x00000000030df1dd: callq  0x0000000003041280  ; OopMap{rdi=Oop rdx=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 808)
                                                ;   {runtime_call}
  0x00000000030df1e2: nop
  0x00000000030df1e3: nop
  0x00000000030df1e4: nop
  0x00000000030df1e5: nop
  0x00000000030df1e6: nop
  0x00000000030df1e7: callq  0x0000000003016620  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 814)
                                                ;   {static_call}
  0x00000000030df1ec: jmpq   0x00000000030df0f2
  0x00000000030df1f1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030df1fb: mov    $0xa050f00,%eax
  0x00000000030df200: callq  0x00000000030d2160  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 812)
                                                ;   {runtime_call}
  0x00000000030df205: jmpq   0x00000000030df100
  0x00000000030df20a: mov    %rdx,%rdx
  0x00000000030df20d: callq  0x0000000003040d60  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 812)
                                                ;   {runtime_call}
  0x00000000030df212: jmpq   0x00000000030df10f
  0x00000000030df217: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030df221: mov    $0xa050f00,%eax
  0x00000000030df226: callq  0x00000000030d2160  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 809)
                                                ;   {runtime_call}
  0x00000000030df22b: jmpq   0x00000000030df148
  0x00000000030df230: mov    %rdx,%rdx
  0x00000000030df233: callq  0x0000000003040d60  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 809)
                                                ;   {runtime_call}
  0x00000000030df238: jmpq   0x00000000030df157
  0x00000000030df23d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030df247: mov    $0xa050f00,%eax
  0x00000000030df24c: callq  0x00000000030d2160  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 806)
                                                ;   {runtime_call}
  0x00000000030df251: jmpq   0x00000000030df188
  0x00000000030df256: mov    %rdx,%rdx
  0x00000000030df259: callq  0x0000000003040d60  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 806)
                                                ;   {runtime_call}
  0x00000000030df25e: jmpq   0x00000000030df197
  0x00000000030df263: nop
  0x00000000030df264: nop
  0x00000000030df265: mov    0x2a8(%r15),%rax
  0x00000000030df26c: movabs $0x0,%r10
  0x00000000030df276: mov    %r10,0x2a8(%r15)
  0x00000000030df27d: movabs $0x0,%r10
  0x00000000030df287: mov    %r10,0x2b0(%r15)
  0x00000000030df28e: add    $0x60,%rsp
  0x00000000030df292: pop    %rbp
  0x00000000030df293: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030df298: hlt    
  0x00000000030df299: hlt    
  0x00000000030df29a: hlt    
  0x00000000030df29b: hlt    
  0x00000000030df29c: hlt    
  0x00000000030df29d: hlt    
  0x00000000030df29e: hlt    
  0x00000000030df29f: hlt    
[Stub Code]
  0x00000000030df2a0: nop                       ;   {no_reloc}
  0x00000000030df2a1: nop
  0x00000000030df2a2: nop
  0x00000000030df2a3: nop
  0x00000000030df2a4: nop
  0x00000000030df2a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030df2af: jmpq   0x00000000030df2af  ;   {runtime_call}
  0x00000000030df2b4: nop
  0x00000000030df2b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030df2bf: jmpq   0x00000000030df2bf  ;   {runtime_call}
  0x00000000030df2c4: nop
  0x00000000030df2c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030df2cf: jmpq   0x00000000030df2cf  ;   {runtime_call}
  0x00000000030df2d4: nop
  0x00000000030df2d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030df2df: jmpq   0x00000000030df2df  ;   {runtime_call}
[Exception Handler]
  0x00000000030df2e4: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030df2e9: mov    %rsp,-0x28(%rsp)
  0x00000000030df2ee: sub    $0x80,%rsp
  0x00000000030df2f5: mov    %rax,0x78(%rsp)
  0x00000000030df2fa: mov    %rcx,0x70(%rsp)
  0x00000000030df2ff: mov    %rdx,0x68(%rsp)
  0x00000000030df304: mov    %rbx,0x60(%rsp)
  0x00000000030df309: mov    %rbp,0x50(%rsp)
  0x00000000030df30e: mov    %rsi,0x48(%rsp)
  0x00000000030df313: mov    %rdi,0x40(%rsp)
  0x00000000030df318: mov    %r8,0x38(%rsp)
  0x00000000030df31d: mov    %r9,0x30(%rsp)
  0x00000000030df322: mov    %r10,0x28(%rsp)
  0x00000000030df327: mov    %r11,0x20(%rsp)
  0x00000000030df32c: mov    %r12,0x18(%rsp)
  0x00000000030df331: mov    %r13,0x10(%rsp)
  0x00000000030df336: mov    %r14,0x8(%rsp)
  0x00000000030df33b: mov    %r15,(%rsp)
  0x00000000030df33f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030df349: movabs $0x30df2e9,%rdx    ;   {internal_word}
  0x00000000030df353: mov    %rsp,%r8
  0x00000000030df356: and    $0xfffffffffffffff0,%rsp
  0x00000000030df35a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030df35f: hlt    
[Deopt Handler Code]
  0x00000000030df360: movabs $0x30df360,%r10    ;   {section_word}
  0x00000000030df36a: push   %r10
  0x00000000030df36c: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030df371: hlt    
  0x00000000030df372: hlt    
  0x00000000030df373: hlt    
  0x00000000030df374: hlt    
  0x00000000030df375: hlt    
  0x00000000030df376: hlt    
  0x00000000030df377: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x00000000030def40' size='2256' address='0x00000000030ded90' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='785' iicount='785' stamp='2.875'/>
Decoding compiled method 0x00000000030dea90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000171c9420} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000030debe0: mov    %eax,-0x6000(%rsp)
  0x00000000030debe7: push   %rbp
  0x00000000030debe8: sub    $0x30,%rsp
  0x00000000030debec: movabs $0x17470570,%rax   ;   {metadata(method data for {method} {0x00000000171c9420} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000030debf6: mov    0xdc(%rax),%esi
  0x00000000030debfc: add    $0x8,%esi
  0x00000000030debff: mov    %esi,0xdc(%rax)
  0x00000000030dec05: movabs $0x171c9418,%rax   ;   {metadata({method} {0x00000000171c9420} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00000000030dec0f: and    $0x1ff8,%esi
  0x00000000030dec15: cmp    $0x0,%esi
  0x00000000030dec18: je     0x00000000030dec37
  0x00000000030dec1e: movabs $0xd5b80c78,%rax   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000030dec28: mov    0x74(%rax),%eax    ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x00000000030dec2b: add    $0x30,%rsp
  0x00000000030dec2f: pop    %rbp
  0x00000000030dec30: test   %eax,-0x28eeb36(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030dec36: retq   
  0x00000000030dec37: mov    %rax,0x8(%rsp)
  0x00000000030dec3c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030dec44: callq  0x00000000030d3220  ; OopMap{off=105}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x00000000030dec49: jmp    0x00000000030dec1e
  0x00000000030dec4b: nop
  0x00000000030dec4c: nop
  0x00000000030dec4d: mov    0x2a8(%r15),%rax
  0x00000000030dec54: movabs $0x0,%r10
  0x00000000030dec5e: mov    %r10,0x2a8(%r15)
  0x00000000030dec65: movabs $0x0,%r10
  0x00000000030dec6f: mov    %r10,0x2b0(%r15)
  0x00000000030dec76: add    $0x30,%rsp
  0x00000000030dec7a: pop    %rbp
  0x00000000030dec7b: jmpq   0x0000000003041de0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00000000030dec80: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030dec85: mov    %rsp,-0x28(%rsp)
  0x00000000030dec8a: sub    $0x80,%rsp
  0x00000000030dec91: mov    %rax,0x78(%rsp)
  0x00000000030dec96: mov    %rcx,0x70(%rsp)
  0x00000000030dec9b: mov    %rdx,0x68(%rsp)
  0x00000000030deca0: mov    %rbx,0x60(%rsp)
  0x00000000030deca5: mov    %rbp,0x50(%rsp)
  0x00000000030decaa: mov    %rsi,0x48(%rsp)
  0x00000000030decaf: mov    %rdi,0x40(%rsp)
  0x00000000030decb4: mov    %r8,0x38(%rsp)
  0x00000000030decb9: mov    %r9,0x30(%rsp)
  0x00000000030decbe: mov    %r10,0x28(%rsp)
  0x00000000030decc3: mov    %r11,0x20(%rsp)
  0x00000000030decc8: mov    %r12,0x18(%rsp)
  0x00000000030deccd: mov    %r13,0x10(%rsp)
  0x00000000030decd2: mov    %r14,0x8(%rsp)
  0x00000000030decd7: mov    %r15,(%rsp)
  0x00000000030decdb: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030dece5: movabs $0x30dec85,%rdx    ;   {internal_word}
  0x00000000030decef: mov    %rsp,%r8
  0x00000000030decf2: and    $0xfffffffffffffff0,%rsp
  0x00000000030decf6: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030decfb: hlt    
[Deopt Handler Code]
  0x00000000030decfc: movabs $0x30decfc,%r10    ;   {section_word}
  0x00000000030ded06: push   %r10
  0x00000000030ded08: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030ded0d: hlt    
  0x00000000030ded0e: hlt    
  0x00000000030ded0f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x00000000030debe0' size='736' address='0x00000000030dea90' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='648' scopes_pcs_offset='664' dependencies_offset='728' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='413' iicount='413' stamp='2.970'/>
<writer thread='24112'/>
<task_queued compile_id='15' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='3968' iicount='3968' level='3' stamp='2.970' comment='tiered' hot_count='3968'/>
<task_queued compile_id='16' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3584' iicount='3584' level='3' stamp='2.970' comment='tiered' hot_count='3584'/>
<task_queued compile_id='17' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='7296' iicount='7296' stamp='2.970' comment='tiered' hot_count='7296'/>
<writer thread='22584'/>
Decoding compiled method 0x00000000030e33d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000017224790} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x00000000030e3520: mov    0x8(%rdx),%r10d
  0x00000000030e3524: shl    $0x3,%r10
  0x00000000030e3528: cmp    %r10,%rax
  0x00000000030e352b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e3531: data16 xchg %ax,%ax
  0x00000000030e3534: nopl   0x0(%rax,%rax,1)
  0x00000000030e353c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e3540: mov    %eax,-0x6000(%rsp)
  0x00000000030e3547: push   %rbp
  0x00000000030e3548: sub    $0x80,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)

  0x00000000030e354f: mov    %r8d,0x20(%rsp)
  0x00000000030e3554: mov    %rdx,%rbx
  0x00000000030e3557: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e355a: mov    0xc(%rdi),%ebp     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; implicit exception: dispatches to 0x00000000030e3835
  0x00000000030e355d: mov    0xc(%rdx),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)

  0x00000000030e3561: mov    %r10d,%r11d
  0x00000000030e3564: sub    %ebp,%r11d
  0x00000000030e3567: mov    %rdi,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e356a: inc    %r11d
  0x00000000030e356d: mov    %r10d,%r9d
  0x00000000030e3570: inc    %r9d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 622)

  0x00000000030e3573: test   %r11d,%r11d
  0x00000000030e3576: jg     0x00000000030e35af  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3578: mov    %r9d,0xc(%rbx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)

  0x00000000030e357c: test   %r8,%r8
  0x00000000030e357f: je     0x00000000030e37a6
  0x00000000030e3585: mov    0xc(%r8),%r9d
  0x00000000030e3589: cmp    %r9d,%r10d
  0x00000000030e358c: jae    0x00000000030e37bd
  0x00000000030e3592: mov    0x20(%rsp),%r11d
  0x00000000030e3597: mov    %r11w,0x10(%r8,%r10,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)

  0x00000000030e359d: mov    %rbx,%rax
  0x00000000030e35a0: add    $0x80,%rsp
  0x00000000030e35a7: pop    %rbp
  0x00000000030e35a8: test   %eax,-0x28f35ae(%rip)        # 0x00000000007f0000
                                                ;   {poll_return}
  0x00000000030e35ae: retq   
  0x00000000030e35af: mov    %ebp,%r11d
  0x00000000030e35b2: shl    %r11d              ;*imul
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@6 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35b5: mov    %r11d,%ecx
  0x00000000030e35b8: sub    %r10d,%ecx
  0x00000000030e35bb: inc    %ecx
  0x00000000030e35bd: test   %ecx,%ecx
  0x00000000030e35bf: jge    0x00000000030e36d8  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35c5: test   %r9d,%r9d
  0x00000000030e35c8: jge    0x00000000030e35d9  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35ca: test   %r9d,%r9d
  0x00000000030e35cd: jl     0x00000000030e3826  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@23 (line 133)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35d3: mov    $0x7fffffff,%r9d   ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35d9: cmp    %r9d,%ebp
  0x00000000030e35dc: mov    %r9d,%r11d
  0x00000000030e35df: cmovl  %ebp,%r11d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35e3: movslq %r9d,%rsi
  0x00000000030e35e6: mov    %rdi,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35e9: shl    %rsi
  0x00000000030e35ec: add    $0x17,%rsi         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35f0: mov    %rsi,%rcx
  0x00000000030e35f3: shr    $0x3,%rcx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35f7: and    $0xfffffffffffffff8,%rsi  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e35fb: mov    %rcx,%rdx
  0x00000000030e35fe: add    $0xfffffffffffffffe,%rdx  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3602: cmp    $0x80000,%r9d
  0x00000000030e3609: ja     0x00000000030e3730
  0x00000000030e360f: mov    0x60(%r15),%r13
  0x00000000030e3613: mov    %r13,%r10
  0x00000000030e3616: add    %rsi,%r10
  0x00000000030e3619: cmp    0x70(%r15),%r10
  0x00000000030e361d: jae    0x00000000030e3730
  0x00000000030e3623: mov    %r10,0x60(%r15)
  0x00000000030e3627: prefetchw 0xc0(%r10)
  0x00000000030e362f: movq   $0x1,0x0(%r13)
  0x00000000030e3637: prefetchw 0x100(%r10)
  0x00000000030e363f: movl   $0x20000041,0x8(%r13)  ;   {metadata({type array char})}
  0x00000000030e3647: mov    %r9d,0xc(%r13)
  0x00000000030e364b: prefetchw 0x140(%r10)
  0x00000000030e3653: prefetchw 0x180(%r10)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e365b: mov    %r13,%r10
  0x00000000030e365e: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3662: mov    %r13,%r8           ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3665: mov    %r8d,0x24(%rsp)
  0x00000000030e366a: cmp    %r11d,%ebp
  0x00000000030e366d: jb     0x00000000030e37d5
  0x00000000030e3673: cmp    %r11d,%r9d
  0x00000000030e3676: jb     0x00000000030e37d5
  0x00000000030e367c: test   %r11d,%r11d
  0x00000000030e367f: jle    0x00000000030e3811
  0x00000000030e3685: lea    0x10(%rdi),%rdx
  0x00000000030e3689: cmp    %r9d,%r11d
  0x00000000030e368c: jl     0x00000000030e36ed
  0x00000000030e368e: add    $0xfffffffffffffff0,%rsi
  0x00000000030e3692: shr    $0x3,%rsi
  0x00000000030e3696: mov    %rdx,%rcx
  0x00000000030e3699: mov    %r10,%rdx
  0x00000000030e369c: mov    %rsi,%r8
  0x00000000030e369f: movabs $0x3022ac0,%r10
  0x00000000030e36a9: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e36ac: mov    0x24(%rsp),%r10d
  0x00000000030e36b1: mov    %r10d,0x10(%rbx)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e36b5: mov    0xc(%rbx),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)

  0x00000000030e36b9: mov    %rbx,%r8
  0x00000000030e36bc: mov    %r10d,%r9d
  0x00000000030e36bf: inc    %r9d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 623)

  0x00000000030e36c2: shr    $0x9,%r8
  0x00000000030e36c6: mov    $0x11f87000,%r11d
  0x00000000030e36cc: mov    %r12b,(%r11,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e36d0: mov    %r13,%r8
  0x00000000030e36d3: jmpq   0x00000000030e3578
  0x00000000030e36d8: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@8 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e36dc: test   %r11d,%r11d
  0x00000000030e36df: jl     0x00000000030e35ca  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e36e5: mov    %r11d,%r9d
  0x00000000030e36e8: jmpq   0x00000000030e35d9
  0x00000000030e36ed: movslq %r11d,%r8
  0x00000000030e36f0: mov    %r8,%r11
  0x00000000030e36f3: shl    %r11
  0x00000000030e36f6: add    $0x10,%r11
  0x00000000030e36fa: mov    %r11,%r9
  0x00000000030e36fd: and    $0xfffffffffffffff9,%r9
  0x00000000030e3701: mov    %r13,%rdi
  0x00000000030e3704: add    %r9,%rdi
  0x00000000030e3707: shr    $0x3,%r11
  0x00000000030e370b: sub    %r11,%rcx
  0x00000000030e370e: xor    %rax,%rax
  0x00000000030e3711: shl    $0x3,%rcx
  0x00000000030e3715: rep rex.W stos %al,%es:(%rdi)
  0x00000000030e3718: mov    %rdx,%rcx
  0x00000000030e371b: mov    %r10,%rdx
  0x00000000030e371e: movabs $0x30227c0,%r10
  0x00000000030e3728: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e372b: jmpq   0x00000000030e36ac
  0x00000000030e3730: mov    %edi,0x34(%rsp)
  0x00000000030e3734: mov    %rdx,0x50(%rsp)
  0x00000000030e3739: mov    %rcx,0x48(%rsp)
  0x00000000030e373e: mov    %rax,0x40(%rsp)
  0x00000000030e3743: mov    %rsi,0x38(%rsp)
  0x00000000030e3748: mov    %r11d,0x30(%rsp)
  0x00000000030e374d: mov    %r9d,0x24(%rsp)
  0x00000000030e3752: mov    %r8,%r10
  0x00000000030e3755: mov    %rbx,0x28(%rsp)
  0x00000000030e375a: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x00000000030e3764: mov    %r9d,%r8d
  0x00000000030e3767: mov    %r10,0x60(%rsp)
  0x00000000030e376c: data16 xchg %ax,%ax
  0x00000000030e376f: callq  0x000000000303fc20  ; OopMap{[40]=Oop [52]=NarrowOop [64]=Oop [96]=Oop off=596}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x00000000030e3774: mov    %rax,%r10
  0x00000000030e3777: mov    0x28(%rsp),%rbx
  0x00000000030e377c: mov    0x24(%rsp),%r9d
  0x00000000030e3781: mov    0x30(%rsp),%r11d
  0x00000000030e3786: mov    0x38(%rsp),%rsi
  0x00000000030e378b: mov    0x40(%rsp),%rax
  0x00000000030e3790: mov    0x48(%rsp),%rcx
  0x00000000030e3795: mov    0x50(%rsp),%rdx
  0x00000000030e379a: mov    %r10,%r13
  0x00000000030e379d: mov    0x34(%rsp),%edi
  0x00000000030e37a1: jmpq   0x00000000030e365b
  0x00000000030e37a6: mov    $0xfffffff6,%edx
  0x00000000030e37ab: mov    0x20(%rsp),%ebp
  0x00000000030e37af: mov    %r10d,0x20(%rsp)
  0x00000000030e37b4: data16 xchg %ax,%ax
  0x00000000030e37b7: callq  0x00000000030157a0  ; OopMap{off=668}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x00000000030e37bc: int3   
  0x00000000030e37bd: mov    $0xffffffe4,%edx
  0x00000000030e37c2: mov    %rbx,%rbp
  0x00000000030e37c5: mov    %r8,0x28(%rsp)
  0x00000000030e37ca: mov    %r10d,0x24(%rsp)
  0x00000000030e37cf: callq  0x00000000030157a0  ; OopMap{rbp=Oop [40]=Oop off=692}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ;   {runtime_call}
  0x00000000030e37d4: int3   
  0x00000000030e37d5: mov    %r13,0x28(%rsp)
  0x00000000030e37da: mov    %rax,%r8
  0x00000000030e37dd: mov    %rbx,%rbp
  0x00000000030e37e0: mov    %rdx,%rcx
  0x00000000030e37e3: mov    %r10,%rdi
  0x00000000030e37e6: xor    %rax,%rax
  0x00000000030e37e9: shl    $0x3,%rcx
  0x00000000030e37ed: rep rex.W stos %al,%es:(%rdi)
  0x00000000030e37f0: mov    %r8,%rdx
  0x00000000030e37f3: xor    %r8d,%r8d
  0x00000000030e37f6: mov    %r13,%r9
  0x00000000030e37f9: xor    %edi,%edi
  0x00000000030e37fb: mov    %r11d,%esi
  0x00000000030e37fe: nop
  0x00000000030e37ff: callq  0x0000000003042e60  ; OopMap{rbp=Oop [36]=NarrowOop [40]=Oop off=740}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x00000000030e3804: mov    %rbp,%rbx
  0x00000000030e3807: mov    0x28(%rsp),%r13
  0x00000000030e380c: jmpq   0x00000000030e36ac
  0x00000000030e3811: mov    %rdx,%rcx
  0x00000000030e3814: mov    %r10,%rdi
  0x00000000030e3817: xor    %rax,%rax
  0x00000000030e381a: shl    $0x3,%rcx
  0x00000000030e381e: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3821: jmpq   0x00000000030e36ac
  0x00000000030e3826: mov    $0x8d,%edx
  0x00000000030e382b: mov    %rbx,%rbp
  0x00000000030e382e: nop
  0x00000000030e382f: callq  0x00000000030157a0  ; OopMap{rbp=Oop off=788}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x00000000030e3834: int3                      ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3835: mov    $0xfffffff6,%edx
  0x00000000030e383a: nop
  0x00000000030e383b: callq  0x00000000030157a0  ; OopMap{off=800}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x00000000030e3840: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3841: mov    %rax,%rdx
  0x00000000030e3844: jmp    0x00000000030e3849  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3846: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@-1 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)

  0x00000000030e3849: add    $0x80,%rsp
  0x00000000030e3850: pop    %rbp
  0x00000000030e3851: jmpq   0x0000000003042d60  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@18 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ;   {runtime_call}
  0x00000000030e3856: hlt    
  0x00000000030e3857: hlt    
  0x00000000030e3858: hlt    
  0x00000000030e3859: hlt    
  0x00000000030e385a: hlt    
  0x00000000030e385b: hlt    
  0x00000000030e385c: hlt    
  0x00000000030e385d: hlt    
  0x00000000030e385e: hlt    
  0x00000000030e385f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e3860: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030e3865: callq  0x00000000030e386a
  0x00000000030e386a: subq   $0x5,(%rsp)
  0x00000000030e386f: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e3874: hlt    
  0x00000000030e3875: hlt    
  0x00000000030e3876: hlt    
  0x00000000030e3877: hlt    
<nmethod compile_id='14' compiler='C2' level='4' entry='0x00000000030e3520' size='2352' address='0x00000000030e33d0' relocation_offset='288' insts_offset='336' stub_offset='1168' scopes_data_offset='1232' scopes_pcs_offset='1560' dependencies_offset='2280' handler_table_offset='2288' nul_chk_table_offset='2336' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='6613' iicount='6613' stamp='3.447'/>
<writer thread='24112'/>
<task_queued compile_id='18' method='java/lang/String length ()I' bytes='6' count='27520' iicount='27520' stamp='3.449' comment='tiered' hot_count='27520'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e0f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000017325ce0} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x00000000030e10e0: mov    0x8(%rdx),%r10d
  0x00000000030e10e4: shl    $0x3,%r10
  0x00000000030e10e8: cmp    %rax,%r10
  0x00000000030e10eb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e10f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e10fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e1100: mov    %eax,-0x6000(%rsp)
  0x00000000030e1107: push   %rbp
  0x00000000030e1108: sub    $0x30,%rsp
  0x00000000030e110c: movabs $0x173ab3e0,%rax   ;   {metadata(method data for {method} {0x0000000017325ce0} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e1116: mov    0xdc(%rax),%esi
  0x00000000030e111c: add    $0x8,%esi
  0x00000000030e111f: mov    %esi,0xdc(%rax)
  0x00000000030e1125: movabs $0x17325cd8,%rax   ;   {metadata({method} {0x0000000017325ce0} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e112f: and    $0x1ff8,%esi
  0x00000000030e1135: cmp    $0x0,%esi
  0x00000000030e1138: je     0x00000000030e11e4  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)

  0x00000000030e113e: cmp    $0x5c,%r8d
  0x00000000030e1142: movabs $0x173ab3e0,%rax   ;   {metadata(method data for {method} {0x0000000017325ce0} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e114c: movabs $0x108,%rsi
  0x00000000030e1156: je     0x00000000030e1166
  0x00000000030e115c: movabs $0x118,%rsi
  0x00000000030e1166: mov    (%rax,%rsi,1),%rdi
  0x00000000030e116a: lea    0x1(%rdi),%rdi
  0x00000000030e116e: mov    %rdi,(%rax,%rsi,1)
  0x00000000030e1172: je     0x00000000030e11b2  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x00000000030e1178: cmp    $0x2f,%r8d
  0x00000000030e117c: movabs $0x173ab3e0,%rax   ;   {metadata(method data for {method} {0x0000000017325ce0} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e1186: movabs $0x128,%rsi
  0x00000000030e1190: jne    0x00000000030e11a0
  0x00000000030e1196: movabs $0x138,%rsi
  0x00000000030e11a0: mov    (%rax,%rsi,1),%rdi
  0x00000000030e11a4: lea    0x1(%rdi),%rdi
  0x00000000030e11a8: mov    %rdi,(%rax,%rsi,1)
  0x00000000030e11ac: jne    0x00000000030e11d3  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x00000000030e11b2: movabs $0x173ab3e0,%rax   ;   {metadata(method data for {method} {0x0000000017325ce0} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e11bc: incl   0x148(%rax)
  0x00000000030e11c2: mov    $0x1,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x00000000030e11c7: add    $0x30,%rsp
  0x00000000030e11cb: pop    %rbp
  0x00000000030e11cc: test   %eax,-0x28f10d2(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e11d2: retq   
  0x00000000030e11d3: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)

  0x00000000030e11d8: add    $0x30,%rsp
  0x00000000030e11dc: pop    %rbp
  0x00000000030e11dd: test   %eax,-0x28f10e3(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e11e3: retq   
  0x00000000030e11e4: mov    %rax,0x8(%rsp)
  0x00000000030e11e9: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e11f1: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=278}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ;   {runtime_call}
  0x00000000030e11f6: jmpq   0x00000000030e113e
  0x00000000030e11fb: nop
  0x00000000030e11fc: nop
  0x00000000030e11fd: mov    0x2a8(%r15),%rax
  0x00000000030e1204: movabs $0x0,%r10
  0x00000000030e120e: mov    %r10,0x2a8(%r15)
  0x00000000030e1215: movabs $0x0,%r10
  0x00000000030e121f: mov    %r10,0x2b0(%r15)
  0x00000000030e1226: add    $0x30,%rsp
  0x00000000030e122a: pop    %rbp
  0x00000000030e122b: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e1230: hlt    
  0x00000000030e1231: hlt    
  0x00000000030e1232: hlt    
  0x00000000030e1233: hlt    
  0x00000000030e1234: hlt    
  0x00000000030e1235: hlt    
  0x00000000030e1236: hlt    
  0x00000000030e1237: hlt    
  0x00000000030e1238: hlt    
  0x00000000030e1239: hlt    
  0x00000000030e123a: hlt    
  0x00000000030e123b: hlt    
  0x00000000030e123c: hlt    
  0x00000000030e123d: hlt    
  0x00000000030e123e: hlt    
  0x00000000030e123f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e1240: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030e1245: mov    %rsp,-0x28(%rsp)
  0x00000000030e124a: sub    $0x80,%rsp
  0x00000000030e1251: mov    %rax,0x78(%rsp)
  0x00000000030e1256: mov    %rcx,0x70(%rsp)
  0x00000000030e125b: mov    %rdx,0x68(%rsp)
  0x00000000030e1260: mov    %rbx,0x60(%rsp)
  0x00000000030e1265: mov    %rbp,0x50(%rsp)
  0x00000000030e126a: mov    %rsi,0x48(%rsp)
  0x00000000030e126f: mov    %rdi,0x40(%rsp)
  0x00000000030e1274: mov    %r8,0x38(%rsp)
  0x00000000030e1279: mov    %r9,0x30(%rsp)
  0x00000000030e127e: mov    %r10,0x28(%rsp)
  0x00000000030e1283: mov    %r11,0x20(%rsp)
  0x00000000030e1288: mov    %r12,0x18(%rsp)
  0x00000000030e128d: mov    %r13,0x10(%rsp)
  0x00000000030e1292: mov    %r14,0x8(%rsp)
  0x00000000030e1297: mov    %r15,(%rsp)
  0x00000000030e129b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e12a5: movabs $0x30e1245,%rdx    ;   {internal_word}
  0x00000000030e12af: mov    %rsp,%r8
  0x00000000030e12b2: and    $0xfffffffffffffff0,%rsp
  0x00000000030e12b6: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e12bb: hlt    
[Deopt Handler Code]
  0x00000000030e12bc: movabs $0x30e12bc,%r10    ;   {section_word}
  0x00000000030e12c6: push   %r10
  0x00000000030e12c8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e12cd: hlt    
  0x00000000030e12ce: hlt    
  0x00000000030e12cf: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x00000000030e10e0' size='1024' address='0x00000000030e0f90' relocation_offset='288' insts_offset='336' stub_offset='688' scopes_data_offset='840' scopes_pcs_offset='888' dependencies_offset='1016' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='4065' iicount='4065' stamp='3.611'/>
<writer thread='10816'/>
Decoding compiled method 0x00000000030e0850:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00000000030e09a0: mov    0x8(%rdx),%r10d
  0x00000000030e09a4: shl    $0x3,%r10
  0x00000000030e09a8: cmp    %r10,%rax
  0x00000000030e09ab: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e09b1: data16 xchg %ax,%ax
  0x00000000030e09b4: nopl   0x0(%rax,%rax,1)
  0x00000000030e09bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e09c0: mov    %eax,-0x6000(%rsp)
  0x00000000030e09c7: push   %rbp
  0x00000000030e09c8: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)

  0x00000000030e09cc: mov    %rdx,0x40(%rsp)
  0x00000000030e09d1: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)

  0x00000000030e09d4: mov    0xc(%rdi),%ebp     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; implicit exception: dispatches to 0x00000000030e0bf9
  0x00000000030e09d7: mov    %r8d,%r10d
  0x00000000030e09da: sub    %ebp,%r10d
  0x00000000030e09dd: test   %r10d,%r10d
  0x00000000030e09e0: jg     0x00000000030e09ee  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)

  0x00000000030e09e2: add    $0x60,%rsp
  0x00000000030e09e6: pop    %rbp
  0x00000000030e09e7: test   %eax,-0x28f09ed(%rip)        # 0x00000000007f0000
                                                ;   {poll_return}
  0x00000000030e09ed: retq   
  0x00000000030e09ee: mov    %ebp,%r11d
  0x00000000030e09f1: shl    %r11d              ;*imul
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@6 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e09f4: mov    %r11d,%r9d
  0x00000000030e09f7: sub    %r8d,%r9d
  0x00000000030e09fa: add    $0x2,%r9d
  0x00000000030e09fe: test   %r9d,%r9d
  0x00000000030e0a01: jge    0x00000000030e0b08  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0a07: mov    %r8d,%r9d
  0x00000000030e0a0a: test   %r8d,%r8d
  0x00000000030e0a0d: jl     0x00000000030e0a14
  0x00000000030e0a0f: jmp    0x00000000030e0a23
  0x00000000030e0a11: mov    %r8d,%r9d          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0a14: test   %r9d,%r9d
  0x00000000030e0a17: jl     0x00000000030e0bec  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@23 (line 133)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0a1d: mov    $0x7fffffff,%r9d   ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0a23: movslq %r9d,%r11
  0x00000000030e0a26: shl    %r11
  0x00000000030e0a29: add    $0x17,%r11
  0x00000000030e0a2d: mov    %r11,%rax
  0x00000000030e0a30: and    $0xfffffffffffffff8,%rax
  0x00000000030e0a34: cmp    $0x80000,%r9d
  0x00000000030e0a3b: ja     0x00000000030e0b60
  0x00000000030e0a41: mov    0x60(%r15),%rbx
  0x00000000030e0a45: mov    %rbx,%r10
  0x00000000030e0a48: add    %rax,%r10
  0x00000000030e0a4b: cmp    0x70(%r15),%r10
  0x00000000030e0a4f: jae    0x00000000030e0b60
  0x00000000030e0a55: mov    %r10,0x60(%r15)
  0x00000000030e0a59: prefetchw 0xc0(%r10)
  0x00000000030e0a61: movq   $0x1,(%rbx)
  0x00000000030e0a68: prefetchw 0x100(%r10)
  0x00000000030e0a70: movl   $0x20000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x00000000030e0a77: mov    %r9d,0xc(%rbx)
  0x00000000030e0a7b: prefetchw 0x140(%r10)
  0x00000000030e0a83: prefetchw 0x180(%r10)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0a8b: cmp    %r9d,%ebp
  0x00000000030e0a8e: mov    %r9d,%esi
  0x00000000030e0a91: cmovl  %ebp,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0a94: mov    %rbx,%r10
  0x00000000030e0a97: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0a9b: mov    %rdi,%rdx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)

  0x00000000030e0a9e: shr    $0x3,%r11
  0x00000000030e0aa2: mov    %r11,%rcx
  0x00000000030e0aa5: add    $0xfffffffffffffffe,%rcx
  0x00000000030e0aa9: cmp    %esi,%ebp
  0x00000000030e0aab: jb     0x00000000030e0baa
  0x00000000030e0ab1: cmp    %esi,%r9d
  0x00000000030e0ab4: jb     0x00000000030e0baa
  0x00000000030e0aba: test   %esi,%esi
  0x00000000030e0abc: jle    0x00000000030e0bda
  0x00000000030e0ac2: lea    0x10(%rdi),%rdx
  0x00000000030e0ac6: cmp    %r9d,%esi
  0x00000000030e0ac9: jl     0x00000000030e0b1d
  0x00000000030e0acb: add    $0xfffffffffffffff0,%rax
  0x00000000030e0acf: shr    $0x3,%rax
  0x00000000030e0ad3: mov    %rdx,%rcx
  0x00000000030e0ad6: mov    %r10,%rdx
  0x00000000030e0ad9: mov    %rax,%r8
  0x00000000030e0adc: movabs $0x3022ac0,%r10
  0x00000000030e0ae6: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0ae9: mov    %rbx,%r11
  0x00000000030e0aec: mov    0x40(%rsp),%r10
  0x00000000030e0af1: mov    %r11d,0x10(%r10)
  0x00000000030e0af5: shr    $0x9,%r10
  0x00000000030e0af9: mov    $0x11f87000,%r11d
  0x00000000030e0aff: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0b03: jmpq   0x00000000030e09e2
  0x00000000030e0b08: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@8 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0b0c: test   %r11d,%r11d
  0x00000000030e0b0f: jl     0x00000000030e0a11  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0b15: mov    %r11d,%r9d
  0x00000000030e0b18: jmpq   0x00000000030e0a23
  0x00000000030e0b1d: movslq %esi,%r8
  0x00000000030e0b20: mov    %r8,%r9
  0x00000000030e0b23: shl    %r9
  0x00000000030e0b26: add    $0x10,%r9
  0x00000000030e0b2a: mov    %r9,%rcx
  0x00000000030e0b2d: and    $0xfffffffffffffff9,%rcx
  0x00000000030e0b31: mov    %rbx,%rdi
  0x00000000030e0b34: add    %rcx,%rdi
  0x00000000030e0b37: shr    $0x3,%r9
  0x00000000030e0b3b: sub    %r9,%r11
  0x00000000030e0b3e: mov    %r11,%rcx
  0x00000000030e0b41: xor    %rax,%rax
  0x00000000030e0b44: shl    $0x3,%rcx
  0x00000000030e0b48: rep rex.W stos %al,%es:(%rdi)
  0x00000000030e0b4b: mov    %rdx,%rcx
  0x00000000030e0b4e: mov    %r10,%rdx
  0x00000000030e0b51: movabs $0x30227c0,%r10
  0x00000000030e0b5b: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0b5e: jmp    0x00000000030e0ae9
  0x00000000030e0b60: mov    %edi,0x2c(%rsp)
  0x00000000030e0b64: mov    %rax,0x38(%rsp)
  0x00000000030e0b69: mov    %r11,0x30(%rsp)
  0x00000000030e0b6e: mov    %r9d,0x28(%rsp)
  0x00000000030e0b73: mov    %rdx,0x20(%rsp)
  0x00000000030e0b78: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x00000000030e0b82: mov    %r9d,%r8d
  0x00000000030e0b85: xchg   %ax,%ax
  0x00000000030e0b87: callq  0x000000000303fc20  ; OopMap{[32]=Oop [44]=NarrowOop [64]=Oop off=492}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x00000000030e0b8c: mov    %rax,%r10
  0x00000000030e0b8f: mov    0x28(%rsp),%r9d
  0x00000000030e0b94: mov    0x30(%rsp),%r11
  0x00000000030e0b99: mov    0x38(%rsp),%rax
  0x00000000030e0b9e: mov    0x2c(%rsp),%edi
  0x00000000030e0ba2: mov    %r10,%rbx
  0x00000000030e0ba5: jmpq   0x00000000030e0a8b
  0x00000000030e0baa: mov    %r10,%rdi
  0x00000000030e0bad: xor    %rax,%rax
  0x00000000030e0bb0: shl    $0x3,%rcx
  0x00000000030e0bb4: rep rex.W stos %al,%es:(%rdi)
  0x00000000030e0bb7: xor    %r8d,%r8d
  0x00000000030e0bba: mov    %rbx,%r9
  0x00000000030e0bbd: xor    %edi,%edi
  0x00000000030e0bbf: mov    0x40(%rsp),%rbp
  0x00000000030e0bc4: mov    %rbx,0x28(%rsp)
  0x00000000030e0bc9: xchg   %ax,%ax
  0x00000000030e0bcb: callq  0x0000000003042e60  ; OopMap{rbp=Oop [40]=Oop [64]=Oop off=560}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x00000000030e0bd0: mov    0x28(%rsp),%rbx
  0x00000000030e0bd5: jmpq   0x00000000030e0ae9
  0x00000000030e0bda: mov    %r10,%rdi
  0x00000000030e0bdd: xor    %rax,%rax
  0x00000000030e0be0: shl    $0x3,%rcx
  0x00000000030e0be4: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0be7: jmpq   0x00000000030e0ae9
  0x00000000030e0bec: mov    $0x8d,%edx
  0x00000000030e0bf1: xchg   %ax,%ax
  0x00000000030e0bf3: callq  0x00000000030157a0  ; OopMap{off=600}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x00000000030e0bf8: int3                      ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0bf9: mov    $0xfffffff6,%edx
  0x00000000030e0bfe: nop
  0x00000000030e0bff: callq  0x00000000030157a0  ; OopMap{off=612}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ;   {runtime_call}
  0x00000000030e0c04: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0c05: mov    %rax,%rdx
  0x00000000030e0c08: jmp    0x00000000030e0c0d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0c0a: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@-1 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)

  0x00000000030e0c0d: add    $0x60,%rsp
  0x00000000030e0c11: pop    %rbp
  0x00000000030e0c12: jmpq   0x0000000003042d60  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@18 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ;   {runtime_call}
  0x00000000030e0c17: hlt    
  0x00000000030e0c18: hlt    
  0x00000000030e0c19: hlt    
  0x00000000030e0c1a: hlt    
  0x00000000030e0c1b: hlt    
  0x00000000030e0c1c: hlt    
  0x00000000030e0c1d: hlt    
  0x00000000030e0c1e: hlt    
  0x00000000030e0c1f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e0c20: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030e0c25: callq  0x00000000030e0c2a
  0x00000000030e0c2a: subq   $0x5,(%rsp)
  0x00000000030e0c2f: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e0c34: hlt    
  0x00000000030e0c35: hlt    
  0x00000000030e0c36: hlt    
  0x00000000030e0c37: hlt    
<nmethod compile_id='17' compiler='C2' level='4' entry='0x00000000030e09a0' size='1784' address='0x00000000030e0850' relocation_offset='288' insts_offset='336' stub_offset='976' scopes_data_offset='1032' scopes_pcs_offset='1232' dependencies_offset='1712' handler_table_offset='1720' nul_chk_table_offset='1768' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='7338' iicount='7338' stamp='3.950'/>
<writer thread='22584'/>
Decoding compiled method 0x00000000030e05d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b3bf0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x00000000030e0700: mov    0x8(%rdx),%r10d
  0x00000000030e0704: shl    $0x3,%r10
  0x00000000030e0708: cmp    %r10,%rax
  0x00000000030e070b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e0711: data16 xchg %ax,%ax
  0x00000000030e0714: nopl   0x0(%rax,%rax,1)
  0x00000000030e071c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e0720: mov    %eax,-0x6000(%rsp)
  0x00000000030e0727: push   %rbp
  0x00000000030e0728: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 611)

  0x00000000030e072c: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)

  0x00000000030e0730: mov    0xc(%r11),%eax     ; implicit exception: dispatches to 0x00000000030e0740
  0x00000000030e0734: add    $0x10,%rsp
  0x00000000030e0738: pop    %rbp
  0x00000000030e0739: test   %eax,-0x28f073f(%rip)        # 0x00000000007f0000
                                                ;   {poll_return}
  0x00000000030e073f: retq   
  0x00000000030e0740: mov    $0xfffffff6,%edx
  0x00000000030e0745: xchg   %ax,%ax
  0x00000000030e0747: callq  0x00000000030157a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ;   {runtime_call}
  0x00000000030e074c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)

  0x00000000030e074d: hlt    
  0x00000000030e074e: hlt    
  0x00000000030e074f: hlt    
  0x00000000030e0750: hlt    
  0x00000000030e0751: hlt    
  0x00000000030e0752: hlt    
  0x00000000030e0753: hlt    
  0x00000000030e0754: hlt    
  0x00000000030e0755: hlt    
  0x00000000030e0756: hlt    
  0x00000000030e0757: hlt    
  0x00000000030e0758: hlt    
  0x00000000030e0759: hlt    
  0x00000000030e075a: hlt    
  0x00000000030e075b: hlt    
  0x00000000030e075c: hlt    
  0x00000000030e075d: hlt    
  0x00000000030e075e: hlt    
  0x00000000030e075f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e0760: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030e0765: callq  0x00000000030e076a
  0x00000000030e076a: subq   $0x5,(%rsp)
  0x00000000030e076f: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e0774: hlt    
  0x00000000030e0775: hlt    
  0x00000000030e0776: hlt    
  0x00000000030e0777: hlt    
<nmethod compile_id='18' compiler='C2' level='4' entry='0x00000000030e0700' size='584' address='0x00000000030e05d0' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='27531' iicount='27531' stamp='4.029'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e2a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001721fab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0xa0]  (sp of caller)
  0x00000000030e2c20: mov    0x8(%rdx),%r10d
  0x00000000030e2c24: shl    $0x3,%r10
  0x00000000030e2c28: cmp    %rax,%r10
  0x00000000030e2c2b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e2c31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e2c3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e2c40: mov    %eax,-0x6000(%rsp)
  0x00000000030e2c47: push   %rbp
  0x00000000030e2c48: sub    $0x90,%rsp
  0x00000000030e2c4f: lea    0x70(%rsp),%rsi
  0x00000000030e2c54: mov    %rdx,0x8(%rsi)
  0x00000000030e2c58: mov    (%rdx),%rax
  0x00000000030e2c5b: mov    %rax,%rdi
  0x00000000030e2c5e: and    $0x7,%rdi
  0x00000000030e2c62: cmp    $0x5,%rdi
  0x00000000030e2c66: jne    0x00000000030e2ced
  0x00000000030e2c6c: mov    0x8(%rdx),%edi
  0x00000000030e2c6f: shl    $0x3,%rdi
  0x00000000030e2c73: mov    0xa8(%rdi),%rdi
  0x00000000030e2c7a: or     %r15,%rdi
  0x00000000030e2c7d: xor    %rax,%rdi
  0x00000000030e2c80: and    $0xffffffffffffff87,%rdi
  0x00000000030e2c84: je     0x00000000030e2d15
  0x00000000030e2c8a: test   $0x7,%rdi
  0x00000000030e2c91: jne    0x00000000030e2cda
  0x00000000030e2c93: test   $0x300,%rdi
  0x00000000030e2c9a: jne    0x00000000030e2cb9
  0x00000000030e2c9c: and    $0x37f,%rax
  0x00000000030e2ca3: mov    %rax,%rdi
  0x00000000030e2ca6: or     %r15,%rdi
  0x00000000030e2ca9: lock cmpxchg %rdi,(%rdx)
  0x00000000030e2cae: jne    0x00000000030e2f59
  0x00000000030e2cb4: jmpq   0x00000000030e2d15
  0x00000000030e2cb9: mov    0x8(%rdx),%edi
  0x00000000030e2cbc: shl    $0x3,%rdi
  0x00000000030e2cc0: mov    0xa8(%rdi),%rdi
  0x00000000030e2cc7: or     %r15,%rdi
  0x00000000030e2cca: lock cmpxchg %rdi,(%rdx)
  0x00000000030e2ccf: jne    0x00000000030e2f59
  0x00000000030e2cd5: jmpq   0x00000000030e2d15
  0x00000000030e2cda: mov    0x8(%rdx),%edi
  0x00000000030e2cdd: shl    $0x3,%rdi
  0x00000000030e2ce1: mov    0xa8(%rdi),%rdi
  0x00000000030e2ce8: lock cmpxchg %rdi,(%rdx)
  0x00000000030e2ced: mov    (%rdx),%rax
  0x00000000030e2cf0: or     $0x1,%rax
  0x00000000030e2cf4: mov    %rax,(%rsi)
  0x00000000030e2cf7: lock cmpxchg %rsi,(%rdx)
  0x00000000030e2cfc: je     0x00000000030e2d15
  0x00000000030e2d02: sub    %rsp,%rax
  0x00000000030e2d05: and    $0xfffffffffffff007,%rax
  0x00000000030e2d0c: mov    %rax,(%rsi)
  0x00000000030e2d0f: jne    0x00000000030e2f59
  0x00000000030e2d15: movabs $0x173ab560,%rsi   ;   {metadata(method data for {method} {0x000000001721fab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000030e2d1f: mov    0xdc(%rsi),%edi
  0x00000000030e2d25: add    $0x8,%edi
  0x00000000030e2d28: mov    %edi,0xdc(%rsi)
  0x00000000030e2d2e: movabs $0x1721fab0,%rsi   ;   {metadata({method} {0x000000001721fab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000030e2d38: and    $0x1ff8,%edi
  0x00000000030e2d3e: cmp    $0x0,%edi
  0x00000000030e2d41: je     0x00000000030e2f6c  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 382)

  0x00000000030e2d47: movl   $0x0,0x14(%rdx)
  0x00000000030e2d4e: mov    %rdx,%rsi
  0x00000000030e2d51: shr    $0x9,%rsi
  0x00000000030e2d55: movabs $0x11f87000,%rdi
  0x00000000030e2d5f: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 382)

  0x00000000030e2d63: mov    %rdx,%rsi
  0x00000000030e2d66: movabs $0x173ab560,%rdi   ;   {metadata(method data for {method} {0x000000001721fab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x00000000030e2d70: addq   $0x1,0x108(%rdi)
  0x00000000030e2d78: movabs $0x173ab170,%rsi   ;   {metadata(method data for {method} {0x0000000017224790} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030e2d82: mov    0xdc(%rsi),%edi
  0x00000000030e2d88: add    $0x8,%edi
  0x00000000030e2d8b: mov    %edi,0xdc(%rsi)
  0x00000000030e2d91: movabs $0x17224788,%rsi   ;   {metadata({method} {0x0000000017224790} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030e2d9b: and    $0x7ffff8,%edi
  0x00000000030e2da1: cmp    $0x0,%edi
  0x00000000030e2da4: je     0x00000000030e2f83
  0x00000000030e2daa: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2dad: inc    %esi
  0x00000000030e2daf: mov    %rdx,%rdi
  0x00000000030e2db2: movabs $0x173ab170,%rbx   ;   {metadata(method data for {method} {0x0000000017224790} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030e2dbc: addq   $0x1,0x108(%rbx)
  0x00000000030e2dc4: movabs $0x173aafd0,%rdi   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030e2dce: mov    0xdc(%rdi),%ebx
  0x00000000030e2dd4: add    $0x8,%ebx
  0x00000000030e2dd7: mov    %ebx,0xdc(%rdi)
  0x00000000030e2ddd: movabs $0x172236f8,%rdi   ;   {metadata({method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030e2de7: and    $0x7ffff8,%ebx
  0x00000000030e2ded: cmp    $0x0,%ebx
  0x00000000030e2df0: je     0x00000000030e2f9a
  0x00000000030e2df6: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2df9: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ; implicit exception: dispatches to 0x00000000030e2fb1
  0x00000000030e2dfc: mov    %rsi,%rbx
  0x00000000030e2dff: sub    %edi,%ebx
  0x00000000030e2e01: cmp    $0x0,%ebx
  0x00000000030e2e04: movabs $0x173aafd0,%rdi   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030e2e0e: movabs $0x108,%rbx
  0x00000000030e2e18: jle    0x00000000030e2e28
  0x00000000030e2e1e: movabs $0x118,%rbx
  0x00000000030e2e28: mov    (%rdi,%rbx,1),%rax
  0x00000000030e2e2c: lea    0x1(%rax),%rax
  0x00000000030e2e30: mov    %rax,(%rdi,%rbx,1)
  0x00000000030e2e34: mov    %r8d,0x68(%rsp)
  0x00000000030e2e39: jg     0x00000000030e2e49  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2e3f: mov    %rdx,0x60(%rsp)
  0x00000000030e2e44: jmpq   0x00000000030e2eec  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2e49: mov    %rdx,%rdi
  0x00000000030e2e4c: movabs $0x173aafd0,%rbx   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030e2e56: mov    0x8(%rdi),%edi
  0x00000000030e2e59: shl    $0x3,%rdi
  0x00000000030e2e5d: cmp    0x130(%rbx),%rdi
  0x00000000030e2e64: jne    0x00000000030e2e73
  0x00000000030e2e66: addq   $0x1,0x138(%rbx)
  0x00000000030e2e6e: jmpq   0x00000000030e2ed9
  0x00000000030e2e73: cmp    0x140(%rbx),%rdi
  0x00000000030e2e7a: jne    0x00000000030e2e89
  0x00000000030e2e7c: addq   $0x1,0x148(%rbx)
  0x00000000030e2e84: jmpq   0x00000000030e2ed9
  0x00000000030e2e89: cmpq   $0x0,0x130(%rbx)
  0x00000000030e2e94: jne    0x00000000030e2ead
  0x00000000030e2e96: mov    %rdi,0x130(%rbx)
  0x00000000030e2e9d: movq   $0x1,0x138(%rbx)
  0x00000000030e2ea8: jmpq   0x00000000030e2ed9
  0x00000000030e2ead: cmpq   $0x0,0x140(%rbx)
  0x00000000030e2eb8: jne    0x00000000030e2ed1
  0x00000000030e2eba: mov    %rdi,0x140(%rbx)
  0x00000000030e2ec1: movq   $0x1,0x148(%rbx)
  0x00000000030e2ecc: jmpq   0x00000000030e2ed9
  0x00000000030e2ed1: addq   $0x1,0x128(%rbx)
  0x00000000030e2ed9: mov    %rsi,%r8
  0x00000000030e2edc: mov    %rdx,%rsi
  0x00000000030e2edf: mov    %rsi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2ee2: mov    %rsi,0x60(%rsp)
  0x00000000030e2ee7: callq  0x00000000030161a0  ; OopMap{[96]=Oop [120]=Oop off=716}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {optimized virtual_call}
  0x00000000030e2eec: mov    0x68(%rsp),%r8d
  0x00000000030e2ef1: mov    0x60(%rsp),%rdx
  0x00000000030e2ef6: mov    0x10(%rdx),%eax    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2ef9: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2efc: mov    %rsi,%rdi
  0x00000000030e2eff: inc    %edi
  0x00000000030e2f01: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2f04: movslq %esi,%rdi
  0x00000000030e2f07: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x00000000030e2fb6
  0x00000000030e2f0a: jae    0x00000000030e2fc0
  0x00000000030e2f10: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030e2f16: lea    0x70(%rsp),%rax
  0x00000000030e2f1b: mov    0x8(%rax),%rdi
  0x00000000030e2f1f: mov    (%rdi),%rsi
  0x00000000030e2f22: and    $0x7,%rsi
  0x00000000030e2f26: cmp    $0x5,%rsi
  0x00000000030e2f2a: je     0x00000000030e2f47
  0x00000000030e2f30: mov    (%rax),%rsi
  0x00000000030e2f33: test   %rsi,%rsi
  0x00000000030e2f36: je     0x00000000030e2f47
  0x00000000030e2f3c: lock cmpxchg %rsi,(%rdi)
  0x00000000030e2f41: jne    0x00000000030e2fc9  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 384)

  0x00000000030e2f47: mov    %rdx,%rax
  0x00000000030e2f4a: add    $0x90,%rsp
  0x00000000030e2f51: pop    %rbp
  0x00000000030e2f52: test   %eax,-0x28f2e58(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e2f58: retq   
  0x00000000030e2f59: mov    %rdx,0x8(%rsp)
  0x00000000030e2f5e: mov    %rsi,(%rsp)
  0x00000000030e2f62: callq  0x00000000030d1520  ; OopMap{rdx=Oop [120]=Oop off=839}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)
                                                ;   {runtime_call}
  0x00000000030e2f67: jmpq   0x00000000030e2d15
  0x00000000030e2f6c: mov    %rsi,0x8(%rsp)
  0x00000000030e2f71: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e2f79: callq  0x00000000030d3220  ; OopMap{rdx=Oop [120]=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)
                                                ;   {runtime_call}
  0x00000000030e2f7e: jmpq   0x00000000030e2d47
  0x00000000030e2f83: mov    %rsi,0x8(%rsp)
  0x00000000030e2f88: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e2f90: callq  0x00000000030d3220  ; OopMap{rdx=Oop [120]=Oop off=885}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030e2f95: jmpq   0x00000000030e2daa
  0x00000000030e2f9a: mov    %rdi,0x8(%rsp)
  0x00000000030e2f9f: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e2fa7: callq  0x00000000030d3220  ; OopMap{rdx=Oop [120]=Oop off=908}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030e2fac: jmpq   0x00000000030e2df6
  0x00000000030e2fb1: callq  0x0000000003041280  ; OopMap{rdx=Oop [120]=Oop off=918}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030e2fb6: callq  0x0000000003041280  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=923}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030e2fbb: callq  0x0000000003041280  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=928}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030e2fc0: mov    %rsi,(%rsp)
  0x00000000030e2fc4: callq  0x0000000003041940  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=937}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030e2fc9: lea    0x70(%rsp),%rax
  0x00000000030e2fce: mov    %rax,(%rsp)
  0x00000000030e2fd2: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030e2fd7: jmpq   0x00000000030e2f47
  0x00000000030e2fdc: nop
  0x00000000030e2fdd: nop
  0x00000000030e2fde: mov    0x2a8(%r15),%rax
  0x00000000030e2fe5: movabs $0x0,%r10
  0x00000000030e2fef: mov    %r10,0x2a8(%r15)
  0x00000000030e2ff6: movabs $0x0,%r10
  0x00000000030e3000: mov    %r10,0x2b0(%r15)
  0x00000000030e3007: mov    %rax,%rbx
  0x00000000030e300a: lea    0x70(%rsp),%rax
  0x00000000030e300f: mov    0x8(%rax),%rsi
  0x00000000030e3013: mov    (%rsi),%rdi
  0x00000000030e3016: and    $0x7,%rdi
  0x00000000030e301a: cmp    $0x5,%rdi
  0x00000000030e301e: je     0x00000000030e303b
  0x00000000030e3024: mov    (%rax),%rdi
  0x00000000030e3027: test   %rdi,%rdi
  0x00000000030e302a: je     0x00000000030e303b
  0x00000000030e3030: lock cmpxchg %rdi,(%rsi)
  0x00000000030e3035: jne    0x00000000030e304b
  0x00000000030e303b: mov    %rbx,%rax
  0x00000000030e303e: add    $0x90,%rsp
  0x00000000030e3045: pop    %rbp
  0x00000000030e3046: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e304b: lea    0x70(%rsp),%rax
  0x00000000030e3050: mov    %rax,(%rsp)
  0x00000000030e3054: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030e3059: jmp    0x00000000030e303b
  0x00000000030e305b: hlt    
  0x00000000030e305c: hlt    
  0x00000000030e305d: hlt    
  0x00000000030e305e: hlt    
  0x00000000030e305f: hlt    
[Stub Code]
  0x00000000030e3060: nop                       ;   {no_reloc}
  0x00000000030e3061: nop
  0x00000000030e3062: nop
  0x00000000030e3063: nop
  0x00000000030e3064: nop
  0x00000000030e3065: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e306f: jmpq   0x00000000030e306f  ;   {runtime_call}
[Exception Handler]
  0x00000000030e3074: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030e3079: mov    %rsp,-0x28(%rsp)
  0x00000000030e307e: sub    $0x80,%rsp
  0x00000000030e3085: mov    %rax,0x78(%rsp)
  0x00000000030e308a: mov    %rcx,0x70(%rsp)
  0x00000000030e308f: mov    %rdx,0x68(%rsp)
  0x00000000030e3094: mov    %rbx,0x60(%rsp)
  0x00000000030e3099: mov    %rbp,0x50(%rsp)
  0x00000000030e309e: mov    %rsi,0x48(%rsp)
  0x00000000030e30a3: mov    %rdi,0x40(%rsp)
  0x00000000030e30a8: mov    %r8,0x38(%rsp)
  0x00000000030e30ad: mov    %r9,0x30(%rsp)
  0x00000000030e30b2: mov    %r10,0x28(%rsp)
  0x00000000030e30b7: mov    %r11,0x20(%rsp)
  0x00000000030e30bc: mov    %r12,0x18(%rsp)
  0x00000000030e30c1: mov    %r13,0x10(%rsp)
  0x00000000030e30c6: mov    %r14,0x8(%rsp)
  0x00000000030e30cb: mov    %r15,(%rsp)
  0x00000000030e30cf: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e30d9: movabs $0x30e3079,%rdx    ;   {internal_word}
  0x00000000030e30e3: mov    %rsp,%r8
  0x00000000030e30e6: and    $0xfffffffffffffff0,%rsp
  0x00000000030e30ea: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e30ef: hlt    
[Deopt Handler Code]
  0x00000000030e30f0: movabs $0x30e30f0,%r10    ;   {section_word}
  0x00000000030e30fa: push   %r10
  0x00000000030e30fc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e3101: hlt    
  0x00000000030e3102: hlt    
  0x00000000030e3103: hlt    
  0x00000000030e3104: hlt    
  0x00000000030e3105: hlt    
  0x00000000030e3106: hlt    
  0x00000000030e3107: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x00000000030e2c20' size='2304' address='0x00000000030e2a90' relocation_offset='288' insts_offset='400' stub_offset='1488' scopes_data_offset='1680' scopes_pcs_offset='1880' dependencies_offset='2264' nul_chk_table_offset='2272' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='3650' iicount='3650' stamp='4.489'/>
<writer thread='24112'/>
<task_queued compile_id='19' method='java/lang/String indexOf (II)I' bytes='70' count='494' backedge_count='16384' iicount='494' level='3' stamp='4.490' comment='tiered' hot_count='494'/>
<writer thread='1104'/>
<task_queued compile_id='20' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='146' backedge_count='3072' iicount='146' level='3' stamp='4.491' comment='tiered' hot_count='146'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e2310:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000030e24a0: mov    0x8(%rdx),%r10d
  0x00000000030e24a4: shl    $0x3,%r10
  0x00000000030e24a8: cmp    %rax,%r10
  0x00000000030e24ab: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e24b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e24bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e24c0: mov    %eax,-0x6000(%rsp)
  0x00000000030e24c7: push   %rbp
  0x00000000030e24c8: sub    $0x30,%rsp
  0x00000000030e24cc: movabs $0x1739c728,%rax   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e24d6: mov    0xdc(%rax),%esi
  0x00000000030e24dc: add    $0x8,%esi
  0x00000000030e24df: mov    %esi,0xdc(%rax)
  0x00000000030e24e5: movabs $0x171b5100,%rax   ;   {metadata({method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e24ef: and    $0x1ff8,%esi
  0x00000000030e24f5: cmp    $0x0,%esi
  0x00000000030e24f8: je     0x00000000030e2709  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1534)

  0x00000000030e24fe: mov    0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1534)

  0x00000000030e2501: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1534)
                                                ; implicit exception: dispatches to 0x00000000030e2720
  0x00000000030e2504: cmp    $0x0,%r9d
  0x00000000030e2508: movabs $0x1739c728,%rdi   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e2512: movabs $0x108,%rbx
  0x00000000030e251c: jge    0x00000000030e252c
  0x00000000030e2522: movabs $0x118,%rbx
  0x00000000030e252c: mov    (%rdi,%rbx,1),%rcx
  0x00000000030e2530: lea    0x1(%rcx),%rcx
  0x00000000030e2534: mov    %rcx,(%rdi,%rbx,1)
  0x00000000030e2538: jge    0x00000000030e255a  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1535)

  0x00000000030e253e: movabs $0x1739c728,%r9    ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e2548: incl   0x128(%r9)
  0x00000000030e254f: mov    $0x0,%r9d
  0x00000000030e2555: jmpq   0x00000000030e2593  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1536)

  0x00000000030e255a: cmp    %esi,%r9d
  0x00000000030e255d: movabs $0x1739c728,%rdi   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e2567: movabs $0x140,%rbx
  0x00000000030e2571: jl     0x00000000030e2581
  0x00000000030e2577: movabs $0x150,%rbx
  0x00000000030e2581: mov    (%rdi,%rbx,1),%rcx
  0x00000000030e2585: lea    0x1(%rcx),%rcx
  0x00000000030e2589: mov    %rcx,(%rdi,%rbx,1)
  0x00000000030e258d: jge    0x00000000030e26f8  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1537)

  0x00000000030e2593: cmp    $0x10000,%r8d
  0x00000000030e259a: movabs $0x1739c728,%rdi   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e25a4: movabs $0x160,%rbx
  0x00000000030e25ae: jge    0x00000000030e25be
  0x00000000030e25b4: movabs $0x170,%rbx
  0x00000000030e25be: mov    (%rdi,%rbx,1),%rcx
  0x00000000030e25c2: lea    0x1(%rcx),%rcx
  0x00000000030e25c6: mov    %rcx,(%rdi,%rbx,1)
  0x00000000030e25ca: jge    0x00000000030e26cc
  0x00000000030e25d0: jmpq   0x00000000030e266e  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1542)

  0x00000000030e25d5: data16 xchg %ax,%ax
  0x00000000030e25d8: movslq %r9d,%rdx
  0x00000000030e25db: cmp    0xc(%rax),%r9d
  0x00000000030e25df: jae    0x00000000030e2725
  0x00000000030e25e5: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1547)

  0x00000000030e25ea: cmp    %r8d,%edx
  0x00000000030e25ed: movabs $0x1739c728,%rdx   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e25f7: movabs $0x1a0,%rdi
  0x00000000030e2601: jne    0x00000000030e2611
  0x00000000030e2607: movabs $0x1b0,%rdi
  0x00000000030e2611: mov    (%rdx,%rdi,1),%rbx
  0x00000000030e2615: lea    0x1(%rbx),%rbx
  0x00000000030e2619: mov    %rbx,(%rdx,%rdi,1)
  0x00000000030e261d: je     0x00000000030e26ac  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1547)

  0x00000000030e2623: inc    %r9d
  0x00000000030e2626: movabs $0x1739c728,%rdx   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e2630: mov    0xe0(%rdx),%edi
  0x00000000030e2636: add    $0x8,%edi
  0x00000000030e2639: mov    %edi,0xe0(%rdx)
  0x00000000030e263f: movabs $0x171b5100,%rdx   ;   {metadata({method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e2649: and    $0xfff8,%edi
  0x00000000030e264f: cmp    $0x0,%edi
  0x00000000030e2652: je     0x00000000030e272e  ; OopMap{rax=Oop off=440}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1546)

  0x00000000030e2658: test   %eax,-0x28f255e(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030e265e: movabs $0x1739c728,%rdx   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e2668: incl   0x1c0(%rdx)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1546)

  0x00000000030e266e: cmp    %esi,%r9d
  0x00000000030e2671: movabs $0x1739c728,%rdx   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e267b: movabs $0x180,%rdi
  0x00000000030e2685: jge    0x00000000030e2695
  0x00000000030e268b: movabs $0x190,%rdi
  0x00000000030e2695: mov    (%rdx,%rdi,1),%rbx
  0x00000000030e2699: lea    0x1(%rbx),%rbx
  0x00000000030e269d: mov    %rbx,(%rdx,%rdi,1)
  0x00000000030e26a1: jge    0x00000000030e26bb
  0x00000000030e26a7: jmpq   0x00000000030e25d8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1546)

  0x00000000030e26ac: mov    %r9,%rax
  0x00000000030e26af: add    $0x30,%rsp
  0x00000000030e26b3: pop    %rbp
  0x00000000030e26b4: test   %eax,-0x28f25ba(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e26ba: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1548)

  0x00000000030e26bb: mov    $0xffffffff,%eax
  0x00000000030e26c0: add    $0x30,%rsp
  0x00000000030e26c4: pop    %rbp
  0x00000000030e26c5: test   %eax,-0x28f25cb(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e26cb: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1551)

  0x00000000030e26cc: mov    %rdx,%rsi
  0x00000000030e26cf: movabs $0x1739c728,%rdi   ;   {metadata(method data for {method} {0x00000000171b5108} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e26d9: addq   $0x1,0x1d8(%rdi)
  0x00000000030e26e1: nop
  0x00000000030e26e2: nop
  0x00000000030e26e3: nop
  0x00000000030e26e4: nop
  0x00000000030e26e5: nop
  0x00000000030e26e6: nop
  0x00000000030e26e7: callq  0x00000000030161a0  ; OopMap{off=588}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1553)
                                                ;   {optimized virtual_call}
  0x00000000030e26ec: add    $0x30,%rsp
  0x00000000030e26f0: pop    %rbp
  0x00000000030e26f1: test   %eax,-0x28f25f7(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e26f7: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1553)

  0x00000000030e26f8: mov    $0xffffffff,%eax
  0x00000000030e26fd: add    $0x30,%rsp
  0x00000000030e2701: pop    %rbp
  0x00000000030e2702: test   %eax,-0x28f2608(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e2708: retq   
  0x00000000030e2709: mov    %rax,0x8(%rsp)
  0x00000000030e270e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e2716: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=635}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1534)
                                                ;   {runtime_call}
  0x00000000030e271b: jmpq   0x00000000030e24fe
  0x00000000030e2720: callq  0x0000000003041280  ; OopMap{rdx=Oop rax=Oop off=645}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1534)
                                                ;   {runtime_call}
  0x00000000030e2725: mov    %r9,(%rsp)
  0x00000000030e2729: callq  0x0000000003041940  ; OopMap{rax=Oop off=654}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1547)
                                                ;   {runtime_call}
  0x00000000030e272e: mov    %rdx,0x8(%rsp)
  0x00000000030e2733: movq   $0x3a,(%rsp)
  0x00000000030e273b: callq  0x00000000030d3220  ; OopMap{rax=Oop off=672}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1546)
                                                ;   {runtime_call}
  0x00000000030e2740: jmpq   0x00000000030e2658
  0x00000000030e2745: nop
  0x00000000030e2746: nop
  0x00000000030e2747: mov    0x2a8(%r15),%rax
  0x00000000030e274e: movabs $0x0,%r10
  0x00000000030e2758: mov    %r10,0x2a8(%r15)
  0x00000000030e275f: movabs $0x0,%r10
  0x00000000030e2769: mov    %r10,0x2b0(%r15)
  0x00000000030e2770: add    $0x30,%rsp
  0x00000000030e2774: pop    %rbp
  0x00000000030e2775: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e277a: hlt    
  0x00000000030e277b: hlt    
  0x00000000030e277c: hlt    
  0x00000000030e277d: hlt    
  0x00000000030e277e: hlt    
  0x00000000030e277f: hlt    
[Stub Code]
  0x00000000030e2780: nop                       ;   {no_reloc}
  0x00000000030e2781: nop
  0x00000000030e2782: nop
  0x00000000030e2783: nop
  0x00000000030e2784: nop
  0x00000000030e2785: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e278f: jmpq   0x00000000030e278f  ;   {runtime_call}
[Exception Handler]
  0x00000000030e2794: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030e2799: mov    %rsp,-0x28(%rsp)
  0x00000000030e279e: sub    $0x80,%rsp
  0x00000000030e27a5: mov    %rax,0x78(%rsp)
  0x00000000030e27aa: mov    %rcx,0x70(%rsp)
  0x00000000030e27af: mov    %rdx,0x68(%rsp)
  0x00000000030e27b4: mov    %rbx,0x60(%rsp)
  0x00000000030e27b9: mov    %rbp,0x50(%rsp)
  0x00000000030e27be: mov    %rsi,0x48(%rsp)
  0x00000000030e27c3: mov    %rdi,0x40(%rsp)
  0x00000000030e27c8: mov    %r8,0x38(%rsp)
  0x00000000030e27cd: mov    %r9,0x30(%rsp)
  0x00000000030e27d2: mov    %r10,0x28(%rsp)
  0x00000000030e27d7: mov    %r11,0x20(%rsp)
  0x00000000030e27dc: mov    %r12,0x18(%rsp)
  0x00000000030e27e1: mov    %r13,0x10(%rsp)
  0x00000000030e27e6: mov    %r14,0x8(%rsp)
  0x00000000030e27eb: mov    %r15,(%rsp)
  0x00000000030e27ef: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e27f9: movabs $0x30e2799,%rdx    ;   {internal_word}
  0x00000000030e2803: mov    %rsp,%r8
  0x00000000030e2806: and    $0xfffffffffffffff0,%rsp
  0x00000000030e280a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e280f: hlt    
[Deopt Handler Code]
  0x00000000030e2810: movabs $0x30e2810,%r10    ;   {section_word}
  0x00000000030e281a: push   %r10
  0x00000000030e281c: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e2821: hlt    
  0x00000000030e2822: hlt    
  0x00000000030e2823: hlt    
  0x00000000030e2824: hlt    
  0x00000000030e2825: hlt    
  0x00000000030e2826: hlt    
  0x00000000030e2827: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x00000000030e24a0' size='1848' address='0x00000000030e2310' relocation_offset='288' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='506' backedge_count='16417' iicount='506' stamp='4.832'/>
<writer thread='24112'/>
<task_queued compile_id='21' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='4.832' comment='tiered' hot_count='256'/>
Decoding compiled method 0x00000000030e1f50:
Code:
[Entry Point]
  # {method} {0x000000001722ed50} &apos;getO
<writer thread='1104'/>
<task_queued compile_id='23' method='java/lang/String indexOf (I)I' bytes='7' count='512' iicount='512' level='3' stamp='4.836' comment='tiered' hot_count='512'/>
<writer thread='24112'/>
bjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x00000000030e20c0: mov    0x8(%rdx),%r10d
  0x00000000030e20c4: shl    $0x3,%r10
  0x00000000030e20c8: cmp    %r10,%rax
  0x00000000030e20cb: je     0x00000000030e20d8
  0x00000000030e20d1: jmpq   0x0000000003015f60  ;   {runtime_call}
  0x00000000030e20d6: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000030e20d8: mov    %eax,-0x6000(%rsp)
  0x00000000030e20df: push   %rbp
  0x00000000030e20e0: mov    %rsp,%rbp
  0x00000000030e20e3: sub    $0x60,%rsp
  0x00000000030e20e7: mov    %r8,0x28(%rsp)
  0x00000000030e20ec: cmp    $0x0,%r8
  0x00000000030e20f0: lea    0x28(%rsp),%r8
  0x00000000030e20f5: cmove  0x28(%rsp),%r8
  0x00000000030e20fb: mov    %rdx,0x20(%rsp)
  0x00000000030e2100: cmp    $0x0,%rdx
  0x00000000030e2104: lea    0x20(%rsp),%rdx
  0x00000000030e2109: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x00000000030e210f: movabs $0x30e210f,%r10    ;   {section_word}
  0x00000000030e2119: mov    %r10,0x1e0(%r15)
  0x00000000030e2120: mov    %rsp,0x1d8(%r15)
  0x00000000030e2127: cmpb   $0x0,0x58027fb9(%rip)        # 0x000000005b10a0e7
                                                ;   {external_word}
  0x00000000030e212e: je     0x00000000030e2176
  0x00000000030e2134: push   %rdx
  0x00000000030e2135: push   %r8
  0x00000000030e2137: push   %r9
  0x00000000030e2139: movabs $0x1722ed48,%rdx   ;   {metadata({method} {0x000000001722ed50} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000030e2143: mov    %r15,%rcx
  0x00000000030e2146: sub    $0x20,%rsp
  0x00000000030e214a: test   $0xf,%esp
  0x00000000030e2150: je     0x00000000030e2168
  0x00000000030e2156: sub    $0x8,%rsp
  0x00000000030e215a: callq  0x000000005ab38c80  ;   {runtime_call}
  0x00000000030e215f: add    $0x8,%rsp
  0x00000000030e2163: jmpq   0x00000000030e216d
  0x00000000030e2168: callq  0x000000005ab38c80  ;   {runtime_call}
  0x00000000030e216d: add    $0x20,%rsp
  0x00000000030e2171: pop    %r9
  0x00000000030e2173: pop    %r8
  0x00000000030e2175: pop    %rdx
  0x00000000030e2176: lea    0x1f8(%r15),%rcx
  0x00000000030e217d: movl   $0x4,0x270(%r15)
  0x00000000030e2188: callq  0x000000005aaeb4d0  ;   {runtime_call}
  0x00000000030e218d: vzeroupper 
  0x00000000030e2190: movl   $0x5,0x270(%r15)
  0x00000000030e219b: mov    %r15d,%ecx
  0x00000000030e219e: shr    $0x4,%ecx
  0x00000000030e21a1: and    $0xffc,%ecx
  0x00000000030e21a7: movabs $0xef0000,%r10     ;   {external_word}
  0x00000000030e21b1: mov    %ecx,(%r10,%rcx,1)
  0x00000000030e21b5: cmpl   $0x0,0x58028b11(%rip)        # 0x000000005b10acd0
                                                ;   {external_word}
  0x00000000030e21bf: jne    0x00000000030e21d3
  0x00000000030e21c5: cmpl   $0x0,0x30(%r15)
  0x00000000030e21cd: je     0x00000000030e21f4
  0x00000000030e21d3: mov    %rax,-0x8(%rbp)
  0x00000000030e21d7: mov    %r15,%rcx
  0x00000000030e21da: mov    %rsp,%r12
  0x00000000030e21dd: sub    $0x20,%rsp
  0x00000000030e21e1: and    $0xfffffffffffffff0,%rsp
  0x00000000030e21e5: callq  0x000000005ab4f0a0  ;   {runtime_call}
  0x00000000030e21ea: mov    %r12,%rsp
  0x00000000030e21ed: xor    %r12,%r12
  0x00000000030e21f0: mov    -0x8(%rbp),%rax
  0x00000000030e21f4: movl   $0x8,0x270(%r15)
  0x00000000030e21ff: cmpl   $0x1,0x29c(%r15)
  0x00000000030e220a: je     0x00000000030e22ae
  0x00000000030e2210: cmpb   $0x0,0x58027ed0(%rip)        # 0x000000005b10a0e7
                                                ;   {external_word}
  0x00000000030e2217: je     0x00000000030e225d
  0x00000000030e221d: mov    %rax,-0x8(%rbp)
  0x00000000030e2221: movabs $0x1722ed48,%rdx   ;   {metadata({method} {0x000000001722ed50} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000030e222b: mov    %r15,%rcx
  0x00000000030e222e: sub    $0x20,%rsp
  0x00000000030e2232: test   $0xf,%esp
  0x00000000030e2238: je     0x00000000030e2250
  0x00000000030e223e: sub    $0x8,%rsp
  0x00000000030e2242: callq  0x000000005ab38c80  ;   {runtime_call}
  0x00000000030e2247: add    $0x8,%rsp
  0x00000000030e224b: jmpq   0x00000000030e2255
  0x00000000030e2250: callq  0x000000005ab38c80  ;   {runtime_call}
  0x00000000030e2255: add    $0x20,%rsp
  0x00000000030e2259: mov    -0x8(%rbp),%rax
  0x00000000030e225d: movabs $0x0,%r10
  0x00000000030e2267: mov    %r10,0x1d8(%r15)
  0x00000000030e226e: movabs $0x0,%r10
  0x00000000030e2278: mov    %r10,0x1e0(%r15)
  0x00000000030e227f: test   %rax,%rax
  0x00000000030e2282: je     0x00000000030e228b
  0x00000000030e2288: mov    (%rax),%rax
  0x00000000030e228b: mov    0x38(%r15),%rcx
  0x00000000030e228f: movl   $0x0,0x100(%rcx)
  0x00000000030e2299: leaveq 
  0x00000000030e229a: cmpq   $0x0,0x8(%r15)
  0x00000000030e22a2: jne    0x00000000030e22a9
  0x00000000030e22a8: retq   
  0x00000000030e22a9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000030e22ae: mov    %rax,-0x8(%rbp)
  0x00000000030e22b2: mov    %rsp,%r12
  0x00000000030e22b5: sub    $0x20,%rsp
  0x00000000030e22b9: and    $0xfffffffffffffff0,%rsp
  0x00000000030e22bd: callq  0x000000005ab38ca0  ;   {runtime_call}
  0x00000000030e22c2: mov    %r12,%rsp
  0x00000000030e22c5: xor    %r12,%r12
  0x00000000030e22c8: mov    -0x8(%rbp),%rax
  0x00000000030e22cc: jmpq   0x00000000030e2210
  0x00000000030e22d1: hlt    
  0x00000000030e22d2: hlt    
  0x00000000030e22d3: hlt    
  0x00000000030e22d4: hlt    
  0x00000000030e22d5: hlt    
  0x00000000030e22d6: hlt    
  0x00000000030e22d7: hlt    
<nmethod compile_id='22' compile_kind='c2n' level='0' entry='0x00000000030e20c0' size='904' address='0x00000000030e1f50' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='258' iicount='258' stamp='4.978'/>
<task_queued compile_id='24' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='4.979' comment='tiered' hot_count='512'/>
<task_queued compile_id='25' method='java/util/ArrayList size ()I' bytes='5' count='256' iicount='256' level='1' stamp='4.979' comment='tiered' hot_count='256'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e5bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x00000000030e5dc0: mov    0x8(%rdx),%r10d
  0x00000000030e5dc4: shl    $0x3,%r10
  0x00000000030e5dc8: cmp    %rax,%r10
  0x00000000030e5dcb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e5dd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e5ddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e5de0: mov    %eax,-0x6000(%rsp)
  0x00000000030e5de7: push   %rbp
  0x00000000030e5de8: sub    $0x90,%rsp
  0x00000000030e5def: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e5df9: mov    0xdc(%r9),%edi
  0x00000000030e5e00: add    $0x8,%edi
  0x00000000030e5e03: mov    %edi,0xdc(%r9)
  0x00000000030e5e0a: movabs $0x173260a8,%r9    ;   {metadata({method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e5e14: and    $0x1ff8,%edi
  0x00000000030e5e1a: cmp    $0x0,%edi
  0x00000000030e5e1d: je     0x00000000030e6416  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@0 (line 82)

  0x00000000030e5e23: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ; implicit exception: dispatches to 0x00000000030e642d
  0x00000000030e5e26: mov    %r8,%r9
  0x00000000030e5e29: movabs $0x17488e08,%rdi   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e5e33: mov    0x8(%r9),%r9d
  0x00000000030e5e37: shl    $0x3,%r9
  0x00000000030e5e3b: cmp    0x110(%rdi),%r9
  0x00000000030e5e42: jne    0x00000000030e5e51
  0x00000000030e5e44: addq   $0x1,0x118(%rdi)
  0x00000000030e5e4c: jmpq   0x00000000030e5eb7
  0x00000000030e5e51: cmp    0x120(%rdi),%r9
  0x00000000030e5e58: jne    0x00000000030e5e67
  0x00000000030e5e5a: addq   $0x1,0x128(%rdi)
  0x00000000030e5e62: jmpq   0x00000000030e5eb7
  0x00000000030e5e67: cmpq   $0x0,0x110(%rdi)
  0x00000000030e5e72: jne    0x00000000030e5e8b
  0x00000000030e5e74: mov    %r9,0x110(%rdi)
  0x00000000030e5e7b: movq   $0x1,0x118(%rdi)
  0x00000000030e5e86: jmpq   0x00000000030e5eb7
  0x00000000030e5e8b: cmpq   $0x0,0x120(%rdi)
  0x00000000030e5e96: jne    0x00000000030e5eaf
  0x00000000030e5e98: mov    %r9,0x120(%rdi)
  0x00000000030e5e9f: movq   $0x1,0x128(%rdi)
  0x00000000030e5eaa: jmpq   0x00000000030e5eb7
  0x00000000030e5eaf: addq   $0x1,0x108(%rdi)
  0x00000000030e5eb7: movabs $0x172dd740,%r9    ;   {metadata(method data for {method} {0x00000000171b3bf0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e5ec1: mov    0xdc(%r9),%edi
  0x00000000030e5ec8: add    $0x8,%edi
  0x00000000030e5ecb: mov    %edi,0xdc(%r9)
  0x00000000030e5ed2: movabs $0x171b3be8,%r9    ;   {metadata({method} {0x00000000171b3bf0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e5edc: and    $0x7ffff8,%edi
  0x00000000030e5ee2: cmp    $0x0,%edi
  0x00000000030e5ee5: je     0x00000000030e6432
  0x00000000030e5eeb: mov    0xc(%r8),%r9d      ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000030e5eef: mov    0xc(%r9),%esi      ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ; implicit exception: dispatches to 0x00000000030e6449
  0x00000000030e5ef3: movzwl 0xc(%rdx),%edi     ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalize@6 (line 83)

  0x00000000030e5ef7: movzwl 0xe(%rdx),%ebx     ;*getfield altSlash
                                                ; - java.io.WinNTFileSystem::normalize@11 (line 84)

  0x00000000030e5efb: mov    $0x0,%ecx
  0x00000000030e5f00: mov    $0x0,%r9d          ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@22 (line 86)

  0x00000000030e5f06: xchg   %ax,%ax
  0x00000000030e5f08: cmp    %esi,%ecx
  0x00000000030e5f0a: movabs $0x17488e08,%rax   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e5f14: movabs $0x138,%r11
  0x00000000030e5f1e: jge    0x00000000030e5f2e
  0x00000000030e5f24: movabs $0x148,%r11
  0x00000000030e5f2e: mov    (%rax,%r11,1),%r13
  0x00000000030e5f32: lea    0x1(%r13),%r13
  0x00000000030e5f36: mov    %r13,(%rax,%r11,1)
  0x00000000030e5f3a: jge    0x00000000030e627d  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000030e5f40: mov    %r8,%rax
  0x00000000030e5f43: movabs $0x17488e08,%r11   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e5f4d: mov    0x8(%rax),%eax
  0x00000000030e5f50: shl    $0x3,%rax
  0x00000000030e5f54: cmp    0x160(%r11),%rax
  0x00000000030e5f5b: jne    0x00000000030e5f6a
  0x00000000030e5f5d: addq   $0x1,0x168(%r11)
  0x00000000030e5f65: jmpq   0x00000000030e5fd0
  0x00000000030e5f6a: cmp    0x170(%r11),%rax
  0x00000000030e5f71: jne    0x00000000030e5f80
  0x00000000030e5f73: addq   $0x1,0x178(%r11)
  0x00000000030e5f7b: jmpq   0x00000000030e5fd0
  0x00000000030e5f80: cmpq   $0x0,0x160(%r11)
  0x00000000030e5f8b: jne    0x00000000030e5fa4
  0x00000000030e5f8d: mov    %rax,0x160(%r11)
  0x00000000030e5f94: movq   $0x1,0x168(%r11)
  0x00000000030e5f9f: jmpq   0x00000000030e5fd0
  0x00000000030e5fa4: cmpq   $0x0,0x170(%r11)
  0x00000000030e5faf: jne    0x00000000030e5fc8
  0x00000000030e5fb1: mov    %rax,0x170(%r11)
  0x00000000030e5fb8: movq   $0x1,0x178(%r11)
  0x00000000030e5fc3: jmpq   0x00000000030e5fd0
  0x00000000030e5fc8: addq   $0x1,0x158(%r11)
  0x00000000030e5fd0: movabs $0x172dd5c8,%rax   ;   {metadata(method data for {method} {0x00000000171b3d40} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e5fda: mov    0xdc(%rax),%r11d
  0x00000000030e5fe1: add    $0x8,%r11d
  0x00000000030e5fe5: mov    %r11d,0xdc(%rax)
  0x00000000030e5fec: movabs $0x171b3d38,%rax   ;   {metadata({method} {0x00000000171b3d40} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e5ff6: and    $0x7ffff8,%r11d
  0x00000000030e5ffd: cmp    $0x0,%r11d
  0x00000000030e6001: je     0x00000000030e644e
  0x00000000030e6007: cmp    $0x0,%ecx
  0x00000000030e600a: movabs $0x172dd5c8,%rax   ;   {metadata(method data for {method} {0x00000000171b3d40} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e6014: movabs $0x108,%r11
  0x00000000030e601e: jl     0x00000000030e602e
  0x00000000030e6024: movabs $0x118,%r11
  0x00000000030e602e: mov    (%rax,%r11,1),%r13
  0x00000000030e6032: lea    0x1(%r13),%r13
  0x00000000030e6036: mov    %r13,(%rax,%r11,1)
  0x00000000030e603a: jl     0x00000000030e63b3  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000030e6040: mov    0xc(%r8),%eax      ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 645)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000030e6044: mov    0xc(%rax),%r11d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ; implicit exception: dispatches to 0x00000000030e6465
  0x00000000030e6048: cmp    %r11d,%ecx
  0x00000000030e604b: movabs $0x172dd5c8,%r11   ;   {metadata(method data for {method} {0x00000000171b3d40} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e6055: movabs $0x128,%r13
  0x00000000030e605f: jl     0x00000000030e606f
  0x00000000030e6065: movabs $0x138,%r13
  0x00000000030e606f: mov    (%r11,%r13,1),%r14
  0x00000000030e6073: lea    0x1(%r14),%r14
  0x00000000030e6077: mov    %r14,(%r11,%r13,1)
  0x00000000030e607b: jge    0x00000000030e63b3  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000030e6081: movslq %ecx,%r11
  0x00000000030e6084: cmp    0xc(%rax),%ecx
  0x00000000030e6087: jae    0x00000000030e646a
  0x00000000030e608d: movzwl 0x10(%rax,%r11,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000030e6093: cmp    %ebx,%eax
  0x00000000030e6095: movabs $0x17488e08,%r11   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e609f: movabs $0x188,%r13
  0x00000000030e60a9: jne    0x00000000030e60b9
  0x00000000030e60af: movabs $0x198,%r13
  0x00000000030e60b9: mov    (%r11,%r13,1),%r14
  0x00000000030e60bd: lea    0x1(%r14),%r14
  0x00000000030e60c1: mov    %r14,(%r11,%r13,1)
  0x00000000030e60c5: je     0x00000000030e623f  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@40 (line 88)

  0x00000000030e60cb: cmp    %edi,%eax
  0x00000000030e60cd: movabs $0x17488e08,%r11   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e60d7: movabs $0x1f0,%r13
  0x00000000030e60e1: jne    0x00000000030e60f1
  0x00000000030e60e7: movabs $0x200,%r13
  0x00000000030e60f1: mov    (%r11,%r13,1),%r14
  0x00000000030e60f5: lea    0x1(%r14),%r14
  0x00000000030e60f9: mov    %r14,(%r11,%r13,1)
  0x00000000030e60fd: jne    0x00000000030e6175  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@68 (line 90)

  0x00000000030e6103: cmp    %edi,%r9d
  0x00000000030e6106: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e6110: movabs $0x210,%r11
  0x00000000030e611a: jne    0x00000000030e612a
  0x00000000030e6120: movabs $0x220,%r11
  0x00000000030e612a: mov    (%r9,%r11,1),%r13
  0x00000000030e612e: lea    0x1(%r13),%r13
  0x00000000030e6132: mov    %r13,(%r9,%r11,1)
  0x00000000030e6136: jne    0x00000000030e6175  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x00000000030e613c: cmp    $0x1,%ecx
  0x00000000030e613f: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e6149: movabs $0x230,%r11
  0x00000000030e6153: jle    0x00000000030e6163
  0x00000000030e6159: movabs $0x240,%r11
  0x00000000030e6163: mov    (%r9,%r11,1),%r13
  0x00000000030e6167: lea    0x1(%r13),%r13
  0x00000000030e616b: mov    %r13,(%r9,%r11,1)
  0x00000000030e616f: jg     0x00000000030e637b  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@80 (line 90)

  0x00000000030e6175: cmp    $0x3a,%eax
  0x00000000030e6178: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e6182: movabs $0x260,%r11
  0x00000000030e618c: jne    0x00000000030e619c
  0x00000000030e6192: movabs $0x270,%r11
  0x00000000030e619c: mov    (%r9,%r11,1),%r13
  0x00000000030e61a0: lea    0x1(%r13),%r13
  0x00000000030e61a4: mov    %r13,(%r9,%r11,1)
  0x00000000030e61a8: jne    0x00000000030e61e7  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98 (line 92)

  0x00000000030e61ae: cmp    $0x1,%ecx
  0x00000000030e61b1: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e61bb: movabs $0x280,%r11
  0x00000000030e61c5: jle    0x00000000030e61d5
  0x00000000030e61cb: movabs $0x290,%r11
  0x00000000030e61d5: mov    (%r9,%r11,1),%r13
  0x00000000030e61d9: lea    0x1(%r13),%r13
  0x00000000030e61dd: mov    %r13,(%r9,%r11,1)
  0x00000000030e61e1: jg     0x00000000030e6343  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x00000000030e61e7: inc    %ecx
  0x00000000030e61e9: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e61f3: mov    0xe0(%r9),%r11d
  0x00000000030e61fa: add    $0x8,%r11d
  0x00000000030e61fe: mov    %r11d,0xe0(%r9)
  0x00000000030e6205: movabs $0x173260a8,%r9    ;   {metadata({method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e620f: and    $0xfff8,%r11d
  0x00000000030e6216: cmp    $0x0,%r11d
  0x00000000030e621a: je     0x00000000030e6473  ; OopMap{rdx=Oop r8=Oop off=1120}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)

  0x00000000030e6220: test   %eax,-0x28f6126(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030e6226: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e6230: incl   0x2b0(%r9)
  0x00000000030e6237: mov    %rax,%r9
  0x00000000030e623a: jmpq   0x00000000030e5f08  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)

  0x00000000030e623f: cmp    %edi,%r9d
  0x00000000030e6242: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e624c: movabs $0x1a8,%rdi
  0x00000000030e6256: jne    0x00000000030e6266
  0x00000000030e625c: movabs $0x1b8,%rdi
  0x00000000030e6266: mov    (%r9,%rdi,1),%rbx
  0x00000000030e626a: lea    0x1(%rbx),%rbx
  0x00000000030e626e: mov    %rbx,(%r9,%rdi,1)
  0x00000000030e6272: jne    0x00000000030e6310
  0x00000000030e6278: jmpq   0x00000000030e62fd  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49 (line 89)

  0x00000000030e627d: cmp    %edi,%r9d
  0x00000000030e6280: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e628a: movabs $0x2c8,%rdi
  0x00000000030e6294: jne    0x00000000030e62a4
  0x00000000030e629a: movabs $0x2d8,%rdi
  0x00000000030e62a4: mov    (%r9,%rdi,1),%rbx
  0x00000000030e62a8: lea    0x1(%rbx),%rbx
  0x00000000030e62ac: mov    %rbx,(%r9,%rdi,1)
  0x00000000030e62b0: jne    0x00000000030e62eb  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)

  0x00000000030e62b6: mov    %rdx,%r9
  0x00000000030e62b9: movabs $0x17488e08,%rdi   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e62c3: addq   $0x1,0x2e8(%rdi)
  0x00000000030e62cb: mov    %rsi,%rdi
  0x00000000030e62ce: dec    %edi
  0x00000000030e62d0: mov    %rsi,%r9           ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 96)

  0x00000000030e62d3: nop
  0x00000000030e62d4: nop
  0x00000000030e62d5: nop
  0x00000000030e62d6: nop
  0x00000000030e62d7: callq  0x00000000030161a0  ; OopMap{off=1308}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137 (line 96)
                                                ;   {optimized virtual_call}
  0x00000000030e62dc: add    $0x90,%rsp
  0x00000000030e62e3: pop    %rbp
  0x00000000030e62e4: test   %eax,-0x28f61ea(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e62ea: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@140 (line 96)

  0x00000000030e62eb: mov    %r8,%rax
  0x00000000030e62ee: add    $0x90,%rsp
  0x00000000030e62f5: pop    %rbp
  0x00000000030e62f6: test   %eax,-0x28f61fc(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e62fc: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@142 (line 97)

  0x00000000030e62fd: dec    %ecx
  0x00000000030e62ff: movabs $0x17488e08,%r9    ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e6309: incl   0x1c8(%r9)         ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@56 (line 89)

  0x00000000030e6310: mov    %rdx,%r9
  0x00000000030e6313: movabs $0x17488e08,%rdi   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e631d: addq   $0x1,0x1e0(%rdi)
  0x00000000030e6325: mov    %rsi,%r9
  0x00000000030e6328: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000030e632b: nop
  0x00000000030e632c: nop
  0x00000000030e632d: nop
  0x00000000030e632e: nop
  0x00000000030e632f: callq  0x00000000030161a0  ; OopMap{off=1396}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {optimized virtual_call}
  0x00000000030e6334: add    $0x90,%rsp
  0x00000000030e633b: pop    %rbp
  0x00000000030e633c: test   %eax,-0x28f6242(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e6342: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 89)

  0x00000000030e6343: mov    %rdx,%r9
  0x00000000030e6346: movabs $0x17488e08,%rdi   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e6350: addq   $0x1,0x2a0(%rdi)
  0x00000000030e6358: mov    %rsi,%r9
  0x00000000030e635b: mov    $0x0,%edi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000030e6360: nop
  0x00000000030e6361: nop
  0x00000000030e6362: nop
  0x00000000030e6363: nop
  0x00000000030e6364: nop
  0x00000000030e6365: nop
  0x00000000030e6366: nop
  0x00000000030e6367: callq  0x00000000030161a0  ; OopMap{off=1452}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {optimized virtual_call}
  0x00000000030e636c: add    $0x90,%rsp
  0x00000000030e6373: pop    %rbp
  0x00000000030e6374: test   %eax,-0x28f627a(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e637a: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@114 (line 93)

  0x00000000030e637b: mov    %rdx,%r9
  0x00000000030e637e: movabs $0x17488e08,%rdi   ;   {metadata(method data for {method} {0x00000000173260b0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x00000000030e6388: addq   $0x1,0x250(%rdi)
  0x00000000030e6390: dec    %ecx
  0x00000000030e6392: mov    %rsi,%r9
  0x00000000030e6395: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 91)

  0x00000000030e6398: nop
  0x00000000030e6399: nop
  0x00000000030e639a: nop
  0x00000000030e639b: nop
  0x00000000030e639c: nop
  0x00000000030e639d: nop
  0x00000000030e639e: nop
  0x00000000030e639f: callq  0x00000000030161a0  ; OopMap{off=1508}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 91)
                                                ;   {optimized virtual_call}
  0x00000000030e63a4: add    $0x90,%rsp
  0x00000000030e63ab: pop    %rbp
  0x00000000030e63ac: test   %eax,-0x28f62b2(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e63b2: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 91)

  0x00000000030e63b3: mov    %r9d,0x74(%rsp)
  0x00000000030e63b8: mov    %ebx,0x70(%rsp)
  0x00000000030e63bc: mov    %edi,0x6c(%rsp)
  0x00000000030e63c0: mov    %esi,0x68(%rsp)
  0x00000000030e63c4: mov    %r8,0x58(%rsp)
  0x00000000030e63c9: mov    %rdx,0x60(%rsp)
  0x00000000030e63ce: xchg   %ax,%ax
  0x00000000030e63d0: jmpq   0x00000000030e6499  ;   {no_reloc}
  0x00000000030e63d5: add    %al,(%rax)
  0x00000000030e63d7: add    %al,(%rax)
  0x00000000030e63d9: add    %ch,%cl
  0x00000000030e63db: (bad)  
  0x00000000030e63dc: add    %al,(%rax)
  0x00000000030e63de: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 646)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000030e63e1: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x00000000171b3d40} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e63e4: enterq $0x2dd5,$0x17
  0x00000000030e63e8: add    %al,(%rax)
  0x00000000030e63ea: add    %al,(%rax)
  0x00000000030e63ec: addq   $0x1,0x148(%r13)
  0x00000000030e63f4: mov    %rcx,%r8
  0x00000000030e63f7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 646)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000030e63fa: mov    %ecx,0x78(%rsp)
  0x00000000030e63fe: mov    %rax,0x50(%rsp)
  0x00000000030e6403: nop
  0x00000000030e6404: nop
  0x00000000030e6405: nop
  0x00000000030e6406: nop
  0x00000000030e6407: callq  0x00000000030161a0  ; OopMap{[88]=Oop [80]=Oop [96]=Oop off=1612}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 646)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {optimized virtual_call}
  0x00000000030e640c: mov    0x50(%rsp),%rax
  0x00000000030e6411: jmpq   0x00000000030e64db
  0x00000000030e6416: mov    %r9,0x8(%rsp)
  0x00000000030e641b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e6423: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=1640}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)
                                                ;   {runtime_call}
  0x00000000030e6428: jmpq   0x00000000030e5e23
  0x00000000030e642d: callq  0x0000000003041280  ; OopMap{rdx=Oop r8=Oop off=1650}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x00000000030e6432: mov    %r9,0x8(%rsp)
  0x00000000030e6437: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e643f: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=1668}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 611)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x00000000030e6444: jmpq   0x00000000030e5eeb
  0x00000000030e6449: callq  0x0000000003041280  ; OopMap{rdx=Oop r8=Oop off=1678}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x00000000030e644e: mov    %rax,0x8(%rsp)
  0x00000000030e6453: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e645b: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=1696}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 645)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000030e6460: jmpq   0x00000000030e6007
  0x00000000030e6465: callq  0x0000000003041280  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1706}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 645)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000030e646a: mov    %rcx,(%rsp)
  0x00000000030e646e: callq  0x0000000003041940  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1715}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000030e6473: mov    %r9,0x8(%rsp)
  0x00000000030e6478: movq   $0x7a,(%rsp)
  0x00000000030e6480: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=1733}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122 (line 86)
                                                ;   {runtime_call}
  0x00000000030e6485: jmpq   0x00000000030e6220
  0x00000000030e648a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030e6494: mov    $0xa050f00,%eax
  0x00000000030e6499: callq  0x00000000030d2160  ; OopMap{[88]=Oop [96]=Oop off=1758}
                                                ;*new  ; - java.lang.String::charAt@13 (line 646)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000030e649e: jmpq   0x00000000030e63d0
  0x00000000030e64a3: mov    %rdx,%rdx
  0x00000000030e64a6: callq  0x0000000003040d60  ; OopMap{[88]=Oop [96]=Oop off=1771}
                                                ;*new  ; - java.lang.String::charAt@13 (line 646)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000030e64ab: jmpq   0x00000000030e63df
  0x00000000030e64b0: nop
  0x00000000030e64b1: nop
  0x00000000030e64b2: mov    0x2a8(%r15),%rax
  0x00000000030e64b9: movabs $0x0,%r10
  0x00000000030e64c3: mov    %r10,0x2a8(%r15)
  0x00000000030e64ca: movabs $0x0,%r10
  0x00000000030e64d4: mov    %r10,0x2b0(%r15)
  0x00000000030e64db: add    $0x90,%rsp
  0x00000000030e64e2: pop    %rbp
  0x00000000030e64e3: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e64e8: hlt    
  0x00000000030e64e9: hlt    
  0x00000000030e64ea: hlt    
  0x00000000030e64eb: hlt    
  0x00000000030e64ec: hlt    
  0x00000000030e64ed: hlt    
  0x00000000030e64ee: hlt    
  0x00000000030e64ef: hlt    
  0x00000000030e64f0: hlt    
  0x00000000030e64f1: hlt    
  0x00000000030e64f2: hlt    
  0x00000000030e64f3: hlt    
  0x00000000030e64f4: hlt    
  0x00000000030e64f5: hlt    
  0x00000000030e64f6: hlt    
  0x00000000030e64f7: hlt    
  0x00000000030e64f8: hlt    
  0x00000000030e64f9: hlt    
  0x00000000030e64fa: hlt    
  0x00000000030e64fb: hlt    
  0x00000000030e64fc: hlt    
  0x00000000030e64fd: hlt    
  0x00000000030e64fe: hlt    
  0x00000000030e64ff: hlt    
[Stub Code]
  0x00000000030e6500: nop                       ;   {no_reloc}
  0x00000000030e6501: nop
  0x00000000030e6502: nop
  0x00000000030e6503: nop
  0x00000000030e6504: nop
  0x00000000030e6505: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e650f: jmpq   0x00000000030e650f  ;   {runtime_call}
  0x00000000030e6514: nop
  0x00000000030e6515: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e651f: jmpq   0x00000000030e651f  ;   {runtime_call}
  0x00000000030e6524: nop
  0x00000000030e6525: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e652f: jmpq   0x00000000030e652f  ;   {runtime_call}
  0x00000000030e6534: nop
  0x00000000030e6535: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e653f: jmpq   0x00000000030e653f  ;   {runtime_call}
  0x00000000030e6544: nop
  0x00000000030e6545: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e654f: jmpq   0x00000000030e654f  ;   {runtime_call}
[Exception Handler]
  0x00000000030e6554: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030e6559: mov    %rsp,-0x28(%rsp)
  0x00000000030e655e: sub    $0x80,%rsp
  0x00000000030e6565: mov    %rax,0x78(%rsp)
  0x00000000030e656a: mov    %rcx,0x70(%rsp)
  0x00000000030e656f: mov    %rdx,0x68(%rsp)
  0x00000000030e6574: mov    %rbx,0x60(%rsp)
  0x00000000030e6579: mov    %rbp,0x50(%rsp)
  0x00000000030e657e: mov    %rsi,0x48(%rsp)
  0x00000000030e6583: mov    %rdi,0x40(%rsp)
  0x00000000030e6588: mov    %r8,0x38(%rsp)
  0x00000000030e658d: mov    %r9,0x30(%rsp)
  0x00000000030e6592: mov    %r10,0x28(%rsp)
  0x00000000030e6597: mov    %r11,0x20(%rsp)
  0x00000000030e659c: mov    %r12,0x18(%rsp)
  0x00000000030e65a1: mov    %r13,0x10(%rsp)
  0x00000000030e65a6: mov    %r14,0x8(%rsp)
  0x00000000030e65ab: mov    %r15,(%rsp)
  0x00000000030e65af: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e65b9: movabs $0x30e6559,%rdx    ;   {internal_word}
  0x00000000030e65c3: mov    %rsp,%r8
  0x00000000030e65c6: and    $0xfffffffffffffff0,%rsp
  0x00000000030e65ca: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e65cf: hlt    
[Deopt Handler Code]
  0x00000000030e65d0: movabs $0x30e65d0,%r10    ;   {section_word}
  0x00000000030e65da: push   %r10
  0x00000000030e65dc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e65e1: hlt    
  0x00000000030e65e2: hlt    
  0x00000000030e65e3: hlt    
  0x00000000030e65e4: hlt    
  0x00000000030e65e5: hlt    
  0x00000000030e65e6: hlt    
  0x00000000030e65e7: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x00000000030e5dc0' size='3984' address='0x00000000030e5bd0' relocation_offset='288' insts_offset='496' stub_offset='2352' scopes_data_offset='2616' scopes_pcs_offset='3112' dependencies_offset='3944' nul_chk_table_offset='3952' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='147' backedge_count='3134' iicount='147' stamp='5.671'/>
Decoding compiled method 0x00000000030e5790:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b4e18} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000030e5900: mov    0x8(%rdx),%r10d
  0x00000000030e5904: shl    $0x3,%r10
  0x00000000030e5908: cmp    %rax,%r10
  0x00000000030e590b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e5911: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e591c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e5920: mov    %eax,-0x6000(%rsp)
  0x00000000030e5927: push   %rbp
  0x00000000030e5928: sub    $0x30,%rsp
  0x00000000030e592c: movabs $0x174903c0,%r9    ;   {metadata(method data for {method} {0x00000000171b4e18} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e5936: mov    0xdc(%r9),%esi
  0x00000000030e593d: add    $0x8,%esi
  0x00000000030e5940: mov    %esi,0xdc(%r9)
  0x00000000030e5947: movabs $0x171b4e10,%r9    ;   {metadata({method} {0x00000000171b4e18} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e5951: and    $0x1ff8,%esi
  0x00000000030e5957: cmp    $0x0,%esi
  0x00000000030e595a: je     0x00000000030e5a08  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1422)

  0x00000000030e5960: mov    %rdx,%r9
  0x00000000030e5963: movabs $0x174903c0,%rsi   ;   {metadata(method data for {method} {0x00000000171b4e18} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e596d: mov    0x8(%r9),%r9d
  0x00000000030e5971: shl    $0x3,%r9
  0x00000000030e5975: cmp    0x110(%rsi),%r9
  0x00000000030e597c: jne    0x00000000030e598b
  0x00000000030e597e: addq   $0x1,0x118(%rsi)
  0x00000000030e5986: jmpq   0x00000000030e59f1
  0x00000000030e598b: cmp    0x120(%rsi),%r9
  0x00000000030e5992: jne    0x00000000030e59a1
  0x00000000030e5994: addq   $0x1,0x128(%rsi)
  0x00000000030e599c: jmpq   0x00000000030e59f1
  0x00000000030e59a1: cmpq   $0x0,0x110(%rsi)
  0x00000000030e59ac: jne    0x00000000030e59c5
  0x00000000030e59ae: mov    %r9,0x110(%rsi)
  0x00000000030e59b5: movq   $0x1,0x118(%rsi)
  0x00000000030e59c0: jmpq   0x00000000030e59f1
  0x00000000030e59c5: cmpq   $0x0,0x120(%rsi)
  0x00000000030e59d0: jne    0x00000000030e59e9
  0x00000000030e59d2: mov    %r9,0x120(%rsi)
  0x00000000030e59d9: movq   $0x1,0x128(%rsi)
  0x00000000030e59e4: jmpq   0x00000000030e59f1
  0x00000000030e59e9: addq   $0x1,0x108(%rsi)
  0x00000000030e59f1: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1422)

  0x00000000030e59f7: callq  0x00000000030161a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1422)
                                                ;   {optimized virtual_call}
  0x00000000030e59fc: add    $0x30,%rsp
  0x00000000030e5a00: pop    %rbp
  0x00000000030e5a01: test   %eax,-0x28f5907(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e5a07: retq   
  0x00000000030e5a08: mov    %r9,0x8(%rsp)
  0x00000000030e5a0d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e5a15: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1422)
                                                ;   {runtime_call}
  0x00000000030e5a1a: jmpq   0x00000000030e5960
  0x00000000030e5a1f: nop
  0x00000000030e5a20: nop
  0x00000000030e5a21: mov    0x2a8(%r15),%rax
  0x00000000030e5a28: movabs $0x0,%r10
  0x00000000030e5a32: mov    %r10,0x2a8(%r15)
  0x00000000030e5a39: movabs $0x0,%r10
  0x00000000030e5a43: mov    %r10,0x2b0(%r15)
  0x00000000030e5a4a: add    $0x30,%rsp
  0x00000000030e5a4e: pop    %rbp
  0x00000000030e5a4f: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e5a54: hlt    
  0x00000000030e5a55: hlt    
  0x00000000030e5a56: hlt    
  0x00000000030e5a57: hlt    
  0x00000000030e5a58: hlt    
  0x00000000030e5a59: hlt    
  0x00000000030e5a5a: hlt    
  0x00000000030e5a5b: hlt    
  0x00000000030e5a5c: hlt    
  0x00000000030e5a5d: hlt    
  0x00000000030e5a5e: hlt    
  0x00000000030e5a5f: hlt    
[Stub Code]
  0x00000000030e5a60: nop                       ;   {no_reloc}
  0x00000000030e5a61: nop
  0x00000000030e5a62: nop
  0x00000000030e5a63: nop
  0x00000000030e5a64: nop
  0x00000000030e5a65: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e5a6f: jmpq   0x00000000030e5a6f  ;   {runtime_call}
[Exception Handler]
  0x00000000030e5a74: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030e5a79: mov    %rsp,-0x28(%rsp)
  0x00000000030e5a7e: sub    $0x80,%rsp
  0x00000000030e5a85: mov    %rax,0x78(%rsp)
  0x00000000030e5a8a: mov    %rcx,0x70(%rsp)
  0x00000000030e5a8f: mov    %rdx,0x68(%rsp)
  0x00000000030e5a94: mov    %rbx,0x60(%rsp)
  0x00000000030e5a99: mov    %rbp,0x50(%rsp)
  0x00000000030e5a9e: mov    %rsi,0x48(%rsp)
  0x00000000030e5aa3: mov    %rdi,0x40(%rsp)
  0x00000000030e5aa8: mov    %r8,0x38(%rsp)
  0x00000000030e5aad: mov    %r9,0x30(%rsp)
  0x00000000030e5ab2: mov    %r10,0x28(%rsp)
  0x00000000030e5ab7: mov    %r11,0x20(%rsp)
  0x00000000030e5abc: mov    %r12,0x18(%rsp)
  0x00000000030e5ac1: mov    %r13,0x10(%rsp)
  0x00000000030e5ac6: mov    %r14,0x8(%rsp)
  0x00000000030e5acb: mov    %r15,(%rsp)
  0x00000000030e5acf: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e5ad9: movabs $0x30e5a79,%rdx    ;   {internal_word}
  0x00000000030e5ae3: mov    %rsp,%r8
  0x00000000030e5ae6: and    $0xfffffffffffffff0,%rsp
  0x00000000030e5aea: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e5aef: hlt    
[Deopt Handler Code]
  0x00000000030e5af0: movabs $0x30e5af0,%r10    ;   {section_word}
  0x00000000030e5afa: push   %r10
  0x00000000030e5afc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e5b01: hlt    
  0x00000000030e5b02: hlt    
  0x00000000030e5b03: hlt    
  0x00000000030e5b04: hlt    
  0x00000000030e5b05: hlt    
  0x00000000030e5b06: hlt    
  0x00000000030e5b07: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x00000000030e5900' size='1040' address='0x00000000030e5790' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='618' iicount='618' stamp='6.015'/>
<writer thread='1104'/>
<task_queued compile_id='26' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='148' backedge_count='6144' iicount='148' level='3' stamp='6.015' comment='tiered' hot_count='148'/>
<task_queued compile_id='27' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3584' iicount='3584' level='3' stamp='6.016' comment='tiered' hot_count='3584'/>
<task_queued compile_id='28' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='3584' iicount='3584' level='3' stamp='6.016' comment='tiered' hot_count='3584'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e5350:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b5020} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000030e54c0: mov    0x8(%rdx),%r10d
  0x00000000030e54c4: shl    $0x3,%r10
  0x00000000030e54c8: cmp    %rax,%r10
  0x00000000030e54cb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e54d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e54dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e54e0: mov    %eax,-0x6000(%rsp)
  0x00000000030e54e7: push   %rbp
  0x00000000030e54e8: sub    $0x30,%rsp
  0x00000000030e54ec: movabs $0x174894e0,%r9    ;   {metadata(method data for {method} {0x00000000171b5020} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e54f6: mov    0xdc(%r9),%esi
  0x00000000030e54fd: add    $0x8,%esi
  0x00000000030e5500: mov    %esi,0xdc(%r9)
  0x00000000030e5507: movabs $0x171b5018,%r9    ;   {metadata({method} {0x00000000171b5020} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e5511: and    $0x1ff8,%esi
  0x00000000030e5517: cmp    $0x0,%esi
  0x00000000030e551a: je     0x00000000030e55c8  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1491)

  0x00000000030e5520: mov    %rdx,%r9
  0x00000000030e5523: movabs $0x174894e0,%rsi   ;   {metadata(method data for {method} {0x00000000171b5020} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e552d: mov    0x8(%r9),%r9d
  0x00000000030e5531: shl    $0x3,%r9
  0x00000000030e5535: cmp    0x110(%rsi),%r9
  0x00000000030e553c: jne    0x00000000030e554b
  0x00000000030e553e: addq   $0x1,0x118(%rsi)
  0x00000000030e5546: jmpq   0x00000000030e55b1
  0x00000000030e554b: cmp    0x120(%rsi),%r9
  0x00000000030e5552: jne    0x00000000030e5561
  0x00000000030e5554: addq   $0x1,0x128(%rsi)
  0x00000000030e555c: jmpq   0x00000000030e55b1
  0x00000000030e5561: cmpq   $0x0,0x110(%rsi)
  0x00000000030e556c: jne    0x00000000030e5585
  0x00000000030e556e: mov    %r9,0x110(%rsi)
  0x00000000030e5575: movq   $0x1,0x118(%rsi)
  0x00000000030e5580: jmpq   0x00000000030e55b1
  0x00000000030e5585: cmpq   $0x0,0x120(%rsi)
  0x00000000030e5590: jne    0x00000000030e55a9
  0x00000000030e5592: mov    %r9,0x120(%rsi)
  0x00000000030e5599: movq   $0x1,0x128(%rsi)
  0x00000000030e55a4: jmpq   0x00000000030e55b1
  0x00000000030e55a9: addq   $0x1,0x108(%rsi)
  0x00000000030e55b1: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1491)

  0x00000000030e55b7: callq  0x00000000030161a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1491)
                                                ;   {optimized virtual_call}
  0x00000000030e55bc: add    $0x30,%rsp
  0x00000000030e55c0: pop    %rbp
  0x00000000030e55c1: test   %eax,-0x28f54c7(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e55c7: retq   
  0x00000000030e55c8: mov    %r9,0x8(%rsp)
  0x00000000030e55cd: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e55d5: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1491)
                                                ;   {runtime_call}
  0x00000000030e55da: jmpq   0x00000000030e5520
  0x00000000030e55df: nop
  0x00000000030e55e0: nop
  0x00000000030e55e1: mov    0x2a8(%r15),%rax
  0x00000000030e55e8: movabs $0x0,%r10
  0x00000000030e55f2: mov    %r10,0x2a8(%r15)
  0x00000000030e55f9: movabs $0x0,%r10
  0x00000000030e5603: mov    %r10,0x2b0(%r15)
  0x00000000030e560a: add    $0x30,%rsp
  0x00000000030e560e: pop    %rbp
  0x00000000030e560f: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e5614: hlt    
  0x00000000030e5615: hlt    
  0x00000000030e5616: hlt    
  0x00000000030e5617: hlt    
  0x00000000030e5618: hlt    
  0x00000000030e5619: hlt    
  0x00000000030e561a: hlt    
  0x00000000030e561b: hlt    
  0x00000000030e561c: hlt    
  0x00000000030e561d: hlt    
  0x00000000030e561e: hlt    
  0x00000000030e561f: hlt    
[Stub Code]
  0x00000000030e5620: nop                       ;   {no_reloc}
  0x00000000030e5621: nop
  0x00000000030e5622: nop
  0x00000000030e5623: nop
  0x00000000030e5624: nop
  0x00000000030e5625: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e562f: jmpq   0x00000000030e562f  ;   {runtime_call}
[Exception Handler]
  0x00000000030e5634: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030e5639: mov    %rsp,-0x28(%rsp)
  0x00000000030e563e: sub    $0x80,%rsp
  0x00000000030e5645: mov    %rax,0x78(%rsp)
  0x00000000030e564a: mov    %rcx,0x70(%rsp)
  0x00000000030e564f: mov    %rdx,0x68(%rsp)
  0x00000000030e5654: mov    %rbx,0x60(%rsp)
  0x00000000030e5659: mov    %rbp,0x50(%rsp)
  0x00000000030e565e: mov    %rsi,0x48(%rsp)
  0x00000000030e5663: mov    %rdi,0x40(%rsp)
  0x00000000030e5668: mov    %r8,0x38(%rsp)
  0x00000000030e566d: mov    %r9,0x30(%rsp)
  0x00000000030e5672: mov    %r10,0x28(%rsp)
  0x00000000030e5677: mov    %r11,0x20(%rsp)
  0x00000000030e567c: mov    %r12,0x18(%rsp)
  0x00000000030e5681: mov    %r13,0x10(%rsp)
  0x00000000030e5686: mov    %r14,0x8(%rsp)
  0x00000000030e568b: mov    %r15,(%rsp)
  0x00000000030e568f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e5699: movabs $0x30e5639,%rdx    ;   {internal_word}
  0x00000000030e56a3: mov    %rsp,%r8
  0x00000000030e56a6: and    $0xfffffffffffffff0,%rsp
  0x00000000030e56aa: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e56af: hlt    
[Deopt Handler Code]
  0x00000000030e56b0: movabs $0x30e56b0,%r10    ;   {section_word}
  0x00000000030e56ba: push   %r10
  0x00000000030e56bc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e56c1: hlt    
  0x00000000030e56c2: hlt    
  0x00000000030e56c3: hlt    
  0x00000000030e56c4: hlt    
  0x00000000030e56c5: hlt    
  0x00000000030e56c6: hlt    
  0x00000000030e56c7: hlt    
<nmethod compile_id='23' compiler='C1' level='3' entry='0x00000000030e54c0' size='1040' address='0x00000000030e5350' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='533' iicount='533' stamp='7.744'/>
<writer thread='22228'/>
<task_queued compile_id='29' method='com/study/volatiletest/VisibilityDemo access$000 (Lcom/study/volatiletest/VisibilityDemo;)Z' bytes='5' count='128' iicount='128' level='1' stamp='7.744' comment='tiered' hot_count='128'/>
<writer thread='1104'/>
<task_queued compile_id='30' method='java/util/Arrays copyOf ([CI)[C' bytes='19' count='384' iicount='384' level='3' stamp='7.744' comment='tiered' hot_count='384'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e4690:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = &apos;[C&apos;
  # parm4:    rsi       = int
  # parm5:    rcx       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x00000000030e4840: mov    %eax,-0x6000(%rsp)
  0x00000000030e4847: push   %rbp
  0x00000000030e4848: sub    $0x40,%rsp
  0x00000000030e484c: mov    %r8d,0x20(%rsp)
  0x00000000030e4851: mov    %esi,0x24(%rsp)
  0x00000000030e4855: movabs $0x17499150,%rax   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e485f: mov    0xdc(%rax),%ebx
  0x00000000030e4865: add    $0x8,%ebx
  0x00000000030e4868: mov    %ebx,0xdc(%rax)
  0x00000000030e486e: movabs $0x171b5760,%rax   ;   {metadata({method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4878: and    $0x1ff8,%ebx
  0x00000000030e487e: cmp    $0x0,%ebx
  0x00000000030e4881: je     0x00000000030e4d1e  ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1744)

  0x00000000030e4887: mov    0x50(%rsp),%eax
  0x00000000030e488b: cmp    %r9d,%eax
  0x00000000030e488e: movabs $0x17499150,%rbx   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4898: movabs $0x108,%r11
  0x00000000030e48a2: jl     0x00000000030e48b2
  0x00000000030e48a8: movabs $0x118,%r11
  0x00000000030e48b2: mov    (%rbx,%r11,1),%r13
  0x00000000030e48b6: lea    0x1(%r13),%r13
  0x00000000030e48ba: mov    %r13,(%rbx,%r11,1)
  0x00000000030e48be: jl     0x00000000030e4902  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1744)

  0x00000000030e48c4: cmp    $0x0,%ecx
  0x00000000030e48c7: movabs $0x17499150,%rax   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e48d1: movabs $0x128,%rsi
  0x00000000030e48db: jne    0x00000000030e48eb
  0x00000000030e48e1: movabs $0x138,%rsi
  0x00000000030e48eb: mov    (%rax,%rsi,1),%rdi
  0x00000000030e48ef: lea    0x1(%rdi),%rdi
  0x00000000030e48f3: mov    %rdi,(%rax,%rsi,1)
  0x00000000030e48f7: jne    0x00000000030e4d09
  0x00000000030e48fd: jmpq   0x00000000030e4cf4  ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1745)

  0x00000000030e4902: cmp    $0x0,%eax
  0x00000000030e4905: movabs $0x17499150,%rbx   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e490f: movabs $0x160,%r11
  0x00000000030e4919: jge    0x00000000030e4929
  0x00000000030e491f: movabs $0x170,%r11
  0x00000000030e4929: mov    (%rbx,%r11,1),%r13
  0x00000000030e492d: lea    0x1(%r13),%r13
  0x00000000030e4931: mov    %r13,(%rbx,%r11,1)
  0x00000000030e4935: jge    0x00000000030e4940  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1747)

  0x00000000030e493b: mov    $0x0,%eax          ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1750)

  0x00000000030e4940: cmp    $0x0,%ecx
  0x00000000030e4943: movabs $0x17499150,%rbx   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e494d: movabs $0x180,%r11
  0x00000000030e4957: jne    0x00000000030e4967
  0x00000000030e495d: movabs $0x190,%r11
  0x00000000030e4967: mov    (%rbx,%r11,1),%r13
  0x00000000030e496b: lea    0x1(%r13),%r13
  0x00000000030e496f: mov    %r13,(%rbx,%r11,1)
  0x00000000030e4973: je     0x00000000030e4ce8  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1750)

  0x00000000030e4979: movslq %esi,%rbx
  0x00000000030e497c: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x00000000030e4d35
  0x00000000030e497f: jae    0x00000000030e4d3f
  0x00000000030e4985: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1754)

  0x00000000030e498a: mov    %ebx,0x28(%rsp)
  0x00000000030e498e: sub    %ecx,%r9d
  0x00000000030e4991: add    %r8d,%r9d
  0x00000000030e4994: add    %r8d,%eax
  0x00000000030e4997: nop
  0x00000000030e4998: cmp    %r9d,%eax
  0x00000000030e499b: movabs $0x17499150,%r11   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e49a5: movabs $0x1a0,%r13
  0x00000000030e49af: jg     0x00000000030e49bf
  0x00000000030e49b5: movabs $0x1b0,%r13
  0x00000000030e49bf: mov    (%r11,%r13,1),%r14
  0x00000000030e49c3: lea    0x1(%r14),%r14
  0x00000000030e49c7: mov    %r14,(%r11,%r13,1)
  0x00000000030e49cb: jg     0x00000000030e4cd7  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1757)

  0x00000000030e49d1: movslq %eax,%r11
  0x00000000030e49d4: cmp    0xc(%rdx),%eax     ; implicit exception: dispatches to 0x00000000030e4d48
  0x00000000030e49d7: jae    0x00000000030e4d52
  0x00000000030e49dd: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1759)

  0x00000000030e49e3: cmp    %ebx,%r11d
  0x00000000030e49e6: movabs $0x17499150,%r11   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e49f0: movabs $0x1c0,%r13
  0x00000000030e49fa: je     0x00000000030e4a0a
  0x00000000030e4a00: movabs $0x1d0,%r13
  0x00000000030e4a0a: mov    (%r11,%r13,1),%r14
  0x00000000030e4a0e: lea    0x1(%r14),%r14
  0x00000000030e4a12: mov    %r14,(%r11,%r13,1)
  0x00000000030e4a16: je     0x00000000030e4afc
  0x00000000030e4a1c: jmpq   0x00000000030e4ac1  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1759)

  0x00000000030e4a21: nopl   0x0(%rax)
  0x00000000030e4a28: movslq %eax,%r11
  0x00000000030e4a2b: cmp    0xc(%rdx),%eax
  0x00000000030e4a2e: jae    0x00000000030e4d5b
  0x00000000030e4a34: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1760)

  0x00000000030e4a3a: cmp    %ebx,%r11d
  0x00000000030e4a3d: movabs $0x17499150,%r11   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4a47: movabs $0x200,%r13
  0x00000000030e4a51: je     0x00000000030e4a61
  0x00000000030e4a57: movabs $0x210,%r13
  0x00000000030e4a61: mov    (%r11,%r13,1),%r14
  0x00000000030e4a65: lea    0x1(%r14),%r14
  0x00000000030e4a69: mov    %r14,(%r11,%r13,1)
  0x00000000030e4a6d: je     0x00000000030e4afc  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1760)

  0x00000000030e4a73: movabs $0x17499150,%r11   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4a7d: mov    0xe0(%r11),%r13d
  0x00000000030e4a84: add    $0x8,%r13d
  0x00000000030e4a88: mov    %r13d,0xe0(%r11)
  0x00000000030e4a8f: movabs $0x171b5760,%r11   ;   {metadata({method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4a99: and    $0xfff8,%r13d
  0x00000000030e4aa0: cmp    $0x0,%r13d
  0x00000000030e4aa4: je     0x00000000030e4d64  ; OopMap{rdi=Oop rdx=Oop off=618}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1760)

  0x00000000030e4aaa: test   %eax,-0x28f49b0(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030e4ab0: movabs $0x17499150,%r11   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4aba: incl   0x220(%r11)        ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1760)

  0x00000000030e4ac1: inc    %eax
  0x00000000030e4ac3: cmp    %r9d,%eax
  0x00000000030e4ac6: movabs $0x17499150,%r11   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4ad0: movabs $0x1e0,%r13
  0x00000000030e4ada: jg     0x00000000030e4aea
  0x00000000030e4ae0: movabs $0x1f0,%r13
  0x00000000030e4aea: mov    (%r11,%r13,1),%r14
  0x00000000030e4aee: lea    0x1(%r14),%r14
  0x00000000030e4af2: mov    %r14,(%r11,%r13,1)
  0x00000000030e4af6: jle    0x00000000030e4a28  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1760)

  0x00000000030e4afc: cmp    %r9d,%eax
  0x00000000030e4aff: movabs $0x17499150,%r11   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4b09: movabs $0x238,%r13
  0x00000000030e4b13: jg     0x00000000030e4b23
  0x00000000030e4b19: movabs $0x248,%r13
  0x00000000030e4b23: mov    (%r11,%r13,1),%r14
  0x00000000030e4b27: lea    0x1(%r14),%r14
  0x00000000030e4b2b: mov    %r14,(%r11,%r13,1)
  0x00000000030e4b2f: jg     0x00000000030e4c6c  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1764)

  0x00000000030e4b35: mov    %rax,%r11
  0x00000000030e4b38: inc    %r11d
  0x00000000030e4b3b: mov    %r11,%r13
  0x00000000030e4b3e: add    %ecx,%r13d
  0x00000000030e4b41: dec    %r13d
  0x00000000030e4b44: mov    %rsi,%r14
  0x00000000030e4b47: inc    %r14d
  0x00000000030e4b4a: jmpq   0x00000000030e4bfa  ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1767)

  0x00000000030e4b4f: nop
  0x00000000030e4b50: movslq %r11d,%rsi
  0x00000000030e4b53: cmp    0xc(%rdx),%r11d
  0x00000000030e4b57: jae    0x00000000030e4d7b
  0x00000000030e4b5d: movzwl 0x10(%rdx,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1767)

  0x00000000030e4b62: movslq %r14d,%rbx
  0x00000000030e4b65: cmp    0xc(%rdi),%r14d
  0x00000000030e4b69: jae    0x00000000030e4d84
  0x00000000030e4b6f: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1767)

  0x00000000030e4b74: cmp    %ebx,%esi
  0x00000000030e4b76: movabs $0x17499150,%rsi   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4b80: movabs $0x278,%rbx
  0x00000000030e4b8a: jne    0x00000000030e4b9a
  0x00000000030e4b90: movabs $0x288,%rbx
  0x00000000030e4b9a: mov    (%rsi,%rbx,1),%r8
  0x00000000030e4b9e: lea    0x1(%r8),%r8
  0x00000000030e4ba2: mov    %r8,(%rsi,%rbx,1)
  0x00000000030e4ba6: jne    0x00000000030e4c33  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1767)

  0x00000000030e4bac: inc    %r11d
  0x00000000030e4baf: inc    %r14d
  0x00000000030e4bb2: movabs $0x17499150,%rsi   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4bbc: mov    0xe0(%rsi),%ebx
  0x00000000030e4bc2: add    $0x8,%ebx
  0x00000000030e4bc5: mov    %ebx,0xe0(%rsi)
  0x00000000030e4bcb: movabs $0x171b5760,%rsi   ;   {metadata({method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4bd5: and    $0xfff8,%ebx
  0x00000000030e4bdb: cmp    $0x0,%ebx
  0x00000000030e4bde: je     0x00000000030e4d8d  ; OopMap{rdi=Oop rdx=Oop off=932}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1768)

  0x00000000030e4be4: test   %eax,-0x28f4aea(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030e4bea: movabs $0x17499150,%rsi   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4bf4: incl   0x298(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1768)

  0x00000000030e4bfa: cmp    %r13d,%r11d
  0x00000000030e4bfd: movabs $0x17499150,%r8    ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4c07: movabs $0x258,%rsi
  0x00000000030e4c11: jge    0x00000000030e4c21
  0x00000000030e4c17: movabs $0x268,%rsi
  0x00000000030e4c21: mov    (%r8,%rsi,1),%rbx
  0x00000000030e4c25: lea    0x1(%rbx),%rbx
  0x00000000030e4c29: mov    %rbx,(%r8,%rsi,1)
  0x00000000030e4c2d: jl     0x00000000030e4b50  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1767)

  0x00000000030e4c33: cmp    %r13d,%r11d
  0x00000000030e4c36: movabs $0x17499150,%rsi   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4c40: movabs $0x2b0,%rbx
  0x00000000030e4c4a: jne    0x00000000030e4c5a
  0x00000000030e4c50: movabs $0x2c0,%rbx
  0x00000000030e4c5a: mov    (%rsi,%rbx,1),%r8
  0x00000000030e4c5e: lea    0x1(%r8),%r8
  0x00000000030e4c62: mov    %r8,(%rsi,%rbx,1)
  0x00000000030e4c66: je     0x00000000030e4cc3  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1770)

  0x00000000030e4c6c: inc    %eax
  0x00000000030e4c6e: movabs $0x17499150,%rsi   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4c78: mov    0xe0(%rsi),%ebx
  0x00000000030e4c7e: add    $0x8,%ebx
  0x00000000030e4c81: mov    %ebx,0xe0(%rsi)
  0x00000000030e4c87: movabs $0x171b5760,%rsi   ;   {metadata({method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4c91: and    $0xfff8,%ebx
  0x00000000030e4c97: cmp    $0x0,%ebx
  0x00000000030e4c9a: je     0x00000000030e4da4  ; OopMap{rdi=Oop rdx=Oop off=1120}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1757)

  0x00000000030e4ca0: test   %eax,-0x28f4ba6(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030e4ca6: movabs $0x17499150,%rsi   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4cb0: incl   0x2d0(%rsi)
  0x00000000030e4cb6: mov    0x28(%rsp),%ebx
  0x00000000030e4cba: mov    0x24(%rsp),%esi
  0x00000000030e4cbe: jmpq   0x00000000030e4998  ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1757)

  0x00000000030e4cc3: mov    0x20(%rsp),%r8d
  0x00000000030e4cc8: sub    %r8d,%eax
  0x00000000030e4ccb: add    $0x40,%rsp
  0x00000000030e4ccf: pop    %rbp
  0x00000000030e4cd0: test   %eax,-0x28f4bd6(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e4cd6: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1772)

  0x00000000030e4cd7: mov    $0xffffffff,%eax
  0x00000000030e4cdc: add    $0x40,%rsp
  0x00000000030e4ce0: pop    %rbp
  0x00000000030e4ce1: test   %eax,-0x28f4be7(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e4ce7: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1776)

  0x00000000030e4ce8: add    $0x40,%rsp
  0x00000000030e4cec: pop    %rbp
  0x00000000030e4ced: test   %eax,-0x28f4bf3(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e4cf3: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1751)

  0x00000000030e4cf4: movabs $0x17499150,%rax   ;   {metadata(method data for {method} {0x00000000171b5768} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030e4cfe: incl   0x148(%rax)
  0x00000000030e4d04: jmpq   0x00000000030e4d0f  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1745)

  0x00000000030e4d09: mov    $0xffffffff,%r9d   ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1745)

  0x00000000030e4d0f: mov    %r9,%rax
  0x00000000030e4d12: add    $0x40,%rsp
  0x00000000030e4d16: pop    %rbp
  0x00000000030e4d17: test   %eax,-0x28f4c1d(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e4d1d: retq   
  0x00000000030e4d1e: mov    %rax,0x8(%rsp)
  0x00000000030e4d23: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e4d2b: callq  0x00000000030d3220  ; OopMap{rdx=Oop rdi=Oop off=1264}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1744)
                                                ;   {runtime_call}
  0x00000000030e4d30: jmpq   0x00000000030e4887
  0x00000000030e4d35: callq  0x0000000003041280  ; OopMap{rdi=Oop rdx=Oop off=1274}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1754)
                                                ;   {runtime_call}
  0x00000000030e4d3a: callq  0x0000000003041280  ; OopMap{rdi=Oop rdx=Oop off=1279}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1754)
                                                ;   {runtime_call}
  0x00000000030e4d3f: mov    %rsi,(%rsp)
  0x00000000030e4d43: callq  0x0000000003041940  ; OopMap{rdi=Oop rdx=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1754)
                                                ;   {runtime_call}
  0x00000000030e4d48: callq  0x0000000003041280  ; OopMap{rdi=Oop rdx=Oop off=1293}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1759)
                                                ;   {runtime_call}
  0x00000000030e4d4d: callq  0x0000000003041280  ; OopMap{rdi=Oop rdx=Oop off=1298}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1759)
                                                ;   {runtime_call}
  0x00000000030e4d52: mov    %rax,(%rsp)
  0x00000000030e4d56: callq  0x0000000003041940  ; OopMap{rdi=Oop rdx=Oop off=1307}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1759)
                                                ;   {runtime_call}
  0x00000000030e4d5b: mov    %rax,(%rsp)
  0x00000000030e4d5f: callq  0x0000000003041940  ; OopMap{rdi=Oop rdx=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1760)
                                                ;   {runtime_call}
  0x00000000030e4d64: mov    %r11,0x8(%rsp)
  0x00000000030e4d69: movq   $0x58,(%rsp)
  0x00000000030e4d71: callq  0x00000000030d3220  ; OopMap{rdi=Oop rdx=Oop off=1334}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1760)
                                                ;   {runtime_call}
  0x00000000030e4d76: jmpq   0x00000000030e4aaa
  0x00000000030e4d7b: mov    %r11,(%rsp)
  0x00000000030e4d7f: callq  0x0000000003041940  ; OopMap{rdi=Oop rdx=Oop off=1348}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1767)
                                                ;   {runtime_call}
  0x00000000030e4d84: mov    %r14,(%rsp)
  0x00000000030e4d88: callq  0x0000000003041940  ; OopMap{rdi=Oop rdx=Oop off=1357}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1767)
                                                ;   {runtime_call}
  0x00000000030e4d8d: mov    %rsi,0x8(%rsp)
  0x00000000030e4d92: movq   $0x8f,(%rsp)
  0x00000000030e4d9a: callq  0x00000000030d3220  ; OopMap{rdi=Oop rdx=Oop off=1375}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1768)
                                                ;   {runtime_call}
  0x00000000030e4d9f: jmpq   0x00000000030e4be4
  0x00000000030e4da4: mov    %rsi,0x8(%rsp)
  0x00000000030e4da9: movq   $0xa1,(%rsp)
  0x00000000030e4db1: callq  0x00000000030d3220  ; OopMap{rdi=Oop rdx=Oop off=1398}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1757)
                                                ;   {runtime_call}
  0x00000000030e4db6: jmpq   0x00000000030e4ca0
  0x00000000030e4dbb: nop
  0x00000000030e4dbc: nop
  0x00000000030e4dbd: mov    0x2a8(%r15),%rax
  0x00000000030e4dc4: movabs $0x0,%r10
  0x00000000030e4dce: mov    %r10,0x2a8(%r15)
  0x00000000030e4dd5: movabs $0x0,%r10
  0x00000000030e4ddf: mov    %r10,0x2b0(%r15)
  0x00000000030e4de6: add    $0x40,%rsp
  0x00000000030e4dea: pop    %rbp
  0x00000000030e4deb: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e4df0: hlt    
  0x00000000030e4df1: hlt    
  0x00000000030e4df2: hlt    
  0x00000000030e4df3: hlt    
  0x00000000030e4df4: hlt    
  0x00000000030e4df5: hlt    
  0x00000000030e4df6: hlt    
  0x00000000030e4df7: hlt    
  0x00000000030e4df8: hlt    
  0x00000000030e4df9: hlt    
  0x00000000030e4dfa: hlt    
  0x00000000030e4dfb: hlt    
  0x00000000030e4dfc: hlt    
  0x00000000030e4dfd: hlt    
  0x00000000030e4dfe: hlt    
  0x00000000030e4dff: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e4e00: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030e4e05: mov    %rsp,-0x28(%rsp)
  0x00000000030e4e0a: sub    $0x80,%rsp
  0x00000000030e4e11: mov    %rax,0x78(%rsp)
  0x00000000030e4e16: mov    %rcx,0x70(%rsp)
  0x00000000030e4e1b: mov    %rdx,0x68(%rsp)
  0x00000000030e4e20: mov    %rbx,0x60(%rsp)
  0x00000000030e4e25: mov    %rbp,0x50(%rsp)
  0x00000000030e4e2a: mov    %rsi,0x48(%rsp)
  0x00000000030e4e2f: mov    %rdi,0x40(%rsp)
  0x00000000030e4e34: mov    %r8,0x38(%rsp)
  0x00000000030e4e39: mov    %r9,0x30(%rsp)
  0x00000000030e4e3e: mov    %r10,0x28(%rsp)
  0x00000000030e4e43: mov    %r11,0x20(%rsp)
  0x00000000030e4e48: mov    %r12,0x18(%rsp)
  0x00000000030e4e4d: mov    %r13,0x10(%rsp)
  0x00000000030e4e52: mov    %r14,0x8(%rsp)
  0x00000000030e4e57: mov    %r15,(%rsp)
  0x00000000030e4e5b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e4e65: movabs $0x30e4e05,%rdx    ;   {internal_word}
  0x00000000030e4e6f: mov    %rsp,%r8
  0x00000000030e4e72: and    $0xfffffffffffffff0,%rsp
  0x00000000030e4e76: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e4e7b: hlt    
[Deopt Handler Code]
  0x00000000030e4e7c: movabs $0x30e4e7c,%r10    ;   {section_word}
  0x00000000030e4e86: push   %r10
  0x00000000030e4e88: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e4e8d: hlt    
  0x00000000030e4e8e: hlt    
  0x00000000030e4e8f: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x00000000030e4840' size='3232' address='0x00000000030e4690' relocation_offset='288' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='152' backedge_count='6381' iicount='152' stamp='9.458'/>
<writer thread='22228'/>
<task_queued compile_id='31' compile_kind='osr' method='com/study/volatiletest/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='108544' iicount='1' osr_bci='2' level='3' stamp='9.458' comment='tiered' hot_count='108544'/>
<writer thread='1104'/>
<task_queued compile_id='32' method='java/nio/Buffer position ()I' bytes='5' count='256' iicount='256' level='1' stamp='9.458' comment='tiered' hot_count='256'/>
<task_queued compile_id='33' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3328' iicount='3328' level='3' stamp='9.459' comment='tiered' hot_count='3328'/>
<task_queued compile_id='34' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='3328' iicount='3328' level='3' stamp='9.459' comment='tiered' hot_count='3328'/>
<task_queued compile_id='35' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='3712' iicount='3712' level='3' stamp='9.459' comment='tiered' hot_count='3712'/>
<task_queued compile_id='36' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='3712' iicount='3712' level='3' stamp='9.459' comment='tiered' hot_count='3712'/>
<task_queued compile_id='37' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='1408' iicount='1408' level='3' stamp='9.459' comment='tiered' hot_count='1408'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e4390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000175b2d08} &apos;access$000&apos; &apos;(Lcom/study/volatiletest/VisibilityDemo;)Z&apos; in &apos;com/study/volatiletest/VisibilityDemo&apos;
  # parm0:    rdx:rdx   = &apos;com/study/volatiletest/VisibilityDemo&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000030e44e0: mov    %eax,-0x6000(%rsp)
  0x00000000030e44e7: push   %rbp
  0x00000000030e44e8: sub    $0x30,%rsp         ;*aload_0
                                                ; - com.study.volatiletest.VisibilityDemo::access$000@0 (line 10)

  0x00000000030e44ec: movsbl 0xc(%rdx),%eax     ;*getfield flag
                                                ; - com.study.volatiletest.VisibilityDemo::access$000@1 (line 10)
                                                ; implicit exception: dispatches to 0x00000000030e44fc
  0x00000000030e44f0: add    $0x30,%rsp
  0x00000000030e44f4: pop    %rbp
  0x00000000030e44f5: test   %eax,-0x28f43fb(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e44fb: retq   
  0x00000000030e44fc: callq  0x0000000003041280  ; OopMap{off=33}
                                                ;*getfield flag
                                                ; - com.study.volatiletest.VisibilityDemo::access$000@1 (line 10)
                                                ;   {runtime_call}
  0x00000000030e4501: nop
  0x00000000030e4502: nop
  0x00000000030e4503: mov    0x2a8(%r15),%rax
  0x00000000030e450a: movabs $0x0,%r10
  0x00000000030e4514: mov    %r10,0x2a8(%r15)
  0x00000000030e451b: movabs $0x0,%r10
  0x00000000030e4525: mov    %r10,0x2b0(%r15)
  0x00000000030e452c: add    $0x30,%rsp
  0x00000000030e4530: pop    %rbp
  0x00000000030e4531: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e4536: hlt    
  0x00000000030e4537: hlt    
  0x00000000030e4538: hlt    
  0x00000000030e4539: hlt    
  0x00000000030e453a: hlt    
  0x00000000030e453b: hlt    
  0x00000000030e453c: hlt    
  0x00000000030e453d: hlt    
  0x00000000030e453e: hlt    
  0x00000000030e453f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e4540: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030e4545: mov    %rsp,-0x28(%rsp)
  0x00000000030e454a: sub    $0x80,%rsp
  0x00000000030e4551: mov    %rax,0x78(%rsp)
  0x00000000030e4556: mov    %rcx,0x70(%rsp)
  0x00000000030e455b: mov    %rdx,0x68(%rsp)
  0x00000000030e4560: mov    %rbx,0x60(%rsp)
  0x00000000030e4565: mov    %rbp,0x50(%rsp)
  0x00000000030e456a: mov    %rsi,0x48(%rsp)
  0x00000000030e456f: mov    %rdi,0x40(%rsp)
  0x00000000030e4574: mov    %r8,0x38(%rsp)
  0x00000000030e4579: mov    %r9,0x30(%rsp)
  0x00000000030e457e: mov    %r10,0x28(%rsp)
  0x00000000030e4583: mov    %r11,0x20(%rsp)
  0x00000000030e4588: mov    %r12,0x18(%rsp)
  0x00000000030e458d: mov    %r13,0x10(%rsp)
  0x00000000030e4592: mov    %r14,0x8(%rsp)
  0x00000000030e4597: mov    %r15,(%rsp)
  0x00000000030e459b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e45a5: movabs $0x30e4545,%rdx    ;   {internal_word}
  0x00000000030e45af: mov    %rsp,%r8
  0x00000000030e45b2: and    $0xfffffffffffffff0,%rsp
  0x00000000030e45b6: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e45bb: hlt    
[Deopt Handler Code]
  0x00000000030e45bc: movabs $0x30e45bc,%r10    ;   {section_word}
  0x00000000030e45c6: push   %r10
  0x00000000030e45c8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e45cd: hlt    
  0x00000000030e45ce: hlt    
  0x00000000030e45cf: hlt    
<nmethod compile_id='29' compiler='C1' level='1' entry='0x00000000030e44e0' size='720' address='0x00000000030e4390' relocation_offset='288' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='616' dependencies_offset='696' nul_chk_table_offset='704' oops_offset='576' method='com/study/volatiletest/VisibilityDemo access$000 (Lcom/study/volatiletest/VisibilityDemo;)Z' bytes='5' count='144384' iicount='144384' stamp='9.551'/>
<writer thread='22228'/>
<task_queued compile_id='38' compile_kind='osr' method='com/study/volatiletest/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='144384' iicount='1' osr_bci='2' level='3' stamp='9.551' comment='tiered' hot_count='144384'/>
<writer thread='1104'/>
<task_queued compile_id='39' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1536' iicount='1536' level='3' stamp='9.551' comment='tiered' hot_count='1536'/>
<task_queued compile_id='40' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5632' iicount='5632' level='1' stamp='9.551' comment='tiered' hot_count='5632'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e3ed0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000172493a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000000030e4040: mov    %eax,-0x6000(%rsp)
  0x00000000030e4047: push   %rbp
  0x00000000030e4048: sub    $0x30,%rsp
  0x00000000030e404c: movabs $0x1737f770,%rsi   ;   {metadata(method data for {method} {0x00000000172493a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000030e4056: mov    0xdc(%rsi),%edi
  0x00000000030e405c: add    $0x8,%edi
  0x00000000030e405f: mov    %edi,0xdc(%rsi)
  0x00000000030e4065: movabs $0x172493a0,%rsi   ;   {metadata({method} {0x00000000172493a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000030e406f: and    $0x1ff8,%edi
  0x00000000030e4075: cmp    $0x0,%edi
  0x00000000030e4078: je     0x00000000030e4160  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6338)

  0x00000000030e407e: movabs $0x1737f770,%rsi   ;   {metadata(method data for {method} {0x00000000172493a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000030e4088: addq   $0x1,0x108(%rsi)
  0x00000000030e4090: mov    %rdx,%rsi
  0x00000000030e4093: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x00000000030e4096: mov    %esi,0x20(%rsp)
  0x00000000030e409a: nop
  0x00000000030e409b: nop
  0x00000000030e409c: nop
  0x00000000030e409d: nop
  0x00000000030e409e: nop
  0x00000000030e409f: callq  0x0000000003016620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {static_call}
  0x00000000030e40a4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000030e4177
  0x00000000030e40a7: mov    %rax,%r8
  0x00000000030e40aa: movabs $0x1737f770,%rdx   ;   {metadata(method data for {method} {0x00000000172493a8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x00000000030e40b4: mov    0x8(%r8),%r8d
  0x00000000030e40b8: shl    $0x3,%r8
  0x00000000030e40bc: cmp    0x120(%rdx),%r8
  0x00000000030e40c3: jne    0x00000000030e40d2
  0x00000000030e40c5: addq   $0x1,0x128(%rdx)
  0x00000000030e40cd: jmpq   0x00000000030e4138
  0x00000000030e40d2: cmp    0x130(%rdx),%r8
  0x00000000030e40d9: jne    0x00000000030e40e8
  0x00000000030e40db: addq   $0x1,0x138(%rdx)
  0x00000000030e40e3: jmpq   0x00000000030e4138
  0x00000000030e40e8: cmpq   $0x0,0x120(%rdx)
  0x00000000030e40f3: jne    0x00000000030e410c
  0x00000000030e40f5: mov    %r8,0x120(%rdx)
  0x00000000030e40fc: movq   $0x1,0x128(%rdx)
  0x00000000030e4107: jmpq   0x00000000030e4138
  0x00000000030e410c: cmpq   $0x0,0x130(%rdx)
  0x00000000030e4117: jne    0x00000000030e4130
  0x00000000030e4119: mov    %r8,0x130(%rdx)
  0x00000000030e4120: movq   $0x1,0x138(%rdx)
  0x00000000030e412b: jmpq   0x00000000030e4138
  0x00000000030e4130: addq   $0x1,0x118(%rdx)
  0x00000000030e4138: mov    0x20(%rsp),%r8d
  0x00000000030e413d: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x00000000030e4140: nop
  0x00000000030e4141: nop
  0x00000000030e4142: nop
  0x00000000030e4143: nop
  0x00000000030e4144: nop
  0x00000000030e4145: movabs $0xffffffffffffffff,%rax
  0x00000000030e414f: callq  0x00000000030163e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x00000000030e4154: add    $0x30,%rsp
  0x00000000030e4158: pop    %rbp
  0x00000000030e4159: test   %eax,-0x28f405f(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e415f: retq   
  0x00000000030e4160: mov    %rsi,0x8(%rsp)
  0x00000000030e4165: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e416d: callq  0x00000000030d3220  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ;   {runtime_call}
  0x00000000030e4172: jmpq   0x00000000030e407e
  0x00000000030e4177: callq  0x0000000003041280  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x00000000030e417c: nop
  0x00000000030e417d: nop
  0x00000000030e417e: mov    0x2a8(%r15),%rax
  0x00000000030e4185: movabs $0x0,%r10
  0x00000000030e418f: mov    %r10,0x2a8(%r15)
  0x00000000030e4196: movabs $0x0,%r10
  0x00000000030e41a0: mov    %r10,0x2b0(%r15)
  0x00000000030e41a7: add    $0x30,%rsp
  0x00000000030e41ab: pop    %rbp
  0x00000000030e41ac: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e41b1: hlt    
  0x00000000030e41b2: hlt    
  0x00000000030e41b3: hlt    
  0x00000000030e41b4: hlt    
  0x00000000030e41b5: hlt    
  0x00000000030e41b6: hlt    
  0x00000000030e41b7: hlt    
  0x00000000030e41b8: hlt    
  0x00000000030e41b9: hlt    
  0x00000000030e41ba: hlt    
  0x00000000030e41bb: hlt    
  0x00000000030e41bc: hlt    
  0x00000000030e41bd: hlt    
  0x00000000030e41be: hlt    
  0x00000000030e41bf: hlt    
[Stub Code]
  0x00000000030e41c0: nop                       ;   {no_reloc}
  0x00000000030e41c1: nop
  0x00000000030e41c2: nop
  0x00000000030e41c3: nop
  0x00000000030e41c4: nop
  0x00000000030e41c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e41cf: jmpq   0x00000000030e41cf  ;   {runtime_call}
  0x00000000030e41d4: nop
  0x00000000030e41d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e41df: jmpq   0x00000000030e41df  ;   {runtime_call}
[Exception Handler]
  0x00000000030e41e4: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030e41e9: mov    %rsp,-0x28(%rsp)
  0x00000000030e41ee: sub    $0x80,%rsp
  0x00000000030e41f5: mov    %rax,0x78(%rsp)
  0x00000000030e41fa: mov    %rcx,0x70(%rsp)
  0x00000000030e41ff: mov    %rdx,0x68(%rsp)
  0x00000000030e4204: mov    %rbx,0x60(%rsp)
  0x00000000030e4209: mov    %rbp,0x50(%rsp)
  0x00000000030e420e: mov    %rsi,0x48(%rsp)
  0x00000000030e4213: mov    %rdi,0x40(%rsp)
  0x00000000030e4218: mov    %r8,0x38(%rsp)
  0x00000000030e421d: mov    %r9,0x30(%rsp)
  0x00000000030e4222: mov    %r10,0x28(%rsp)
  0x00000000030e4227: mov    %r11,0x20(%rsp)
  0x00000000030e422c: mov    %r12,0x18(%rsp)
  0x00000000030e4231: mov    %r13,0x10(%rsp)
  0x00000000030e4236: mov    %r14,0x8(%rsp)
  0x00000000030e423b: mov    %r15,(%rsp)
  0x00000000030e423f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e4249: movabs $0x30e41e9,%rdx    ;   {internal_word}
  0x00000000030e4253: mov    %rsp,%r8
  0x00000000030e4256: and    $0xfffffffffffffff0,%rsp
  0x00000000030e425a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e425f: hlt    
[Deopt Handler Code]
  0x00000000030e4260: movabs $0x30e4260,%r10    ;   {section_word}
  0x00000000030e426a: push   %r10
  0x00000000030e426c: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e4271: hlt    
  0x00000000030e4272: hlt    
  0x00000000030e4273: hlt    
  0x00000000030e4274: hlt    
  0x00000000030e4275: hlt    
  0x00000000030e4276: hlt    
  0x00000000030e4277: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x00000000030e4040' size='1160' address='0x00000000030e3ed0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='3782' iicount='3782' stamp='9.748'/>
<writer thread='22228'/>
<task_queued compile_id='41' compile_kind='osr' method='com/study/volatiletest/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='156672' iicount='1' osr_bci='2' level='3' stamp='9.748' comment='tiered' hot_count='156672'/>
<writer thread='1104'/>
<task_queued compile_id='42' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='640' iicount='640' level='3' stamp='9.748' comment='tiered' hot_count='640'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e6b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000000030e6ce0: mov    0x8(%rdx),%r10d
  0x00000000030e6ce4: shl    $0x3,%r10
  0x00000000030e6ce8: cmp    %rax,%r10
  0x00000000030e6ceb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e6cf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e6cfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e6d00: mov    %eax,-0x6000(%rsp)
  0x00000000030e6d07: push   %rbp
  0x00000000030e6d08: sub    $0x50,%rsp
  0x00000000030e6d0c: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000000030e6d0f: mov    %rdx,0x40(%rsp)
  0x00000000030e6d14: callq  0x0000000003040fe0  ; OopMap{[64]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00000000030e6d19: add    $0x50,%rsp
  0x00000000030e6d1d: pop    %rbp
  0x00000000030e6d1e: test   %eax,-0x28f6c24(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e6d24: retq   
  0x00000000030e6d25: nop
  0x00000000030e6d26: nop
  0x00000000030e6d27: mov    0x2a8(%r15),%rax
  0x00000000030e6d2e: movabs $0x0,%r10
  0x00000000030e6d38: mov    %r10,0x2a8(%r15)
  0x00000000030e6d3f: movabs $0x0,%r10
  0x00000000030e6d49: mov    %r10,0x2b0(%r15)
  0x00000000030e6d50: add    $0x50,%rsp
  0x00000000030e6d54: pop    %rbp
  0x00000000030e6d55: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e6d5a: hlt    
  0x00000000030e6d5b: hlt    
  0x00000000030e6d5c: hlt    
  0x00000000030e6d5d: hlt    
  0x00000000030e6d5e: hlt    
  0x00000000030e6d5f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e6d60: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030e6d65: mov    %rsp,-0x28(%rsp)
  0x00000000030e6d6a: sub    $0x80,%rsp
  0x00000000030e6d71: mov    %rax,0x78(%rsp)
  0x00000000030e6d76: mov    %rcx,0x70(%rsp)
  0x00000000030e6d7b: mov    %rdx,0x68(%rsp)
  0x00000000030e6d80: mov    %rbx,0x60(%rsp)
  0x00000000030e6d85: mov    %rbp,0x50(%rsp)
  0x00000000030e6d8a: mov    %rsi,0x48(%rsp)
  0x00000000030e6d8f: mov    %rdi,0x40(%rsp)
  0x00000000030e6d94: mov    %r8,0x38(%rsp)
  0x00000000030e6d99: mov    %r9,0x30(%rsp)
  0x00000000030e6d9e: mov    %r10,0x28(%rsp)
  0x00000000030e6da3: mov    %r11,0x20(%rsp)
  0x00000000030e6da8: mov    %r12,0x18(%rsp)
  0x00000000030e6dad: mov    %r13,0x10(%rsp)
  0x00000000030e6db2: mov    %r14,0x8(%rsp)
  0x00000000030e6db7: mov    %r15,(%rsp)
  0x00000000030e6dbb: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e6dc5: movabs $0x30e6d65,%rdx    ;   {internal_word}
  0x00000000030e6dcf: mov    %rsp,%r8
  0x00000000030e6dd2: and    $0xfffffffffffffff0,%rsp
  0x00000000030e6dd6: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e6ddb: hlt    
[Deopt Handler Code]
  0x00000000030e6ddc: movabs $0x30e6ddc,%r10    ;   {section_word}
  0x00000000030e6de6: push   %r10
  0x00000000030e6de8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e6ded: hlt    
  0x00000000030e6dee: hlt    
  0x00000000030e6def: hlt    
<nmethod compile_id='40' compiler='C1' level='1' entry='0x00000000030e6ce0' size='712' address='0x00000000030e6b90' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5782' iicount='5782' stamp='9.907'/>
<make_not_entrant thread='9344' compile_id='11' compiler='C1' level='3' stamp='9.907'/>
<writer thread='1104'/>
<task_queued compile_id='43' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='640' iicount='640' level='3' stamp='9.907' comment='tiered' hot_count='640'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e6e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;
  0x00000000030e7020: mov    0x8(%rdx),%r10d
  0x00000000030e7024: shl    $0x3,%r10
  0x00000000030e7028: cmp    %rax,%r10
  0x00000000030e702b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e7031: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e703c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e7040: mov    %eax,-0x6000(%rsp)
  0x00000000030e7047: push   %rbp
  0x00000000030e7048: sub    $0x60,%rsp
  0x00000000030e704c: movabs $0x175b3500,%rcx   ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e7056: mov    0xdc(%rcx),%esi
  0x00000000030e705c: add    $0x8,%esi
  0x00000000030e705f: mov    %esi,0xdc(%rcx)
  0x00000000030e7065: movabs $0x175b3368,%rcx   ;   {metadata({method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e706f: and    $0x1ff8,%esi
  0x00000000030e7075: cmp    $0x0,%esi
  0x00000000030e7078: je     0x00000000030e7237  ;*iconst_0
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@0 (line 17)

  0x00000000030e707e: mov    $0x0,%esi
  0x00000000030e7083: jmpq   0x00000000030e70d5  ;*aload_0
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@2 (line 19)

  0x00000000030e7088: inc    %esi
  0x00000000030e708a: movabs $0x175b3500,%r8    ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e7094: mov    0xe0(%r8),%edi
  0x00000000030e709b: add    $0x8,%edi
  0x00000000030e709e: mov    %edi,0xe0(%r8)
  0x00000000030e70a5: movabs $0x175b3368,%r8    ;   {metadata({method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e70af: and    $0xfff8,%edi
  0x00000000030e70b5: cmp    $0x0,%edi
  0x00000000030e70b8: je     0x00000000030e724e  ; OopMap{rdx=Oop off=158}
                                                ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)

  0x00000000030e70be: test   %eax,-0x28f6fc4(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030e70c4: movabs $0x175b3500,%r8    ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e70ce: incl   0x138(%r8)         ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)

  0x00000000030e70d5: mov    0xc(%rdx),%r8d     ;*getfield val$demo1
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@3 (line 19)
                                                ; implicit exception: dispatches to 0x00000000030e7265
  0x00000000030e70d9: movabs $0x175b3500,%rdi   ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e70e3: addq   $0x1,0x108(%rdi)
  0x00000000030e70eb: movsbl 0xc(%r8),%r8d      ;*getfield flag
                                                ; - com.study.volatiletest.VisibilityDemo::access$000@1 (line 10)
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@6 (line 19)
                                                ; implicit exception: dispatches to 0x00000000030e726a
  0x00000000030e70f0: cmp    $0x0,%r8d
  0x00000000030e70f4: movabs $0x175b3500,%r8    ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e70fe: movabs $0x118,%rdi
  0x00000000030e7108: je     0x00000000030e7118
  0x00000000030e710e: movabs $0x128,%rdi
  0x00000000030e7118: mov    (%r8,%rdi,1),%rbx
  0x00000000030e711c: lea    0x1(%rbx),%rbx
  0x00000000030e7120: mov    %rbx,(%r8,%rdi,1)
  0x00000000030e7124: jne    0x00000000030e7088  ;*ifeq
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@9 (line 19)

  0x00000000030e712a: nopw   0x0(%rax,%rax,1)
  0x00000000030e7130: jmpq   0x00000000030e72cc  ;   {no_reloc}
  0x00000000030e7135: add    %al,(%rax)
  0x00000000030e7137: add    %al,(%rax)
  0x00000000030e7139: add    %ah,0xf(%rsi)
  0x00000000030e713c: (bad)  
  0x00000000030e713d: add    %r8b,(%rax)
  0x00000000030e7140: jmpq   0x00000000030e72e7  ; implicit exception: dispatches to 0x00000000030e72d6
  0x00000000030e7145: nop
  0x00000000030e7146: nop                       ;*getstatic out
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@18 (line 22)

  0x00000000030e7147: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000030e72f1
  0x00000000030e714a: mov    %rdx,%r8
  0x00000000030e714d: movabs $0x175b3500,%rdi   ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e7157: mov    0x8(%r8),%r8d
  0x00000000030e715b: shl    $0x3,%r8
  0x00000000030e715f: cmp    0x158(%rdi),%r8
  0x00000000030e7166: jne    0x00000000030e7175
  0x00000000030e7168: addq   $0x1,0x160(%rdi)
  0x00000000030e7170: jmpq   0x00000000030e71db
  0x00000000030e7175: cmp    0x168(%rdi),%r8
  0x00000000030e717c: jne    0x00000000030e718b
  0x00000000030e717e: addq   $0x1,0x170(%rdi)
  0x00000000030e7186: jmpq   0x00000000030e71db
  0x00000000030e718b: cmpq   $0x0,0x158(%rdi)
  0x00000000030e7196: jne    0x00000000030e71af
  0x00000000030e7198: mov    %r8,0x158(%rdi)
  0x00000000030e719f: movq   $0x1,0x160(%rdi)
  0x00000000030e71aa: jmpq   0x00000000030e71db
  0x00000000030e71af: cmpq   $0x0,0x168(%rdi)
  0x00000000030e71ba: jne    0x00000000030e71d3
  0x00000000030e71bc: mov    %r8,0x168(%rdi)
  0x00000000030e71c3: movq   $0x1,0x170(%rdi)
  0x00000000030e71ce: jmpq   0x00000000030e71db
  0x00000000030e71d3: addq   $0x1,0x150(%rdi)
  0x00000000030e71db: mov    %rsi,%r8           ;*invokevirtual println
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@22 (line 22)

  0x00000000030e71de: nop
  0x00000000030e71df: nop
  0x00000000030e71e0: nop
  0x00000000030e71e1: nop
  0x00000000030e71e2: nop
  0x00000000030e71e3: nop
  0x00000000030e71e4: nop
  0x00000000030e71e5: movabs $0xffffffffffffffff,%rax
  0x00000000030e71ef: callq  0x00000000030163e0  ; OopMap{off=468}
                                                ;*invokevirtual println
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@22 (line 22)
                                                ;   {virtual_call}
  0x00000000030e71f4: add    $0x60,%rsp
  0x00000000030e71f8: pop    %rbp
  0x00000000030e71f9: test   %eax,-0x28f70ff(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e71ff: retq                      ;*return
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@25 (line 23)

  0x00000000030e7200: mov    %eax,-0x6000(%rsp)
  0x00000000030e7207: push   %rbp
  0x00000000030e7208: sub    $0x60,%rsp
  0x00000000030e720c: mov    0x8(%rdx),%rsi
  0x00000000030e7210: mov    (%rdx),%edi
  0x00000000030e7212: mov    %rdx,%rcx
  0x00000000030e7215: mov    %rsi,0x48(%rsp)
  0x00000000030e721a: mov    %edi,0x40(%rsp)
  0x00000000030e721e: callq  0x000000005ab38580  ;   {runtime_call}
  0x00000000030e7223: mov    0x40(%rsp),%edi
  0x00000000030e7227: mov    %rdi,%rsi
  0x00000000030e722a: mov    0x48(%rsp),%r8
  0x00000000030e722f: mov    %r8,%rdx
  0x00000000030e7232: jmpq   0x00000000030e70d5
  0x00000000030e7237: mov    %rcx,0x8(%rsp)
  0x00000000030e723c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e7244: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=553}
                                                ;*synchronization entry
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@-1 (line 17)
                                                ;   {runtime_call}
  0x00000000030e7249: jmpq   0x00000000030e707e
  0x00000000030e724e: mov    %r8,0x8(%rsp)
  0x00000000030e7253: movq   $0xf,(%rsp)
  0x00000000030e725b: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=576}
                                                ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)
                                                ;   {runtime_call}
  0x00000000030e7260: jmpq   0x00000000030e70be
  0x00000000030e7265: callq  0x0000000003041280  ; OopMap{rdx=Oop off=586}
                                                ;*getfield val$demo1
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@3 (line 19)
                                                ;   {runtime_call}
  0x00000000030e726a: callq  0x0000000003041280  ; OopMap{rdx=Oop off=591}
                                                ;*getfield flag
                                                ; - com.study.volatiletest.VisibilityDemo::access$000@1 (line 10)
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@6 (line 19)
                                                ;   {runtime_call}
  0x00000000030e726f: movabs $0x0,%r8           ;   {oop(NULL)}
  0x00000000030e7279: push   %rax
  0x00000000030e727a: push   %rbx
  0x00000000030e727b: mov    0x48(%r8),%rbx
  0x00000000030e727f: push   %rdi
  0x00000000030e7280: push   %rsi
  0x00000000030e7281: push   %rdx
  0x00000000030e7282: push   %rcx
  0x00000000030e7283: push   %r8
  0x00000000030e7285: push   %r9
  0x00000000030e7287: push   %r10
  0x00000000030e7289: mov    %rsp,%r10
  0x00000000030e728c: and    $0xfffffffffffffff0,%rsp
  0x00000000030e7290: push   %r10
  0x00000000030e7292: push   %r11
  0x00000000030e7294: mov    $0x7,%ecx
  0x00000000030e7299: movabs $0x7ffe70cc3c90,%r10  ;   {runtime_call}
  0x00000000030e72a3: callq  *%r10
  0x00000000030e72a6: pop    %r11
  0x00000000030e72a8: pop    %rsp
  0x00000000030e72a9: pop    %r10
  0x00000000030e72ab: pop    %r9
  0x00000000030e72ad: pop    %r8
  0x00000000030e72af: pop    %rcx
  0x00000000030e72b0: pop    %rdx
  0x00000000030e72b1: pop    %rsi
  0x00000000030e72b2: pop    %rdi
  0x00000000030e72b3: cmp    0x118(%rbx),%rax
  0x00000000030e72ba: pop    %rbx
  0x00000000030e72bb: pop    %rax
  0x00000000030e72bc: jne    0x00000000030e72cc
  0x00000000030e72c2: jmpq   0x00000000030e713a
  0x00000000030e72c7: mov    $0xa535d00,%eax
  0x00000000030e72cc: callq  0x00000000030d25a0  ; OopMap{off=689}
                                                ;*getstatic out
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@18 (line 22)
                                                ;   {runtime_call}
  0x00000000030e72d1: jmpq   0x00000000030e7130
  0x00000000030e72d6: callq  0x0000000003041280  ; OopMap{r8=Oop off=699}
                                                ;*getstatic out
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@18 (line 22)
                                                ;   {runtime_call}
  0x00000000030e72db: mov    0x0(%r8),%edx
  0x00000000030e72e2: mov    $0x7050c00,%eax
  0x00000000030e72e7: callq  0x00000000030d1d20  ; OopMap{r8=Oop off=716}
                                                ;*getstatic out
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@18 (line 22)
                                                ;   {runtime_call}
  0x00000000030e72ec: jmpq   0x00000000030e7140
  0x00000000030e72f1: callq  0x0000000003041280  ; OopMap{rdx=Oop off=726}
                                                ;*invokevirtual println
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@22 (line 22)
                                                ;   {runtime_call}
  0x00000000030e72f6: nop
  0x00000000030e72f7: nop
  0x00000000030e72f8: mov    0x2a8(%r15),%rax
  0x00000000030e72ff: movabs $0x0,%r10
  0x00000000030e7309: mov    %r10,0x2a8(%r15)
  0x00000000030e7310: movabs $0x0,%r10
  0x00000000030e731a: mov    %r10,0x2b0(%r15)
  0x00000000030e7321: add    $0x60,%rsp
  0x00000000030e7325: pop    %rbp
  0x00000000030e7326: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e732b: hlt    
  0x00000000030e732c: hlt    
  0x00000000030e732d: hlt    
  0x00000000030e732e: hlt    
  0x00000000030e732f: hlt    
  0x00000000030e7330: hlt    
  0x00000000030e7331: hlt    
  0x00000000030e7332: hlt    
  0x00000000030e7333: hlt    
  0x00000000030e7334: hlt    
  0x00000000030e7335: hlt    
  0x00000000030e7336: hlt    
  0x00000000030e7337: hlt    
  0x00000000030e7338: hlt    
  0x00000000030e7339: hlt    
  0x00000000030e733a: hlt    
  0x00000000030e733b: hlt    
  0x00000000030e733c: hlt    
  0x00000000030e733d: hlt    
  0x00000000030e733e: hlt    
  0x00000000030e733f: hlt    
[Stub Code]
  0x00000000030e7340: nop                       ;   {no_reloc}
  0x00000000030e7341: nop
  0x00000000030e7342: nop
  0x00000000030e7343: nop
  0x00000000030e7344: nop
  0x00000000030e7345: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e734f: jmpq   0x00000000030e734f  ;   {runtime_call}
[Exception Handler]
  0x00000000030e7354: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030e7359: mov    %rsp,-0x28(%rsp)
  0x00000000030e735e: sub    $0x80,%rsp
  0x00000000030e7365: mov    %rax,0x78(%rsp)
  0x00000000030e736a: mov    %rcx,0x70(%rsp)
  0x00000000030e736f: mov    %rdx,0x68(%rsp)
  0x00000000030e7374: mov    %rbx,0x60(%rsp)
  0x00000000030e7379: mov    %rbp,0x50(%rsp)
  0x00000000030e737e: mov    %rsi,0x48(%rsp)
  0x00000000030e7383: mov    %rdi,0x40(%rsp)
  0x00000000030e7388: mov    %r8,0x38(%rsp)
  0x00000000030e738d: mov    %r9,0x30(%rsp)
  0x00000000030e7392: mov    %r10,0x28(%rsp)
  0x00000000030e7397: mov    %r11,0x20(%rsp)
  0x00000000030e739c: mov    %r12,0x18(%rsp)
  0x00000000030e73a1: mov    %r13,0x10(%rsp)
  0x00000000030e73a6: mov    %r14,0x8(%rsp)
  0x00000000030e73ab: mov    %r15,(%rsp)
  0x00000000030e73af: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e73b9: movabs $0x30e7359,%rdx    ;   {internal_word}
  0x00000000030e73c3: mov    %rsp,%r8
  0x00000000030e73c6: and    $0xfffffffffffffff0,%rsp
  0x00000000030e73ca: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e73cf: hlt    
[Deopt Handler Code]
  0x00000000030e73d0: movabs $0x30e73d0,%r10    ;   {section_word}
  0x00000000030e73da: push   %r10
  0x00000000030e73dc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e73e1: hlt    
  0x00000000030e73e2: hlt    
  0x00000000030e73e3: hlt    
  0x00000000030e73e4: hlt    
  0x00000000030e73e5: hlt    
  0x00000000030e73e6: hlt    
  0x00000000030e73e7: hlt    
<nmethod compile_id='41' compile_kind='osr' compiler='C1' level='3' entry='0x00000000030e7020' size='1904' address='0x00000000030e6e90' relocation_offset='288' insts_offset='400' stub_offset='1200' scopes_data_offset='1392' scopes_pcs_offset='1520' dependencies_offset='1856' nul_chk_table_offset='1864' oops_offset='1368' method='com/study/volatiletest/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='11570176' iicount='1' stamp='10.279'/>
<writer thread='20164'/>
<task_queued compile_id='44' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='768' iicount='768' level='3' stamp='10.279' comment='tiered' hot_count='768'/>
<writer thread='22228'/>
<task_queued compile_id='45' method='com/study/volatiletest/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='11571200' iicount='1' level='3' stamp='10.279' comment='tiered' hot_count='1'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e7610:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000030e77a0: mov    0x8(%rdx),%r10d
  0x00000000030e77a4: shl    $0x3,%r10
  0x00000000030e77a8: cmp    %rax,%r10
  0x00000000030e77ab: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e77b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e77bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e77c0: mov    %eax,-0x6000(%rsp)
  0x00000000030e77c7: push   %rbp
  0x00000000030e77c8: sub    $0x30,%rsp
  0x00000000030e77cc: movabs $0x175b3500,%r8    ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e77d6: mov    0xdc(%r8),%esi
  0x00000000030e77dd: add    $0x8,%esi
  0x00000000030e77e0: mov    %esi,0xdc(%r8)
  0x00000000030e77e7: movabs $0x175b3368,%r8    ;   {metadata({method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e77f1: and    $0x1ff8,%esi
  0x00000000030e77f7: cmp    $0x0,%esi
  0x00000000030e77fa: je     0x00000000030e7978  ;*iconst_0
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@0 (line 17)

  0x00000000030e7800: mov    $0x0,%r8d
  0x00000000030e7806: jmpq   0x00000000030e785b  ;*aload_0
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@2 (line 19)

  0x00000000030e780b: nopl   0x0(%rax,%rax,1)
  0x00000000030e7810: inc    %r8d
  0x00000000030e7813: movabs $0x175b3500,%rsi   ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e781d: mov    0xe0(%rsi),%edi
  0x00000000030e7823: add    $0x8,%edi
  0x00000000030e7826: mov    %edi,0xe0(%rsi)
  0x00000000030e782c: movabs $0x175b3368,%rsi   ;   {metadata({method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e7836: and    $0xfff8,%edi
  0x00000000030e783c: cmp    $0x0,%edi
  0x00000000030e783f: je     0x00000000030e798f  ; OopMap{rdx=Oop off=165}
                                                ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)

  0x00000000030e7845: test   %eax,-0x28f774b(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030e784b: movabs $0x175b3500,%rsi   ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e7855: incl   0x138(%rsi)        ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)

  0x00000000030e785b: mov    0xc(%rdx),%esi     ;*getfield val$demo1
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@3 (line 19)

  0x00000000030e785e: movabs $0x175b3500,%rdi   ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e7868: addq   $0x1,0x108(%rdi)
  0x00000000030e7870: movsbl 0xc(%rsi),%esi     ;*getfield flag
                                                ; - com.study.volatiletest.VisibilityDemo::access$000@1 (line 10)
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@6 (line 19)
                                                ; implicit exception: dispatches to 0x00000000030e79a6
  0x00000000030e7874: cmp    $0x0,%esi
  0x00000000030e7877: movabs $0x175b3500,%rsi   ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e7881: movabs $0x118,%rdi
  0x00000000030e788b: je     0x00000000030e789b
  0x00000000030e7891: movabs $0x128,%rdi
  0x00000000030e789b: mov    (%rsi,%rdi,1),%rbx
  0x00000000030e789f: lea    0x1(%rbx),%rbx
  0x00000000030e78a3: mov    %rbx,(%rsi,%rdi,1)
  0x00000000030e78a7: jne    0x00000000030e7810  ;*ifeq
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@9 (line 19)

  0x00000000030e78ad: data16 xchg %ax,%ax
  0x00000000030e78b0: jmpq   0x00000000030e7a08  ;   {no_reloc}
  0x00000000030e78b5: add    %al,(%rax)
  0x00000000030e78b7: add    %al,(%rax)
  0x00000000030e78b9: add    %ah,0xf(%rsi)
  0x00000000030e78bc: (bad)  
  0x00000000030e78bd: add    %r8b,(%rax)
  0x00000000030e78c0: jmpq   0x00000000030e7a22  ; implicit exception: dispatches to 0x00000000030e7a12
  0x00000000030e78c5: nop                       ;*getstatic out
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@18 (line 22)

  0x00000000030e78c6: cmp    (%rdx),%rax        ;*invokevirtual println
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@22 (line 22)
                                                ; implicit exception: dispatches to 0x00000000030e7a2c
  0x00000000030e78c9: mov    %rdx,%rsi
  0x00000000030e78cc: movabs $0x175b3500,%rdi   ;   {metadata(method data for {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030e78d6: mov    0x8(%rsi),%esi
  0x00000000030e78d9: shl    $0x3,%rsi
  0x00000000030e78dd: cmp    0x158(%rdi),%rsi
  0x00000000030e78e4: jne    0x00000000030e78f3
  0x00000000030e78e6: addq   $0x1,0x160(%rdi)
  0x00000000030e78ee: jmpq   0x00000000030e7959
  0x00000000030e78f3: cmp    0x168(%rdi),%rsi
  0x00000000030e78fa: jne    0x00000000030e7909
  0x00000000030e78fc: addq   $0x1,0x170(%rdi)
  0x00000000030e7904: jmpq   0x00000000030e7959
  0x00000000030e7909: cmpq   $0x0,0x158(%rdi)
  0x00000000030e7914: jne    0x00000000030e792d
  0x00000000030e7916: mov    %rsi,0x158(%rdi)
  0x00000000030e791d: movq   $0x1,0x160(%rdi)
  0x00000000030e7928: jmpq   0x00000000030e7959
  0x00000000030e792d: cmpq   $0x0,0x168(%rdi)
  0x00000000030e7938: jne    0x00000000030e7951
  0x00000000030e793a: mov    %rsi,0x168(%rdi)
  0x00000000030e7941: movq   $0x1,0x170(%rdi)
  0x00000000030e794c: jmpq   0x00000000030e7959
  0x00000000030e7951: addq   $0x1,0x150(%rdi)
  0x00000000030e7959: nop
  0x00000000030e795a: nop
  0x00000000030e795b: nop
  0x00000000030e795c: nop
  0x00000000030e795d: movabs $0xffffffffffffffff,%rax
  0x00000000030e7967: callq  0x00000000030163e0  ; OopMap{off=460}
                                                ;*invokevirtual println
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@22 (line 22)
                                                ;   {virtual_call}
  0x00000000030e796c: add    $0x30,%rsp
  0x00000000030e7970: pop    %rbp
  0x00000000030e7971: test   %eax,-0x28f7877(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e7977: retq   
  0x00000000030e7978: mov    %r8,0x8(%rsp)
  0x00000000030e797d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e7985: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=490}
                                                ;*synchronization entry
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@-1 (line 17)
                                                ;   {runtime_call}
  0x00000000030e798a: jmpq   0x00000000030e7800
  0x00000000030e798f: mov    %rsi,0x8(%rsp)
  0x00000000030e7994: movq   $0xf,(%rsp)
  0x00000000030e799c: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=513}
                                                ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)
                                                ;   {runtime_call}
  0x00000000030e79a1: jmpq   0x00000000030e7845
  0x00000000030e79a6: callq  0x0000000003041280  ; OopMap{rdx=Oop off=523}
                                                ;*getfield flag
                                                ; - com.study.volatiletest.VisibilityDemo::access$000@1 (line 10)
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@6 (line 19)
                                                ;   {runtime_call}
  0x00000000030e79ab: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x00000000030e79b5: push   %rax
  0x00000000030e79b6: push   %rbx
  0x00000000030e79b7: mov    0x48(%rdx),%rbx
  0x00000000030e79bb: push   %rdi
  0x00000000030e79bc: push   %rsi
  0x00000000030e79bd: push   %rdx
  0x00000000030e79be: push   %rcx
  0x00000000030e79bf: push   %r8
  0x00000000030e79c1: push   %r9
  0x00000000030e79c3: push   %r10
  0x00000000030e79c5: mov    %rsp,%r10
  0x00000000030e79c8: and    $0xfffffffffffffff0,%rsp
  0x00000000030e79cc: push   %r10
  0x00000000030e79ce: push   %r11
  0x00000000030e79d0: mov    $0x7,%ecx
  0x00000000030e79d5: movabs $0x7ffe70cc3c90,%r10  ;   {runtime_call}
  0x00000000030e79df: callq  *%r10
  0x00000000030e79e2: pop    %r11
  0x00000000030e79e4: pop    %rsp
  0x00000000030e79e5: pop    %r10
  0x00000000030e79e7: pop    %r9
  0x00000000030e79e9: pop    %r8
  0x00000000030e79eb: pop    %rcx
  0x00000000030e79ec: pop    %rdx
  0x00000000030e79ed: pop    %rsi
  0x00000000030e79ee: pop    %rdi
  0x00000000030e79ef: cmp    0x118(%rbx),%rax
  0x00000000030e79f6: pop    %rbx
  0x00000000030e79f7: pop    %rax
  0x00000000030e79f8: jne    0x00000000030e7a08
  0x00000000030e79fe: jmpq   0x00000000030e78ba
  0x00000000030e7a03: mov    $0xa535d00,%eax
  0x00000000030e7a08: callq  0x00000000030d25a0  ; OopMap{off=621}
                                                ;*getstatic out
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@18 (line 22)
                                                ;   {runtime_call}
  0x00000000030e7a0d: jmpq   0x00000000030e78b0
  0x00000000030e7a12: callq  0x0000000003041280  ; OopMap{rdx=Oop off=631}
                                                ;*getstatic out
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@18 (line 22)
                                                ;   {runtime_call}
  0x00000000030e7a17: mov    0x0(%rdx),%edx
  0x00000000030e7a1d: mov    $0x6050b00,%eax
  0x00000000030e7a22: callq  0x00000000030d1d20  ; OopMap{rdx=Oop off=647}
                                                ;*getstatic out
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@18 (line 22)
                                                ;   {runtime_call}
  0x00000000030e7a27: jmpq   0x00000000030e78c0
  0x00000000030e7a2c: callq  0x0000000003041280  ; OopMap{rdx=Oop off=657}
                                                ;*invokevirtual println
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@22 (line 22)
                                                ;   {runtime_call}
  0x00000000030e7a31: nop
  0x00000000030e7a32: nop
  0x00000000030e7a33: mov    0x2a8(%r15),%rax
  0x00000000030e7a3a: movabs $0x0,%r10
  0x00000000030e7a44: mov    %r10,0x2a8(%r15)
  0x00000000030e7a4b: movabs $0x0,%r10
  0x00000000030e7a55: mov    %r10,0x2b0(%r15)
  0x00000000030e7a5c: add    $0x30,%rsp
  0x00000000030e7a60: pop    %rbp
  0x00000000030e7a61: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e7a66: hlt    
  0x00000000030e7a67: hlt    
  0x00000000030e7a68: hlt    
  0x00000000030e7a69: hlt    
  0x00000000030e7a6a: hlt    
  0x00000000030e7a6b: hlt    
  0x00000000030e7a6c: hlt    
  0x00000000030e7a6d: hlt    
  0x00000000030e7a6e: hlt    
  0x00000000030e7a6f: hlt    
  0x00000000030e7a70: hlt    
  0x00000000030e7a71: hlt    
  0x00000000030e7a72: hlt    
  0x00000000030e7a73: hlt    
  0x00000000030e7a74: hlt    
  0x00000000030e7a75: hlt    
  0x00000000030e7a76: hlt    
  0x00000000030e7a77: hlt    
  0x00000000030e7a78: hlt    
  0x00000000030e7a79: hlt    
  0x00000000030e7a7a: hlt    
  0x00000000030e7a7b: hlt    
  0x00000000030e7a7c: hlt    
  0x00000000030e7a7d: hlt    
  0x00000000030e7a7e: hlt    
  0x00000000030e7a7f: hlt    
[Stub Code]
  0x00000000030e7a80: nop                       ;   {no_reloc}
  0x00000000030e7a81: nop
  0x00000000030e7a82: nop
  0x00000000030e7a83: nop
  0x00000000030e7a84: nop
  0x00000000030e7a85: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030e7a8f: jmpq   0x00000000030e7a8f  ;   {runtime_call}
[Exception Handler]
  0x00000000030e7a94: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030e7a99: mov    %rsp,-0x28(%rsp)
  0x00000000030e7a9e: sub    $0x80,%rsp
  0x00000000030e7aa5: mov    %rax,0x78(%rsp)
  0x00000000030e7aaa: mov    %rcx,0x70(%rsp)
  0x00000000030e7aaf: mov    %rdx,0x68(%rsp)
  0x00000000030e7ab4: mov    %rbx,0x60(%rsp)
  0x00000000030e7ab9: mov    %rbp,0x50(%rsp)
  0x00000000030e7abe: mov    %rsi,0x48(%rsp)
  0x00000000030e7ac3: mov    %rdi,0x40(%rsp)
  0x00000000030e7ac8: mov    %r8,0x38(%rsp)
  0x00000000030e7acd: mov    %r9,0x30(%rsp)
  0x00000000030e7ad2: mov    %r10,0x28(%rsp)
  0x00000000030e7ad7: mov    %r11,0x20(%rsp)
  0x00000000030e7adc: mov    %r12,0x18(%rsp)
  0x00000000030e7ae1: mov    %r13,0x10(%rsp)
  0x00000000030e7ae6: mov    %r14,0x8(%rsp)
  0x00000000030e7aeb: mov    %r15,(%rsp)
  0x00000000030e7aef: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e7af9: movabs $0x30e7a99,%rdx    ;   {internal_word}
  0x00000000030e7b03: mov    %rsp,%r8
  0x00000000030e7b06: and    $0xfffffffffffffff0,%rsp
  0x00000000030e7b0a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e7b0f: hlt    
[Deopt Handler Code]
  0x00000000030e7b10: movabs $0x30e7b10,%r10    ;   {section_word}
  0x00000000030e7b1a: push   %r10
  0x00000000030e7b1c: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e7b21: hlt    
  0x00000000030e7b22: hlt    
  0x00000000030e7b23: hlt    
  0x00000000030e7b24: hlt    
  0x00000000030e7b25: hlt    
  0x00000000030e7b26: hlt    
  0x00000000030e7b27: hlt    
<nmethod compile_id='45' compiler='C1' level='3' entry='0x00000000030e77a0' size='1792' address='0x00000000030e7610' relocation_offset='288' insts_offset='400' stub_offset='1136' scopes_data_offset='1328' scopes_pcs_offset='1448' dependencies_offset='1752' nul_chk_table_offset='1760' oops_offset='1304' method='com/study/volatiletest/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='112639858' iicount='1' stamp='10.606'/>
<writer thread='1104'/>
<task_queued compile_id='46' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='3072' iicount='3072' level='3' stamp='10.606' comment='tiered' hot_count='3072'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e8410:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001737bed8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000000030e85c0: mov    %eax,-0x6000(%rsp)
  0x00000000030e85c7: push   %rbp
  0x00000000030e85c8: sub    $0x30,%rsp
  0x00000000030e85cc: movabs $0x1737f8f8,%rax   ;   {metadata(method data for {method} {0x000000001737bed8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00000000030e85d6: mov    0xdc(%rax),%esi
  0x00000000030e85dc: add    $0x8,%esi
  0x00000000030e85df: mov    %esi,0xdc(%rax)
  0x00000000030e85e5: movabs $0x1737bed0,%rax   ;   {metadata({method} {0x000000001737bed8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00000000030e85ef: and    $0x1ff8,%esi
  0x00000000030e85f5: cmp    $0x0,%esi
  0x00000000030e85f8: je     0x00000000030e8778  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x00000000030e85fe: mov    %rdx,%rax
  0x00000000030e8601: shr    $0x8,%eax
  0x00000000030e8604: cmp    $0x0,%eax
  0x00000000030e8607: movabs $0x1737f8f8,%rax   ;   {metadata(method data for {method} {0x000000001737bed8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00000000030e8611: movabs $0x108,%rsi
  0x00000000030e861b: jne    0x00000000030e862b
  0x00000000030e8621: movabs $0x118,%rsi
  0x00000000030e862b: mov    (%rax,%rsi,1),%rdi
  0x00000000030e862f: lea    0x1(%rdi),%rdi
  0x00000000030e8633: mov    %rdi,(%rax,%rsi,1)
  0x00000000030e8637: je     0x00000000030e8762  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00000000030e863d: shr    $0x10,%edx
  0x00000000030e8640: cmp    $0x0,%edx
  0x00000000030e8643: je     0x00000000030e873a
  0x00000000030e8649: cmp    $0x1,%edx
  0x00000000030e864c: je     0x00000000030e8712
  0x00000000030e8652: cmp    $0x2,%edx
  0x00000000030e8655: je     0x00000000030e86ea
  0x00000000030e865b: cmp    $0xe,%edx
  0x00000000030e865e: je     0x00000000030e86c2
  0x00000000030e8664: cmp    $0xf,%edx
  0x00000000030e8667: je     0x00000000030e8676
  0x00000000030e866d: cmp    $0x10,%edx
  0x00000000030e8670: jne    0x00000000030e869a  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x00000000030e8676: xchg   %ax,%ax
  0x00000000030e8678: jmpq   0x00000000030e87ec  ;   {no_reloc}
  0x00000000030e867d: add    %al,(%rax)
  0x00000000030e867f: add    %al,(%rax)
  0x00000000030e8681: add    %ah,0xf(%rsi)
  0x00000000030e8684: (bad)  
  0x00000000030e8685: add    %r8b,(%rax)
  0x00000000030e8688: jmpq   0x00000000030e8806  ; implicit exception: dispatches to 0x00000000030e87f6
  0x00000000030e868d: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x00000000030e868e: add    $0x30,%rsp
  0x00000000030e8692: pop    %rbp
  0x00000000030e8693: test   %eax,-0x28f8599(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e8699: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x00000000030e869a: nopw   0x0(%rax,%rax,1)
  0x00000000030e86a0: jmpq   0x00000000030e886d  ;   {no_reloc}
  0x00000000030e86a5: add    %al,(%rax)
  0x00000000030e86a7: add    %al,(%rax)
  0x00000000030e86a9: add    %ah,0xf(%rsi)
  0x00000000030e86ac: (bad)  
  0x00000000030e86ad: add    %r8b,(%rax)
  0x00000000030e86b0: jmpq   0x00000000030e8887  ; implicit exception: dispatches to 0x00000000030e8877
  0x00000000030e86b5: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x00000000030e86b6: add    $0x30,%rsp
  0x00000000030e86ba: pop    %rbp
  0x00000000030e86bb: test   %eax,-0x28f85c1(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e86c1: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x00000000030e86c2: nopw   0x0(%rax,%rax,1)
  0x00000000030e86c8: jmpq   0x00000000030e88ee  ;   {no_reloc}
  0x00000000030e86cd: add    %al,(%rax)
  0x00000000030e86cf: add    %al,(%rax)
  0x00000000030e86d1: add    %ah,0xf(%rsi)
  0x00000000030e86d4: (bad)  
  0x00000000030e86d5: add    %r8b,(%rax)
  0x00000000030e86d8: jmpq   0x00000000030e8908  ; implicit exception: dispatches to 0x00000000030e88f8
  0x00000000030e86dd: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x00000000030e86de: add    $0x30,%rsp
  0x00000000030e86e2: pop    %rbp
  0x00000000030e86e3: test   %eax,-0x28f85e9(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e86e9: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x00000000030e86ea: nopw   0x0(%rax,%rax,1)
  0x00000000030e86f0: jmpq   0x00000000030e896f  ;   {no_reloc}
  0x00000000030e86f5: add    %al,(%rax)
  0x00000000030e86f7: add    %al,(%rax)
  0x00000000030e86f9: add    %ah,0xf(%rsi)
  0x00000000030e86fc: (bad)  
  0x00000000030e86fd: add    %r8b,(%rax)
  0x00000000030e8700: jmpq   0x00000000030e8989  ; implicit exception: dispatches to 0x00000000030e8979
  0x00000000030e8705: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x00000000030e8706: add    $0x30,%rsp
  0x00000000030e870a: pop    %rbp
  0x00000000030e870b: test   %eax,-0x28f8611(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e8711: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x00000000030e8712: nopw   0x0(%rax,%rax,1)
  0x00000000030e8718: jmpq   0x00000000030e89f0  ;   {no_reloc}
  0x00000000030e871d: add    %al,(%rax)
  0x00000000030e871f: add    %al,(%rax)
  0x00000000030e8721: add    %ah,0xf(%rsi)
  0x00000000030e8724: (bad)  
  0x00000000030e8725: add    %r8b,(%rax)
  0x00000000030e8728: jmpq   0x00000000030e8a0a  ; implicit exception: dispatches to 0x00000000030e89fa
  0x00000000030e872d: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x00000000030e872e: add    $0x30,%rsp
  0x00000000030e8732: pop    %rbp
  0x00000000030e8733: test   %eax,-0x28f8639(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e8739: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x00000000030e873a: nopw   0x0(%rax,%rax,1)
  0x00000000030e8740: jmpq   0x00000000030e8a71  ;   {no_reloc}
  0x00000000030e8745: add    %al,(%rax)
  0x00000000030e8747: add    %al,(%rax)
  0x00000000030e8749: add    %ah,0xf(%rsi)
  0x00000000030e874c: (bad)  
  0x00000000030e874d: add    %r8b,(%rax)
  0x00000000030e8750: jmpq   0x00000000030e8a8b  ; implicit exception: dispatches to 0x00000000030e8a7b
  0x00000000030e8755: nop                       ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x00000000030e8756: add    $0x30,%rsp
  0x00000000030e875a: pop    %rbp
  0x00000000030e875b: test   %eax,-0x28f8661(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e8761: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x00000000030e8762: movabs $0xd5c09940,%rax   ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e876c: add    $0x30,%rsp
  0x00000000030e8770: pop    %rbp
  0x00000000030e8771: test   %eax,-0x28f8677(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e8777: retq   
  0x00000000030e8778: mov    %rax,0x8(%rsp)
  0x00000000030e877d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e8785: callq  0x00000000030d3220  ; OopMap{off=458}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x00000000030e878a: jmpq   0x00000000030e85fe
  0x00000000030e878f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030e8799: push   %rax
  0x00000000030e879a: push   %rbx
  0x00000000030e879b: mov    0x48(%rax),%rbx
  0x00000000030e879f: push   %rdi
  0x00000000030e87a0: push   %rsi
  0x00000000030e87a1: push   %rdx
  0x00000000030e87a2: push   %rcx
  0x00000000030e87a3: push   %r8
  0x00000000030e87a5: push   %r9
  0x00000000030e87a7: push   %r10
  0x00000000030e87a9: mov    %rsp,%r10
  0x00000000030e87ac: and    $0xfffffffffffffff0,%rsp
  0x00000000030e87b0: push   %r10
  0x00000000030e87b2: push   %r11
  0x00000000030e87b4: mov    $0x7,%ecx
  0x00000000030e87b9: movabs $0x7ffe70cc3c90,%r10  ;   {runtime_call}
  0x00000000030e87c3: callq  *%r10
  0x00000000030e87c6: pop    %r11
  0x00000000030e87c8: pop    %rsp
  0x00000000030e87c9: pop    %r10
  0x00000000030e87cb: pop    %r9
  0x00000000030e87cd: pop    %r8
  0x00000000030e87cf: pop    %rcx
  0x00000000030e87d0: pop    %rdx
  0x00000000030e87d1: pop    %rsi
  0x00000000030e87d2: pop    %rdi
  0x00000000030e87d3: cmp    0x118(%rbx),%rax
  0x00000000030e87da: pop    %rbx
  0x00000000030e87db: pop    %rax
  0x00000000030e87dc: jne    0x00000000030e87ec
  0x00000000030e87e2: jmpq   0x00000000030e8682
  0x00000000030e87e7: mov    $0xa535d00,%eax
  0x00000000030e87ec: callq  0x00000000030d25a0  ; OopMap{off=561}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00000000030e87f1: jmpq   0x00000000030e8678
  0x00000000030e87f6: callq  0x0000000003041280  ; OopMap{rax=Oop off=571}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00000000030e87fb: mov    0x0(%rax),%eax
  0x00000000030e8801: mov    $0x6050b00,%eax
  0x00000000030e8806: callq  0x00000000030d1d20  ; OopMap{rax=Oop off=587}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00000000030e880b: jmpq   0x00000000030e8688
  0x00000000030e8810: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030e881a: push   %rax
  0x00000000030e881b: push   %rbx
  0x00000000030e881c: mov    0x48(%rax),%rbx
  0x00000000030e8820: push   %rdi
  0x00000000030e8821: push   %rsi
  0x00000000030e8822: push   %rdx
  0x00000000030e8823: push   %rcx
  0x00000000030e8824: push   %r8
  0x00000000030e8826: push   %r9
  0x00000000030e8828: push   %r10
  0x00000000030e882a: mov    %rsp,%r10
  0x00000000030e882d: and    $0xfffffffffffffff0,%rsp
  0x00000000030e8831: push   %r10
  0x00000000030e8833: push   %r11
  0x00000000030e8835: mov    $0x7,%ecx
  0x00000000030e883a: movabs $0x7ffe70cc3c90,%r10  ;   {runtime_call}
  0x00000000030e8844: callq  *%r10
  0x00000000030e8847: pop    %r11
  0x00000000030e8849: pop    %rsp
  0x00000000030e884a: pop    %r10
  0x00000000030e884c: pop    %r9
  0x00000000030e884e: pop    %r8
  0x00000000030e8850: pop    %rcx
  0x00000000030e8851: pop    %rdx
  0x00000000030e8852: pop    %rsi
  0x00000000030e8853: pop    %rdi
  0x00000000030e8854: cmp    0x118(%rbx),%rax
  0x00000000030e885b: pop    %rbx
  0x00000000030e885c: pop    %rax
  0x00000000030e885d: jne    0x00000000030e886d
  0x00000000030e8863: jmpq   0x00000000030e86aa
  0x00000000030e8868: mov    $0xa535d00,%eax
  0x00000000030e886d: callq  0x00000000030d25a0  ; OopMap{off=690}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00000000030e8872: jmpq   0x00000000030e86a0
  0x00000000030e8877: callq  0x0000000003041280  ; OopMap{rax=Oop off=700}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00000000030e887c: mov    0x0(%rax),%eax
  0x00000000030e8882: mov    $0x6050b00,%eax
  0x00000000030e8887: callq  0x00000000030d1d20  ; OopMap{rax=Oop off=716}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00000000030e888c: jmpq   0x00000000030e86b0
  0x00000000030e8891: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030e889b: push   %rax
  0x00000000030e889c: push   %rbx
  0x00000000030e889d: mov    0x48(%rax),%rbx
  0x00000000030e88a1: push   %rdi
  0x00000000030e88a2: push   %rsi
  0x00000000030e88a3: push   %rdx
  0x00000000030e88a4: push   %rcx
  0x00000000030e88a5: push   %r8
  0x00000000030e88a7: push   %r9
  0x00000000030e88a9: push   %r10
  0x00000000030e88ab: mov    %rsp,%r10
  0x00000000030e88ae: and    $0xfffffffffffffff0,%rsp
  0x00000000030e88b2: push   %r10
  0x00000000030e88b4: push   %r11
  0x00000000030e88b6: mov    $0x7,%ecx
  0x00000000030e88bb: movabs $0x7ffe70cc3c90,%r10  ;   {runtime_call}
  0x00000000030e88c5: callq  *%r10
  0x00000000030e88c8: pop    %r11
  0x00000000030e88ca: pop    %rsp
  0x00000000030e88cb: pop    %r10
  0x00000000030e88cd: pop    %r9
  0x00000000030e88cf: pop    %r8
  0x00000000030e88d1: pop    %rcx
  0x00000000030e88d2: pop    %rdx
  0x00000000030e88d3: pop    %rsi
  0x00000000030e88d4: pop    %rdi
  0x00000000030e88d5: cmp    0x118(%rbx),%rax
  0x00000000030e88dc: pop    %rbx
  0x00000000030e88dd: pop    %rax
  0x00000000030e88de: jne    0x00000000030e88ee
  0x00000000030e88e4: jmpq   0x00000000030e86d2
  0x00000000030e88e9: mov    $0xa535d00,%eax
  0x00000000030e88ee: callq  0x00000000030d25a0  ; OopMap{off=819}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00000000030e88f3: jmpq   0x00000000030e86c8
  0x00000000030e88f8: callq  0x0000000003041280  ; OopMap{rax=Oop off=829}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00000000030e88fd: mov    0x0(%rax),%eax
  0x00000000030e8903: mov    $0x6050b00,%eax
  0x00000000030e8908: callq  0x00000000030d1d20  ; OopMap{rax=Oop off=845}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00000000030e890d: jmpq   0x00000000030e86d8
  0x00000000030e8912: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030e891c: push   %rax
  0x00000000030e891d: push   %rbx
  0x00000000030e891e: mov    0x48(%rax),%rbx
  0x00000000030e8922: push   %rdi
  0x00000000030e8923: push   %rsi
  0x00000000030e8924: push   %rdx
  0x00000000030e8925: push   %rcx
  0x00000000030e8926: push   %r8
  0x00000000030e8928: push   %r9
  0x00000000030e892a: push   %r10
  0x00000000030e892c: mov    %rsp,%r10
  0x00000000030e892f: and    $0xfffffffffffffff0,%rsp
  0x00000000030e8933: push   %r10
  0x00000000030e8935: push   %r11
  0x00000000030e8937: mov    $0x7,%ecx
  0x00000000030e893c: movabs $0x7ffe70cc3c90,%r10  ;   {runtime_call}
  0x00000000030e8946: callq  *%r10
  0x00000000030e8949: pop    %r11
  0x00000000030e894b: pop    %rsp
  0x00000000030e894c: pop    %r10
  0x00000000030e894e: pop    %r9
  0x00000000030e8950: pop    %r8
  0x00000000030e8952: pop    %rcx
  0x00000000030e8953: pop    %rdx
  0x00000000030e8954: pop    %rsi
  0x00000000030e8955: pop    %rdi
  0x00000000030e8956: cmp    0x118(%rbx),%rax
  0x00000000030e895d: pop    %rbx
  0x00000000030e895e: pop    %rax
  0x00000000030e895f: jne    0x00000000030e896f
  0x00000000030e8965: jmpq   0x00000000030e86fa
  0x00000000030e896a: mov    $0xa535d00,%eax
  0x00000000030e896f: callq  0x00000000030d25a0  ; OopMap{off=948}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00000000030e8974: jmpq   0x00000000030e86f0
  0x00000000030e8979: callq  0x0000000003041280  ; OopMap{rax=Oop off=958}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00000000030e897e: mov    0x0(%rax),%eax
  0x00000000030e8984: mov    $0x6050b00,%eax
  0x00000000030e8989: callq  0x00000000030d1d20  ; OopMap{rax=Oop off=974}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00000000030e898e: jmpq   0x00000000030e8700
  0x00000000030e8993: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030e899d: push   %rax
  0x00000000030e899e: push   %rbx
  0x00000000030e899f: mov    0x48(%rax),%rbx
  0x00000000030e89a3: push   %rdi
  0x00000000030e89a4: push   %rsi
  0x00000000030e89a5: push   %rdx
  0x00000000030e89a6: push   %rcx
  0x00000000030e89a7: push   %r8
  0x00000000030e89a9: push   %r9
  0x00000000030e89ab: push   %r10
  0x00000000030e89ad: mov    %rsp,%r10
  0x00000000030e89b0: and    $0xfffffffffffffff0,%rsp
  0x00000000030e89b4: push   %r10
  0x00000000030e89b6: push   %r11
  0x00000000030e89b8: mov    $0x7,%ecx
  0x00000000030e89bd: movabs $0x7ffe70cc3c90,%r10  ;   {runtime_call}
  0x00000000030e89c7: callq  *%r10
  0x00000000030e89ca: pop    %r11
  0x00000000030e89cc: pop    %rsp
  0x00000000030e89cd: pop    %r10
  0x00000000030e89cf: pop    %r9
  0x00000000030e89d1: pop    %r8
  0x00000000030e89d3: pop    %rcx
  0x00000000030e89d4: pop    %rdx
  0x00000000030e89d5: pop    %rsi
  0x00000000030e89d6: pop    %rdi
  0x00000000030e89d7: cmp    0x118(%rbx),%rax
  0x00000000030e89de: pop    %rbx
  0x00000000030e89df: pop    %rax
  0x00000000030e89e0: jne    0x00000000030e89f0
  0x00000000030e89e6: jmpq   0x00000000030e8722
  0x00000000030e89eb: mov    $0xa535d00,%eax
  0x00000000030e89f0: callq  0x00000000030d25a0  ; OopMap{off=1077}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00000000030e89f5: jmpq   0x00000000030e8718
  0x00000000030e89fa: callq  0x0000000003041280  ; OopMap{rax=Oop off=1087}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00000000030e89ff: mov    0x0(%rax),%eax
  0x00000000030e8a05: mov    $0x6050b00,%eax
  0x00000000030e8a0a: callq  0x00000000030d1d20  ; OopMap{rax=Oop off=1103}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00000000030e8a0f: jmpq   0x00000000030e8728
  0x00000000030e8a14: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030e8a1e: push   %rax
  0x00000000030e8a1f: push   %rbx
  0x00000000030e8a20: mov    0x48(%rax),%rbx
  0x00000000030e8a24: push   %rdi
  0x00000000030e8a25: push   %rsi
  0x00000000030e8a26: push   %rdx
  0x00000000030e8a27: push   %rcx
  0x00000000030e8a28: push   %r8
  0x00000000030e8a2a: push   %r9
  0x00000000030e8a2c: push   %r10
  0x00000000030e8a2e: mov    %rsp,%r10
  0x00000000030e8a31: and    $0xfffffffffffffff0,%rsp
  0x00000000030e8a35: push   %r10
  0x00000000030e8a37: push   %r11
  0x00000000030e8a39: mov    $0x7,%ecx
  0x00000000030e8a3e: movabs $0x7ffe70cc3c90,%r10  ;   {runtime_call}
  0x00000000030e8a48: callq  *%r10
  0x00000000030e8a4b: pop    %r11
  0x00000000030e8a4d: pop    %rsp
  0x00000000030e8a4e: pop    %r10
  0x00000000030e8a50: pop    %r9
  0x00000000030e8a52: pop    %r8
  0x00000000030e8a54: pop    %rcx
  0x00000000030e8a55: pop    %rdx
  0x00000000030e8a56: pop    %rsi
  0x00000000030e8a57: pop    %rdi
  0x00000000030e8a58: cmp    0x118(%rbx),%rax
  0x00000000030e8a5f: pop    %rbx
  0x00000000030e8a60: pop    %rax
  0x00000000030e8a61: jne    0x00000000030e8a71
  0x00000000030e8a67: jmpq   0x00000000030e874a
  0x00000000030e8a6c: mov    $0xa535d00,%eax
  0x00000000030e8a71: callq  0x00000000030d25a0  ; OopMap{off=1206}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00000000030e8a76: jmpq   0x00000000030e8740
  0x00000000030e8a7b: callq  0x0000000003041280  ; OopMap{rax=Oop off=1216}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00000000030e8a80: mov    0x0(%rax),%eax
  0x00000000030e8a86: mov    $0x6050b00,%eax
  0x00000000030e8a8b: callq  0x00000000030d1d20  ; OopMap{rax=Oop off=1232}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00000000030e8a90: jmpq   0x00000000030e8750
  0x00000000030e8a95: nop
  0x00000000030e8a96: nop
  0x00000000030e8a97: mov    0x2a8(%r15),%rax
  0x00000000030e8a9e: movabs $0x0,%r10
  0x00000000030e8aa8: mov    %r10,0x2a8(%r15)
  0x00000000030e8aaf: movabs $0x0,%r10
  0x00000000030e8ab9: mov    %r10,0x2b0(%r15)
  0x00000000030e8ac0: add    $0x30,%rsp
  0x00000000030e8ac4: pop    %rbp
  0x00000000030e8ac5: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e8aca: hlt    
  0x00000000030e8acb: hlt    
  0x00000000030e8acc: hlt    
  0x00000000030e8acd: hlt    
  0x00000000030e8ace: hlt    
  0x00000000030e8acf: hlt    
  0x00000000030e8ad0: hlt    
  0x00000000030e8ad1: hlt    
  0x00000000030e8ad2: hlt    
  0x00000000030e8ad3: hlt    
  0x00000000030e8ad4: hlt    
  0x00000000030e8ad5: hlt    
  0x00000000030e8ad6: hlt    
  0x00000000030e8ad7: hlt    
  0x00000000030e8ad8: hlt    
  0x00000000030e8ad9: hlt    
  0x00000000030e8ada: hlt    
  0x00000000030e8adb: hlt    
  0x00000000030e8adc: hlt    
  0x00000000030e8add: hlt    
  0x00000000030e8ade: hlt    
  0x00000000030e8adf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e8ae0: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030e8ae5: mov    %rsp,-0x28(%rsp)
  0x00000000030e8aea: sub    $0x80,%rsp
  0x00000000030e8af1: mov    %rax,0x78(%rsp)
  0x00000000030e8af6: mov    %rcx,0x70(%rsp)
  0x00000000030e8afb: mov    %rdx,0x68(%rsp)
  0x00000000030e8b00: mov    %rbx,0x60(%rsp)
  0x00000000030e8b05: mov    %rbp,0x50(%rsp)
  0x00000000030e8b0a: mov    %rsi,0x48(%rsp)
  0x00000000030e8b0f: mov    %rdi,0x40(%rsp)
  0x00000000030e8b14: mov    %r8,0x38(%rsp)
  0x00000000030e8b19: mov    %r9,0x30(%rsp)
  0x00000000030e8b1e: mov    %r10,0x28(%rsp)
  0x00000000030e8b23: mov    %r11,0x20(%rsp)
  0x00000000030e8b28: mov    %r12,0x18(%rsp)
  0x00000000030e8b2d: mov    %r13,0x10(%rsp)
  0x00000000030e8b32: mov    %r14,0x8(%rsp)
  0x00000000030e8b37: mov    %r15,(%rsp)
  0x00000000030e8b3b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e8b45: movabs $0x30e8ae5,%rdx    ;   {internal_word}
  0x00000000030e8b4f: mov    %rsp,%r8
  0x00000000030e8b52: and    $0xfffffffffffffff0,%rsp
  0x00000000030e8b56: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e8b5b: hlt    
[Deopt Handler Code]
  0x00000000030e8b5c: movabs $0x30e8b5c,%r10    ;   {section_word}
  0x00000000030e8b66: push   %r10
  0x00000000030e8b68: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e8b6d: hlt    
  0x00000000030e8b6e: hlt    
  0x00000000030e8b6f: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x00000000030e85c0' size='2680' address='0x00000000030e8410' relocation_offset='288' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='4427' iicount='4427' stamp='11.238'/>
Decoding compiled method 0x00000000030e8ed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001737c598} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000030e9020: mov    0x8(%rdx),%r10d
  0x00000000030e9024: shl    $0x3,%r10
  0x00000000030e9028: cmp    %rax,%r10
  0x00000000030e902b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e9031: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e903c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e9040: mov    %eax,-0x6000(%rsp)
  0x00000000030e9047: push   %rbp
  0x00000000030e9048: sub    $0x30,%rsp
  0x00000000030e904c: movabs $0x1737fd28,%rax   ;   {metadata(method data for {method} {0x000000001737c598} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e9056: mov    0xdc(%rax),%esi
  0x00000000030e905c: add    $0x8,%esi
  0x00000000030e905f: mov    %esi,0xdc(%rax)
  0x00000000030e9065: movabs $0x1737c590,%rax   ;   {metadata({method} {0x000000001737c598} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e906f: and    $0x1ff8,%esi
  0x00000000030e9075: cmp    $0x0,%esi
  0x00000000030e9078: je     0x00000000030e90ac  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x00000000030e907e: and    $0xffff,%r8d
  0x00000000030e9085: movabs $0xd5c09950,%rax   ;   {oop([I)}
  0x00000000030e908f: movslq %r8d,%rsi
  0x00000000030e9092: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000000030e90c0
  0x00000000030e9096: jae    0x00000000030e90ca
  0x00000000030e909c: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00000000030e90a0: add    $0x30,%rsp
  0x00000000030e90a4: pop    %rbp
  0x00000000030e90a5: test   %eax,-0x28f8fab(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e90ab: retq   
  0x00000000030e90ac: mov    %rax,0x8(%rsp)
  0x00000000030e90b1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e90b9: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x00000000030e90be: jmp    0x00000000030e907e
  0x00000000030e90c0: callq  0x0000000003041280  ; OopMap{rax=Oop off=165}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000000030e90c5: callq  0x0000000003041280  ; OopMap{rax=Oop off=170}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000000030e90ca: mov    %r8,(%rsp)
  0x00000000030e90ce: callq  0x0000000003041940  ; OopMap{rax=Oop off=179}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000000030e90d3: nop
  0x00000000030e90d4: nop
  0x00000000030e90d5: mov    0x2a8(%r15),%rax
  0x00000000030e90dc: movabs $0x0,%r10
  0x00000000030e90e6: mov    %r10,0x2a8(%r15)
  0x00000000030e90ed: movabs $0x0,%r10
  0x00000000030e90f7: mov    %r10,0x2b0(%r15)
  0x00000000030e90fe: add    $0x30,%rsp
  0x00000000030e9102: pop    %rbp
  0x00000000030e9103: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e9108: hlt    
  0x00000000030e9109: hlt    
  0x00000000030e910a: hlt    
  0x00000000030e910b: hlt    
  0x00000000030e910c: hlt    
  0x00000000030e910d: hlt    
  0x00000000030e910e: hlt    
  0x00000000030e910f: hlt    
  0x00000000030e9110: hlt    
  0x00000000030e9111: hlt    
  0x00000000030e9112: hlt    
  0x00000000030e9113: hlt    
  0x00000000030e9114: hlt    
  0x00000000030e9115: hlt    
  0x00000000030e9116: hlt    
  0x00000000030e9117: hlt    
  0x00000000030e9118: hlt    
  0x00000000030e9119: hlt    
  0x00000000030e911a: hlt    
  0x00000000030e911b: hlt    
  0x00000000030e911c: hlt    
  0x00000000030e911d: hlt    
  0x00000000030e911e: hlt    
  0x00000000030e911f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e9120: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030e9125: mov    %rsp,-0x28(%rsp)
  0x00000000030e912a: sub    $0x80,%rsp
  0x00000000030e9131: mov    %rax,0x78(%rsp)
  0x00000000030e9136: mov    %rcx,0x70(%rsp)
  0x00000000030e913b: mov    %rdx,0x68(%rsp)
  0x00000000030e9140: mov    %rbx,0x60(%rsp)
  0x00000000030e9145: mov    %rbp,0x50(%rsp)
  0x00000000030e914a: mov    %rsi,0x48(%rsp)
  0x00000000030e914f: mov    %rdi,0x40(%rsp)
  0x00000000030e9154: mov    %r8,0x38(%rsp)
  0x00000000030e9159: mov    %r9,0x30(%rsp)
  0x00000000030e915e: mov    %r10,0x28(%rsp)
  0x00000000030e9163: mov    %r11,0x20(%rsp)
  0x00000000030e9168: mov    %r12,0x18(%rsp)
  0x00000000030e916d: mov    %r13,0x10(%rsp)
  0x00000000030e9172: mov    %r14,0x8(%rsp)
  0x00000000030e9177: mov    %r15,(%rsp)
  0x00000000030e917b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e9185: movabs $0x30e9125,%rdx    ;   {internal_word}
  0x00000000030e918f: mov    %rsp,%r8
  0x00000000030e9192: and    $0xfffffffffffffff0,%rsp
  0x00000000030e9196: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e919b: hlt    
[Deopt Handler Code]
  0x00000000030e919c: movabs $0x30e919c,%r10    ;   {section_word}
  0x00000000030e91a6: push   %r10
  0x00000000030e91a8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e91ad: hlt    
  0x00000000030e91ae: hlt    
  0x00000000030e91af: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x00000000030e9020' size='952' address='0x00000000030e8ed0' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='792' dependencies_offset='920' nul_chk_table_offset='928' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4546' iicount='4546' stamp='11.390'/>
<writer thread='22228'/>
<task_queued compile_id='47' compile_kind='osr' method='com/study/volatiletest/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='112646144' iicount='1' osr_bci='2' stamp='11.390' comment='tiered' hot_count='112646144'/>
<writer thread='1104'/>
<task_queued compile_id='48' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='11.390' comment='tiered' hot_count='256'/>
<task_queued compile_id='49' method='java/lang/String hashCode ()I' bytes='55' count='1138' backedge_count='20480' iicount='1138' stamp='11.390' comment='tiered' hot_count='1138'/>
<task_queued compile_id='50' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4608' iicount='4608' level='1' stamp='11.390' comment='tiered' hot_count='4608'/>
<task_queued compile_id='51' method='java/nio/Buffer limit ()I' bytes='5' count='256' iicount='256' level='1' stamp='11.391' comment='tiered' hot_count='256'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030e98d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001737cd68} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000000030e9a40: mov    0x8(%rdx),%r10d
  0x00000000030e9a44: shl    $0x3,%r10
  0x00000000030e9a48: cmp    %rax,%r10
  0x00000000030e9a4b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030e9a51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030e9a5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030e9a60: mov    %eax,-0x6000(%rsp)
  0x00000000030e9a67: push   %rbp
  0x00000000030e9a68: sub    $0x40,%rsp
  0x00000000030e9a6c: movabs $0x1737fb68,%rax   ;   {metadata(method data for {method} {0x000000001737cd68} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e9a76: mov    0xdc(%rax),%esi
  0x00000000030e9a7c: add    $0x8,%esi
  0x00000000030e9a7f: mov    %esi,0xdc(%rax)
  0x00000000030e9a85: movabs $0x1737cd60,%rax   ;   {metadata({method} {0x000000001737cd68} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e9a8f: and    $0x1ff8,%esi
  0x00000000030e9a95: cmp    $0x0,%esi
  0x00000000030e9a98: je     0x00000000030e9ba7  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x00000000030e9a9e: movabs $0x1737fb68,%rax   ;   {metadata(method data for {method} {0x000000001737cd68} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e9aa8: addq   $0x1,0x118(%rax)
  0x00000000030e9ab0: movabs $0x1737fd28,%rax   ;   {metadata(method data for {method} {0x000000001737c598} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e9aba: mov    0xdc(%rax),%esi
  0x00000000030e9ac0: add    $0x8,%esi
  0x00000000030e9ac3: mov    %esi,0xdc(%rax)
  0x00000000030e9ac9: movabs $0x1737c590,%rax   ;   {metadata({method} {0x000000001737c598} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e9ad3: and    $0x7ffff8,%esi
  0x00000000030e9ad9: cmp    $0x0,%esi
  0x00000000030e9adc: je     0x00000000030e9bbe
  0x00000000030e9ae2: mov    %r8,%rax
  0x00000000030e9ae5: and    $0xffff,%eax
  0x00000000030e9aeb: movabs $0xd5c09950,%rsi   ;   {oop([I)}
  0x00000000030e9af5: movslq %eax,%rdi
  0x00000000030e9af8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00000000030e9bd5
  0x00000000030e9afb: jae    0x00000000030e9bdf
  0x00000000030e9b01: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x00000000030e9b05: mov    %rax,%rsi
  0x00000000030e9b08: and    $0x20000,%esi
  0x00000000030e9b0e: cmp    $0x0,%esi
  0x00000000030e9b11: movabs $0x1737fb68,%rsi   ;   {metadata(method data for {method} {0x000000001737cd68} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e9b1b: movabs $0x138,%rdi
  0x00000000030e9b25: je     0x00000000030e9b35
  0x00000000030e9b2b: movabs $0x148,%rdi
  0x00000000030e9b35: mov    (%rsi,%rdi,1),%rbx
  0x00000000030e9b39: lea    0x1(%rbx),%rbx
  0x00000000030e9b3d: mov    %rbx,(%rsi,%rdi,1)
  0x00000000030e9b41: je     0x00000000030e9b98  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x00000000030e9b47: mov    %rax,%rsi
  0x00000000030e9b4a: and    $0x7fc0000,%esi
  0x00000000030e9b50: cmp    $0x7fc0000,%esi
  0x00000000030e9b56: movabs $0x1737fb68,%rsi   ;   {metadata(method data for {method} {0x000000001737cd68} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000030e9b60: movabs $0x158,%rdi
  0x00000000030e9b6a: je     0x00000000030e9b7a
  0x00000000030e9b70: movabs $0x168,%rdi
  0x00000000030e9b7a: mov    (%rsi,%rdi,1),%rbx
  0x00000000030e9b7e: lea    0x1(%rbx),%rbx
  0x00000000030e9b82: mov    %rbx,(%rsi,%rdi,1)
  0x00000000030e9b86: je     0x00000000030e9b98  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x00000000030e9b8c: shl    $0x5,%eax
  0x00000000030e9b8f: sar    $0x17,%eax
  0x00000000030e9b92: add    %r8d,%eax
  0x00000000030e9b95: mov    %rax,%r8           ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x00000000030e9b98: mov    %r8,%rax
  0x00000000030e9b9b: add    $0x40,%rsp
  0x00000000030e9b9f: pop    %rbp
  0x00000000030e9ba0: test   %eax,-0x28f9aa6(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030e9ba6: retq   
  0x00000000030e9ba7: mov    %rax,0x8(%rsp)
  0x00000000030e9bac: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e9bb4: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=377}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x00000000030e9bb9: jmpq   0x00000000030e9a9e
  0x00000000030e9bbe: mov    %rax,0x8(%rsp)
  0x00000000030e9bc3: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030e9bcb: callq  0x00000000030d3220  ; OopMap{off=400}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000030e9bd0: jmpq   0x00000000030e9ae2
  0x00000000030e9bd5: callq  0x0000000003041280  ; OopMap{rsi=Oop off=410}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000030e9bda: callq  0x0000000003041280  ; OopMap{rsi=Oop off=415}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000030e9bdf: mov    %rax,(%rsp)
  0x00000000030e9be3: callq  0x0000000003041940  ; OopMap{rsi=Oop off=424}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000000030e9be8: nop
  0x00000000030e9be9: nop
  0x00000000030e9bea: mov    0x2a8(%r15),%rax
  0x00000000030e9bf1: movabs $0x0,%r10
  0x00000000030e9bfb: mov    %r10,0x2a8(%r15)
  0x00000000030e9c02: movabs $0x0,%r10
  0x00000000030e9c0c: mov    %r10,0x2b0(%r15)
  0x00000000030e9c13: add    $0x40,%rsp
  0x00000000030e9c17: pop    %rbp
  0x00000000030e9c18: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030e9c1d: hlt    
  0x00000000030e9c1e: hlt    
  0x00000000030e9c1f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030e9c20: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030e9c25: mov    %rsp,-0x28(%rsp)
  0x00000000030e9c2a: sub    $0x80,%rsp
  0x00000000030e9c31: mov    %rax,0x78(%rsp)
  0x00000000030e9c36: mov    %rcx,0x70(%rsp)
  0x00000000030e9c3b: mov    %rdx,0x68(%rsp)
  0x00000000030e9c40: mov    %rbx,0x60(%rsp)
  0x00000000030e9c45: mov    %rbp,0x50(%rsp)
  0x00000000030e9c4a: mov    %rsi,0x48(%rsp)
  0x00000000030e9c4f: mov    %rdi,0x40(%rsp)
  0x00000000030e9c54: mov    %r8,0x38(%rsp)
  0x00000000030e9c59: mov    %r9,0x30(%rsp)
  0x00000000030e9c5e: mov    %r10,0x28(%rsp)
  0x00000000030e9c63: mov    %r11,0x20(%rsp)
  0x00000000030e9c68: mov    %r12,0x18(%rsp)
  0x00000000030e9c6d: mov    %r13,0x10(%rsp)
  0x00000000030e9c72: mov    %r14,0x8(%rsp)
  0x00000000030e9c77: mov    %r15,(%rsp)
  0x00000000030e9c7b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030e9c85: movabs $0x30e9c25,%rdx    ;   {internal_word}
  0x00000000030e9c8f: mov    %rsp,%r8
  0x00000000030e9c92: and    $0xfffffffffffffff0,%rsp
  0x00000000030e9c96: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030e9c9b: hlt    
[Deopt Handler Code]
  0x00000000030e9c9c: movabs $0x30e9c9c,%r10    ;   {section_word}
  0x00000000030e9ca6: push   %r10
  0x00000000030e9ca8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030e9cad: hlt    
  0x00000000030e9cae: hlt    
  0x00000000030e9caf: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x00000000030e9a40' size='1352' address='0x00000000030e98d0' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1128' dependencies_offset='1320' nul_chk_table_offset='1328' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='4406' iicount='4406' stamp='11.585'/>
<writer thread='10816'/>
Decoding compiled method 0x00000000030ecad0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000175b3370} &apos;run&apos; &apos;()V&apos; in &apos;com/study/volatiletest/VisibilityDemo$1&apos;
  0x00000000030ecc00: int3   
  0x00000000030ecc01: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030ecc0c: data16 data16 xchg %ax,%ax
  0x00000000030ecc10: mov    %eax,-0x6000(%rsp)
  0x00000000030ecc17: push   %rbp
  0x00000000030ecc18: sub    $0x40,%rsp
  0x00000000030ecc1c: mov    (%rdx),%ebx
  0x00000000030ecc1e: mov    0x8(%rdx),%rbp
  0x00000000030ecc22: mov    %rdx,%rcx
  0x00000000030ecc25: movabs $0x5ab38580,%r10
  0x00000000030ecc2f: callq  *%r10
  0x00000000030ecc32: test   %rbp,%rbp
  0x00000000030ecc35: je     0x00000000030ecc5c
  0x00000000030ecc37: mov    0x8(%rbp),%r11d
  0x00000000030ecc3b: cmp    $0x2000c143,%r11d  ;   {metadata(&apos;com/study/volatiletest/VisibilityDemo$1&apos;)}
  0x00000000030ecc42: jne    0x00000000030ecc71  ;*aload_0
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@2 (line 19)

  0x00000000030ecc44: mov    0xc(%rbp),%r11d    ;*getfield val$demo1
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@3 (line 19)
                                                ; implicit exception: dispatches to 0x00000000030ecc60
  0x00000000030ecc48: movzbl 0xc(%r11),%r11d    ; implicit exception: dispatches to 0x00000000030ecc60
  0x00000000030ecc4d: test   %r11d,%r11d
  0x00000000030ecc50: je     0x00000000030ecc60  ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)

  0x00000000030ecc52: inc    %ebx               ; OopMap{rbp=Oop off=84}
                                                ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)

  0x00000000030ecc54: test   %eax,-0x28fcc5a(%rip)        # 0x00000000007f0000
                                                ;*goto
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@15 (line 20)
                                                ;   {poll}
  0x00000000030ecc5a: jmp    0x00000000030ecc52
  0x00000000030ecc5c: xor    %ebp,%ebp
  0x00000000030ecc5e: jmp    0x00000000030ecc44
  0x00000000030ecc60: mov    $0xffffff86,%edx
  0x00000000030ecc65: mov    %ebx,0x20(%rsp)
  0x00000000030ecc69: xchg   %ax,%ax
  0x00000000030ecc6b: callq  0x00000000030157a0  ; OopMap{rbp=Oop off=112}
                                                ;*aload_0
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@2 (line 19)
                                                ;   {runtime_call}
  0x00000000030ecc70: int3   
  0x00000000030ecc71: mov    $0xffffff9d,%edx
  0x00000000030ecc76: mov    %ebx,0x20(%rsp)
  0x00000000030ecc7a: nop
  0x00000000030ecc7b: callq  0x00000000030157a0  ; OopMap{rbp=Oop off=128}
                                                ;*aload_0
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@2 (line 19)
                                                ;   {runtime_call}
  0x00000000030ecc80: int3                      ;*aload_0
                                                ; - com.study.volatiletest.VisibilityDemo$1::run@2 (line 19)

  0x00000000030ecc81: int3   
  0x00000000030ecc82: hlt    
  0x00000000030ecc83: hlt    
  0x00000000030ecc84: hlt    
  0x00000000030ecc85: hlt    
  0x00000000030ecc86: hlt    
  0x00000000030ecc87: hlt    
  0x00000000030ecc88: hlt    
  0x00000000030ecc89: hlt    
  0x00000000030ecc8a: hlt    
  0x00000000030ecc8b: hlt    
  0x00000000030ecc8c: hlt    
  0x00000000030ecc8d: hlt    
  0x00000000030ecc8e: hlt    
  0x00000000030ecc8f: hlt    
  0x00000000030ecc90: hlt    
  0x00000000030ecc91: hlt    
  0x00000000030ecc92: hlt    
  0x00000000030ecc93: hlt    
  0x00000000030ecc94: hlt    
  0x00000000030ecc95: hlt    
  0x00000000030ecc96: hlt    
  0x00000000030ecc97: hlt    
  0x00000000030ecc98: hlt    
  0x00000000030ecc99: hlt    
  0x00000000030ecc9a: hlt    
  0x00000000030ecc9b: hlt    
  0x00000000030ecc9c: hlt    
  0x00000000030ecc9d: hlt    
  0x00000000030ecc9e: hlt    
  0x00000000030ecc9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030ecca0: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030ecca5: callq  0x00000000030eccaa
  0x00000000030eccaa: subq   $0x5,(%rsp)
  0x00000000030eccaf: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030eccb4: hlt    
  0x00000000030eccb5: hlt    
  0x00000000030eccb6: hlt    
  0x00000000030eccb7: hlt    
<nmethod compile_id='47' compile_kind='osr' compiler='C2' level='4' entry='0x00000000030ecc00' size='752' address='0x00000000030ecad0' relocation_offset='288' insts_offset='304' stub_offset='464' scopes_data_offset='512' scopes_pcs_offset='560' dependencies_offset='720' nul_chk_table_offset='728' oops_offset='488' method='com/study/volatiletest/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='268435456' iicount='1' stamp='11.707'/>
<make_not_entrant thread='10816' compile_id='41' compile_kind='osr' compiler='C1' level='3' stamp='11.707'/>
<writer thread='22584'/>
Decoding compiled method 0x00000000030ead90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b4f88} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x00000000030eaec0: mov    0x8(%rdx),%r10d
  0x00000000030eaec4: shl    $0x3,%r10
  0x00000000030eaec8: cmp    %r10,%rax
  0x00000000030eaecb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030eaed1: data16 xchg %ax,%ax
  0x00000000030eaed4: nopl   0x0(%rax,%rax,1)
  0x00000000030eaedc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030eaee0: mov    %eax,-0x6000(%rsp)
  0x00000000030eaee7: push   %rbp
  0x00000000030eaee8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1454)

  0x00000000030eaeec: mov    %rdx,%rbx
  0x00000000030eaeef: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1454)

  0x00000000030eaef2: test   %eax,%eax
  0x00000000030eaef4: jne    0x00000000030eafc4  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1455)

  0x00000000030eaefa: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1455)

  0x00000000030eaefe: mov    0xc(%r10),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ; implicit exception: dispatches to 0x00000000030eafe9
  0x00000000030eaf02: test   %edi,%edi
  0x00000000030eaf04: jle    0x00000000030eafd0  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1455)

  0x00000000030eaf0a: test   %edi,%edi
  0x00000000030eaf0c: jbe    0x00000000030eafd4
  0x00000000030eaf12: mov    %edi,%ecx
  0x00000000030eaf14: dec    %ecx
  0x00000000030eaf16: cmp    %edi,%ecx
  0x00000000030eaf18: jae    0x00000000030eafd4  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1459)

  0x00000000030eaf1e: movzwl 0x10(%r10),%esi    ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1459)

  0x00000000030eaf23: mov    %edi,%r8d
  0x00000000030eaf26: add    $0xfffffffd,%r8d
  0x00000000030eaf2a: mov    %esi,%eax
  0x00000000030eaf2c: shl    $0x5,%eax
  0x00000000030eaf2f: mov    $0x1,%r11d
  0x00000000030eaf35: mov    $0x80000000,%r9d
  0x00000000030eaf3b: cmp    %r8d,%ecx
  0x00000000030eaf3e: cmovl  %r9d,%r8d
  0x00000000030eaf42: cmp    $0x1,%r8d
  0x00000000030eaf46: jle    0x00000000030eafba
  0x00000000030eaf48: sub    %esi,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1459)

  0x00000000030eaf4a: jmp    0x00000000030eaf72  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1459)

  0x00000000030eaf4c: movzwl 0x10(%r10,%r11,2),%r8d
  0x00000000030eaf52: sub    %esi,%eax
  0x00000000030eaf54: add    %r8d,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1459)

  0x00000000030eaf57: inc    %r11d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1458)

  0x00000000030eaf5a: cmp    %edi,%r11d
  0x00000000030eaf5d: jge    0x00000000030eafc1  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1458)

  0x00000000030eaf5f: mov    %eax,%r8d
  0x00000000030eaf62: shl    $0x5,%r8d
  0x00000000030eaf66: mov    %eax,%esi
  0x00000000030eaf68: mov    %r8d,%eax
  0x00000000030eaf6b: jmp    0x00000000030eaf4c
  0x00000000030eaf6d: data16 xchg %ax,%ax
  0x00000000030eaf70: sub    %esi,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1459)

  0x00000000030eaf72: movzwl 0x10(%r10,%r11,2),%r9d
  0x00000000030eaf78: add    %r9d,%eax
  0x00000000030eaf7b: movslq %r11d,%r9
  0x00000000030eaf7e: movzwl 0x12(%r10,%r9,2),%ecx
  0x00000000030eaf84: movzwl 0x16(%r10,%r9,2),%ebp
  0x00000000030eaf8a: movzwl 0x14(%r10,%r9,2),%r9d
  0x00000000030eaf90: mov    %eax,%esi
  0x00000000030eaf92: shl    $0x5,%esi
  0x00000000030eaf95: sub    %eax,%esi
  0x00000000030eaf97: add    %ecx,%esi
  0x00000000030eaf99: mov    %esi,%ecx
  0x00000000030eaf9b: shl    $0x5,%ecx
  0x00000000030eaf9e: sub    %esi,%ecx
  0x00000000030eafa0: add    %r9d,%ecx
  0x00000000030eafa3: mov    %ecx,%esi
  0x00000000030eafa5: shl    $0x5,%esi
  0x00000000030eafa8: sub    %ecx,%esi
  0x00000000030eafaa: add    %ebp,%esi          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1459)

  0x00000000030eafac: mov    %esi,%eax
  0x00000000030eafae: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1459)

  0x00000000030eafb1: add    $0x4,%r11d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1458)

  0x00000000030eafb5: cmp    %r8d,%r11d
  0x00000000030eafb8: jl     0x00000000030eaf70  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1458)

  0x00000000030eafba: cmp    %edi,%r11d
  0x00000000030eafbd: jl     0x00000000030eaf4c
  0x00000000030eafbf: mov    %esi,%eax
  0x00000000030eafc1: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1454)

  0x00000000030eafc4: add    $0x20,%rsp
  0x00000000030eafc8: pop    %rbp
  0x00000000030eafc9: test   %eax,-0x28fafcf(%rip)        # 0x00000000007f0000
                                                ;   {poll_return}
  0x00000000030eafcf: retq   
  0x00000000030eafd0: xor    %eax,%eax
  0x00000000030eafd2: jmp    0x00000000030eafc4
  0x00000000030eafd4: mov    $0xffffff86,%edx
  0x00000000030eafd9: mov    %r10d,%ebp
  0x00000000030eafdc: mov    %rbx,(%rsp)
  0x00000000030eafe0: data16 xchg %ax,%ax
  0x00000000030eafe3: callq  0x00000000030157a0  ; OopMap{rbp=NarrowOop [0]=Oop off=296}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1459)
                                                ;   {runtime_call}
  0x00000000030eafe8: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1459)

  0x00000000030eafe9: mov    $0xfffffff6,%edx
  0x00000000030eafee: nop
  0x00000000030eafef: callq  0x00000000030157a0  ; OopMap{off=308}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)
                                                ;   {runtime_call}
  0x00000000030eaff4: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1455)

  0x00000000030eaff5: hlt    
  0x00000000030eaff6: hlt    
  0x00000000030eaff7: hlt    
  0x00000000030eaff8: hlt    
  0x00000000030eaff9: hlt    
  0x00000000030eaffa: hlt    
  0x00000000030eaffb: hlt    
  0x00000000030eaffc: hlt    
  0x00000000030eaffd: hlt    
  0x00000000030eaffe: hlt    
  0x00000000030eafff: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030eb000: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030eb005: callq  0x00000000030eb00a
  0x00000000030eb00a: subq   $0x5,(%rsp)
  0x00000000030eb00f: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030eb014: hlt    
  0x00000000030eb015: hlt    
  0x00000000030eb016: hlt    
  0x00000000030eb017: hlt    
<nmethod compile_id='49' compiler='C2' level='4' entry='0x00000000030eaec0' size='1192' address='0x00000000030ead90' relocation_offset='288' insts_offset='304' stub_offset='624' scopes_data_offset='656' scopes_pcs_offset='768' dependencies_offset='1168' nul_chk_table_offset='1176' method='java/lang/String hashCode ()I' bytes='55' count='1150' backedge_count='20813' iicount='1150' stamp='11.912'/>
<make_not_entrant thread='22584' compile_id='5' compiler='C1' level='3' stamp='11.912'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030eaa10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001737c598} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000030eab60: mov    0x8(%rdx),%r10d
  0x00000000030eab64: shl    $0x3,%r10
  0x00000000030eab68: cmp    %rax,%r10
  0x00000000030eab6b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030eab71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030eab7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030eab80: mov    %eax,-0x6000(%rsp)
  0x00000000030eab87: push   %rbp
  0x00000000030eab88: sub    $0x30,%rsp         ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x00000000030eab8c: and    $0xffff,%r8d
  0x00000000030eab93: movabs $0xd5c09950,%rax   ;   {oop([I)}
  0x00000000030eab9d: movslq %r8d,%rsi
  0x00000000030eaba0: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000000030eabba
  0x00000000030eaba4: jae    0x00000000030eabc4
  0x00000000030eabaa: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00000000030eabae: add    $0x30,%rsp
  0x00000000030eabb2: pop    %rbp
  0x00000000030eabb3: test   %eax,-0x28faab9(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030eabb9: retq   
  0x00000000030eabba: callq  0x0000000003041280  ; OopMap{rax=Oop off=95}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000000030eabbf: callq  0x0000000003041280  ; OopMap{rax=Oop off=100}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000000030eabc4: mov    %r8,(%rsp)
  0x00000000030eabc8: callq  0x0000000003041940  ; OopMap{rax=Oop off=109}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000000030eabcd: nop
  0x00000000030eabce: nop
  0x00000000030eabcf: mov    0x2a8(%r15),%rax
  0x00000000030eabd6: movabs $0x0,%r10
  0x00000000030eabe0: mov    %r10,0x2a8(%r15)
  0x00000000030eabe7: movabs $0x0,%r10
  0x00000000030eabf1: mov    %r10,0x2b0(%r15)
  0x00000000030eabf8: add    $0x30,%rsp
  0x00000000030eabfc: pop    %rbp
  0x00000000030eabfd: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030eac02: hlt    
  0x00000000030eac03: hlt    
  0x00000000030eac04: hlt    
  0x00000000030eac05: hlt    
  0x00000000030eac06: hlt    
  0x00000000030eac07: hlt    
  0x00000000030eac08: hlt    
  0x00000000030eac09: hlt    
  0x00000000030eac0a: hlt    
  0x00000000030eac0b: hlt    
  0x00000000030eac0c: hlt    
  0x00000000030eac0d: hlt    
  0x00000000030eac0e: hlt    
  0x00000000030eac0f: hlt    
  0x00000000030eac10: hlt    
  0x00000000030eac11: hlt    
  0x00000000030eac12: hlt    
  0x00000000030eac13: hlt    
  0x00000000030eac14: hlt    
  0x00000000030eac15: hlt    
  0x00000000030eac16: hlt    
  0x00000000030eac17: hlt    
  0x00000000030eac18: hlt    
  0x00000000030eac19: hlt    
  0x00000000030eac1a: hlt    
  0x00000000030eac1b: hlt    
  0x00000000030eac1c: hlt    
  0x00000000030eac1d: hlt    
  0x00000000030eac1e: hlt    
  0x00000000030eac1f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030eac20: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030eac25: mov    %rsp,-0x28(%rsp)
  0x00000000030eac2a: sub    $0x80,%rsp
  0x00000000030eac31: mov    %rax,0x78(%rsp)
  0x00000000030eac36: mov    %rcx,0x70(%rsp)
  0x00000000030eac3b: mov    %rdx,0x68(%rsp)
  0x00000000030eac40: mov    %rbx,0x60(%rsp)
  0x00000000030eac45: mov    %rbp,0x50(%rsp)
  0x00000000030eac4a: mov    %rsi,0x48(%rsp)
  0x00000000030eac4f: mov    %rdi,0x40(%rsp)
  0x00000000030eac54: mov    %r8,0x38(%rsp)
  0x00000000030eac59: mov    %r9,0x30(%rsp)
  0x00000000030eac5e: mov    %r10,0x28(%rsp)
  0x00000000030eac63: mov    %r11,0x20(%rsp)
  0x00000000030eac68: mov    %r12,0x18(%rsp)
  0x00000000030eac6d: mov    %r13,0x10(%rsp)
  0x00000000030eac72: mov    %r14,0x8(%rsp)
  0x00000000030eac77: mov    %r15,(%rsp)
  0x00000000030eac7b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030eac85: movabs $0x30eac25,%rdx    ;   {internal_word}
  0x00000000030eac8f: mov    %rsp,%r8
  0x00000000030eac92: and    $0xfffffffffffffff0,%rsp
  0x00000000030eac96: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030eac9b: hlt    
[Deopt Handler Code]
  0x00000000030eac9c: movabs $0x30eac9c,%r10    ;   {section_word}
  0x00000000030eaca6: push   %r10
  0x00000000030eaca8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030eacad: hlt    
  0x00000000030eacae: hlt    
  0x00000000030eacaf: hlt    
<nmethod compile_id='50' compiler='C1' level='1' entry='0x00000000030eab60' size='856' address='0x00000000030eaa10' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='712' dependencies_offset='824' nul_chk_table_offset='832' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='4750' iicount='4750' stamp='12.057'/>
<make_not_entrant thread='9344' compile_id='36' compiler='C1' level='3' stamp='12.057'/>
Decoding compiled method 0x00000000030ecf90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x00000000030ed1a0: mov    %eax,-0x6000(%rsp)
  0x00000000030ed1a7: push   %rbp
  0x00000000030ed1a8: sub    $0xa0,%rsp
  0x00000000030ed1af: mov    %rdx,%r11
  0x00000000030ed1b2: movabs $0x173e9818,%rbx   ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed1bc: mov    0xdc(%rbx),%edx
  0x00000000030ed1c2: add    $0x8,%edx
  0x00000000030ed1c5: mov    %edx,0xdc(%rbx)
  0x00000000030ed1cb: movabs $0x172c4138,%rbx   ;   {metadata({method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed1d5: and    $0x1ff8,%edx
  0x00000000030ed1db: cmp    $0x0,%edx
  0x00000000030ed1de: je     0x00000000030eda41  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00000000030ed1e4: mov    %r9,%r13
  0x00000000030ed1e7: sub    %r8d,%r13d
  0x00000000030ed1ea: cmp    $0x0,%r13d
  0x00000000030ed1ee: movabs $0x173e9818,%rbx   ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed1f8: movabs $0x108,%rdx
  0x00000000030ed202: jge    0x00000000030ed212
  0x00000000030ed208: movabs $0x118,%rdx
  0x00000000030ed212: mov    (%rbx,%rdx,1),%rsi
  0x00000000030ed216: lea    0x1(%rsi),%rsi
  0x00000000030ed21a: mov    %rsi,(%rbx,%rdx,1)
  0x00000000030ed21e: jl     0x00000000030ed3e6  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00000000030ed224: mov    %r13,%rbx
  0x00000000030ed227: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x00000000030ed231: movslq %ebx,%rbx
  0x00000000030ed234: mov    %rbx,%rdi
  0x00000000030ed237: cmp    $0xffffff,%rbx
  0x00000000030ed23e: ja     0x00000000030eda58
  0x00000000030ed244: movabs $0x17,%rsi
  0x00000000030ed24e: lea    (%rsi,%rbx,2),%rsi
  0x00000000030ed252: and    $0xfffffffffffffff8,%rsi
  0x00000000030ed256: mov    0x60(%r15),%rax
  0x00000000030ed25a: lea    (%rax,%rsi,1),%rsi
  0x00000000030ed25e: cmp    0x70(%r15),%rsi
  0x00000000030ed262: ja     0x00000000030eda58
  0x00000000030ed268: mov    %rsi,0x60(%r15)
  0x00000000030ed26c: sub    %rax,%rsi
  0x00000000030ed26f: movq   $0x1,(%rax)
  0x00000000030ed276: mov    %rdx,%rcx
  0x00000000030ed279: shr    $0x3,%rcx
  0x00000000030ed27d: mov    %ecx,0x8(%rax)
  0x00000000030ed280: mov    %ebx,0xc(%rax)
  0x00000000030ed283: sub    $0x10,%rsi
  0x00000000030ed287: je     0x00000000030ed29e
  0x00000000030ed28d: xor    %rbx,%rbx
  0x00000000030ed290: shr    $0x3,%rsi
  0x00000000030ed294: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000030ed299: dec    %rsi
  0x00000000030ed29c: jne    0x00000000030ed294  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00000000030ed29e: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00000000030eda62
  0x00000000030ed2a2: sub    %r8d,%edx
  0x00000000030ed2a5: movabs $0x173e9818,%r9    ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed2af: addq   $0x1,0x208(%r9)
  0x00000000030ed2b7: movabs $0x17397da0,%r9    ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030ed2c1: mov    0xdc(%r9),%edi
  0x00000000030ed2c8: add    $0x8,%edi
  0x00000000030ed2cb: mov    %edi,0xdc(%r9)
  0x00000000030ed2d2: movabs $0x17284698,%r9    ;   {metadata({method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030ed2dc: and    $0x7ffff8,%edi
  0x00000000030ed2e2: cmp    $0x0,%edi
  0x00000000030ed2e5: je     0x00000000030eda67
  0x00000000030ed2eb: cmp    %r13d,%edx
  0x00000000030ed2ee: movabs $0x17397da0,%r9    ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030ed2f8: movabs $0x108,%rdi
  0x00000000030ed302: jg     0x00000000030ed312
  0x00000000030ed308: movabs $0x118,%rdi
  0x00000000030ed312: mov    (%r9,%rdi,1),%rsi
  0x00000000030ed316: lea    0x1(%rsi),%rsi
  0x00000000030ed31a: mov    %rsi,(%r9,%rdi,1)
  0x00000000030ed31e: jg     0x00000000030ed33d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000000030ed324: movabs $0x17397da0,%r9    ;   {metadata(method data for {method} {0x00000000172846a0} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030ed32e: incl   0x128(%r9)
  0x00000000030ed335: mov    %rdx,%rsi
  0x00000000030ed338: jmpq   0x00000000030ed340  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000000030ed33d: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000000030ed340: movabs $0x173e9818,%rdx   ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed34a: addq   $0x1,0x218(%rdx)
  0x00000000030ed352: mov    %r11,%rdx
  0x00000000030ed355: mov    %rax,%r9
  0x00000000030ed358: mov    $0x0,%edi
  0x00000000030ed35d: mov    %rax,0x70(%rsp)
  0x00000000030ed362: test   %r8d,%r8d
  0x00000000030ed365: jl     0x00000000030eda7e
  0x00000000030ed36b: lea    (%r8,%rsi,1),%rcx
  0x00000000030ed36f: cmp    0xc(%rdx),%ecx
  0x00000000030ed372: ja     0x00000000030eda7e
  0x00000000030ed378: lea    (%rdi,%rsi,1),%rcx
  0x00000000030ed37c: cmp    0xc(%r9),%ecx
  0x00000000030ed380: ja     0x00000000030eda7e
  0x00000000030ed386: test   %esi,%esi
  0x00000000030ed388: jl     0x00000000030eda7e
  0x00000000030ed38e: je     0x00000000030ed3d2
  0x00000000030ed394: movslq %r8d,%r8
  0x00000000030ed397: movslq %edi,%rdi
  0x00000000030ed39a: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000030ed39f: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000030ed3a4: mov    %rsi,%r8
  0x00000000030ed3a7: sub    $0x20,%rsp
  0x00000000030ed3ab: test   $0xf,%esp
  0x00000000030ed3b1: je     0x00000000030ed3c9
  0x00000000030ed3b7: sub    $0x8,%rsp
  0x00000000030ed3bb: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000030ed3c0: add    $0x8,%rsp
  0x00000000030ed3c4: jmpq   0x00000000030ed3ce
  0x00000000030ed3c9: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000030ed3ce: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x00000000030ed3d2: mov    0x70(%rsp),%rax
  0x00000000030ed3d7: add    $0xa0,%rsp
  0x00000000030ed3de: pop    %rbp
  0x00000000030ed3df: test   %eax,-0x28fd2e5(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030ed3e5: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x00000000030ed3e6: mov    %r9d,0x80(%rsp)
  0x00000000030ed3ee: xchg   %ax,%ax
  0x00000000030ed3f0: jmpq   0x00000000030eda98  ;   {no_reloc}
  0x00000000030ed3f5: add    %al,(%rax)
  0x00000000030ed3f7: add    %al,(%rax)
  0x00000000030ed3f9: add    %cl,-0x75(%rcx)
  0x00000000030ed3fc: rex.RXB (bad) 
  0x00000000030ed3fe: lea    0x20(%rax),%rdi
  0x00000000030ed402: cmp    0x70(%r15),%rdi
  0x00000000030ed406: ja     0x00000000030edaa2
  0x00000000030ed40c: mov    %rdi,0x60(%r15)
  0x00000000030ed410: mov    0xa8(%rdx),%rcx
  0x00000000030ed417: mov    %rcx,(%rax)
  0x00000000030ed41a: mov    %rdx,%rcx
  0x00000000030ed41d: shr    $0x3,%rcx
  0x00000000030ed421: mov    %ecx,0x8(%rax)
  0x00000000030ed424: xor    %rcx,%rcx
  0x00000000030ed427: mov    %ecx,0xc(%rax)
  0x00000000030ed42a: xor    %rcx,%rcx
  0x00000000030ed42d: mov    %rcx,0x10(%rax)
  0x00000000030ed431: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00000000030ed435: data16 xchg %ax,%ax
  0x00000000030ed438: jmpq   0x00000000030edabe  ;   {no_reloc}
  0x00000000030ed43d: add    %al,(%rax)
  0x00000000030ed43f: add    %al,(%rax)
  0x00000000030ed441: add    %cl,-0x77(%rax)
  0x00000000030ed444: test   %ah,(%rax,%rcx,4)
  0x00000000030ed447: add    %al,(%rax)
  0x00000000030ed449: add    %cl,-0x75(%rcx)
  0x00000000030ed44c: rex.RXB (bad) 
  0x00000000030ed44e: lea    0x18(%rax),%rdi
  0x00000000030ed452: cmp    0x70(%r15),%rdi
  0x00000000030ed456: ja     0x00000000030edac8
  0x00000000030ed45c: mov    %rdi,0x60(%r15)
  0x00000000030ed460: mov    0xa8(%rdx),%rcx
  0x00000000030ed467: mov    %rcx,(%rax)
  0x00000000030ed46a: mov    %rdx,%rcx
  0x00000000030ed46d: shr    $0x3,%rcx
  0x00000000030ed471: mov    %ecx,0x8(%rax)
  0x00000000030ed474: xor    %rcx,%rcx
  0x00000000030ed477: mov    %ecx,0xc(%rax)
  0x00000000030ed47a: xor    %rcx,%rcx
  0x00000000030ed47d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00000000030ed481: mov    %rax,%rbx
  0x00000000030ed484: movabs $0x173e9818,%rdx   ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed48e: addq   $0x1,0x128(%rdx)
  0x00000000030ed496: movabs $0x174ba310,%rbx   ;   {metadata(method data for {method} {0x00000000172270a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed4a0: mov    0xdc(%rbx),%edx
  0x00000000030ed4a6: add    $0x8,%edx
  0x00000000030ed4a9: mov    %edx,0xdc(%rbx)
  0x00000000030ed4af: movabs $0x172270a0,%rbx   ;   {metadata({method} {0x00000000172270a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed4b9: and    $0x7ffff8,%edx
  0x00000000030ed4bf: cmp    $0x0,%edx
  0x00000000030ed4c2: je     0x00000000030edad5
  0x00000000030ed4c8: mov    %rax,%rbx
  0x00000000030ed4cb: movabs $0x174ba310,%rdx   ;   {metadata(method data for {method} {0x00000000172270a8} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed4d5: addq   $0x1,0x108(%rdx)
  0x00000000030ed4dd: movabs $0x174ba440,%rbx   ;   {metadata(method data for {method} {0x0000000017223490} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030ed4e7: mov    0xdc(%rbx),%edx
  0x00000000030ed4ed: add    $0x8,%edx
  0x00000000030ed4f0: mov    %edx,0xdc(%rbx)
  0x00000000030ed4f6: movabs $0x17223488,%rbx   ;   {metadata({method} {0x0000000017223490} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030ed500: and    $0x7ffff8,%edx
  0x00000000030ed506: cmp    $0x0,%edx
  0x00000000030ed509: je     0x00000000030edaec
  0x00000000030ed50f: mov    %rax,%rbx
  0x00000000030ed512: movabs $0x174ba440,%rdx   ;   {metadata(method data for {method} {0x0000000017223490} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030ed51c: addq   $0x1,0x108(%rdx)
  0x00000000030ed524: movabs $0x172de480,%rbx   ;   {metadata(method data for {method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000030ed52e: mov    0xdc(%rbx),%edx
  0x00000000030ed534: add    $0x8,%edx
  0x00000000030ed537: mov    %edx,0xdc(%rbx)
  0x00000000030ed53d: movabs $0x171b0488,%rbx   ;   {metadata({method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000030ed547: and    $0x7ffff8,%edx
  0x00000000030ed54d: cmp    $0x0,%edx
  0x00000000030ed550: je     0x00000000030edb03
  0x00000000030ed556: mov    $0x10,%ebx
  0x00000000030ed55b: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x00000000030ed565: mov    %rax,%r13
  0x00000000030ed568: movslq %ebx,%rbx
  0x00000000030ed56b: mov    %rbx,%rdi
  0x00000000030ed56e: cmp    $0xffffff,%rbx
  0x00000000030ed575: ja     0x00000000030edb1a
  0x00000000030ed57b: movabs $0x17,%rsi
  0x00000000030ed585: lea    (%rsi,%rbx,2),%rsi
  0x00000000030ed589: and    $0xfffffffffffffff8,%rsi
  0x00000000030ed58d: mov    0x60(%r15),%rax
  0x00000000030ed591: lea    (%rax,%rsi,1),%rsi
  0x00000000030ed595: cmp    0x70(%r15),%rsi
  0x00000000030ed599: ja     0x00000000030edb1a
  0x00000000030ed59f: mov    %rsi,0x60(%r15)
  0x00000000030ed5a3: sub    %rax,%rsi
  0x00000000030ed5a6: movq   $0x1,(%rax)
  0x00000000030ed5ad: mov    %rdx,%rcx
  0x00000000030ed5b0: shr    $0x3,%rcx
  0x00000000030ed5b4: mov    %ecx,0x8(%rax)
  0x00000000030ed5b7: mov    %ebx,0xc(%rax)
  0x00000000030ed5ba: sub    $0x10,%rsi
  0x00000000030ed5be: je     0x00000000030ed5d5
  0x00000000030ed5c4: xor    %rbx,%rbx
  0x00000000030ed5c7: shr    $0x3,%rsi
  0x00000000030ed5cb: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000030ed5d0: dec    %rsi
  0x00000000030ed5d3: jne    0x00000000030ed5cb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00000000030ed5d5: mov    %rax,%r10
  0x00000000030ed5d8: mov    %r10d,0x10(%r13)
  0x00000000030ed5dc: mov    %r13,%rax
  0x00000000030ed5df: shr    $0x9,%rax
  0x00000000030ed5e3: movabs $0x11f87000,%rdx
  0x00000000030ed5ed: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00000000030ed5f1: mov    %r13,%rax
  0x00000000030ed5f4: movabs $0x173e9818,%rdx   ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed5fe: mov    0x8(%rax),%eax
  0x00000000030ed601: shl    $0x3,%rax
  0x00000000030ed605: cmp    0x140(%rdx),%rax
  0x00000000030ed60c: jne    0x00000000030ed61b
  0x00000000030ed60e: addq   $0x1,0x148(%rdx)
  0x00000000030ed616: jmpq   0x00000000030ed681
  0x00000000030ed61b: cmp    0x150(%rdx),%rax
  0x00000000030ed622: jne    0x00000000030ed631
  0x00000000030ed624: addq   $0x1,0x158(%rdx)
  0x00000000030ed62c: jmpq   0x00000000030ed681
  0x00000000030ed631: cmpq   $0x0,0x140(%rdx)
  0x00000000030ed63c: jne    0x00000000030ed655
  0x00000000030ed63e: mov    %rax,0x140(%rdx)
  0x00000000030ed645: movq   $0x1,0x148(%rdx)
  0x00000000030ed650: jmpq   0x00000000030ed681
  0x00000000030ed655: cmpq   $0x0,0x150(%rdx)
  0x00000000030ed660: jne    0x00000000030ed679
  0x00000000030ed662: mov    %rax,0x150(%rdx)
  0x00000000030ed669: movq   $0x1,0x158(%rdx)
  0x00000000030ed674: jmpq   0x00000000030ed681
  0x00000000030ed679: addq   $0x1,0x138(%rdx)
  0x00000000030ed681: movabs $0x174bab90,%rdx   ;   {metadata(method data for {method} {0x0000000017227880} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed68b: mov    0xdc(%rdx),%esi
  0x00000000030ed691: add    $0x8,%esi
  0x00000000030ed694: mov    %esi,0xdc(%rdx)
  0x00000000030ed69a: movabs $0x17227878,%rdx   ;   {metadata({method} {0x0000000017227880} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed6a4: and    $0x7ffff8,%esi
  0x00000000030ed6aa: cmp    $0x0,%esi
  0x00000000030ed6ad: je     0x00000000030edb24
  0x00000000030ed6b3: mov    %r13,%rax
  0x00000000030ed6b6: movabs $0x174bab90,%rdx   ;   {metadata(method data for {method} {0x0000000017227880} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed6c0: addq   $0x1,0x108(%rdx)
  0x00000000030ed6c8: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x00000000030ed6cb: mov    %r13,0x78(%rsp)
  0x00000000030ed6d0: nop
  0x00000000030ed6d1: nop
  0x00000000030ed6d2: nop
  0x00000000030ed6d3: nop
  0x00000000030ed6d4: nop
  0x00000000030ed6d5: nop
  0x00000000030ed6d6: nop
  0x00000000030ed6d7: callq  0x00000000030161a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000030ed6dc: mov    0x78(%rsp),%rax
  0x00000000030ed6e1: movabs $0x173e9818,%r8    ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed6eb: mov    0x8(%rax),%eax
  0x00000000030ed6ee: shl    $0x3,%rax
  0x00000000030ed6f2: cmp    0x170(%r8),%rax
  0x00000000030ed6f9: jne    0x00000000030ed708
  0x00000000030ed6fb: addq   $0x1,0x178(%r8)
  0x00000000030ed703: jmpq   0x00000000030ed76e
  0x00000000030ed708: cmp    0x180(%r8),%rax
  0x00000000030ed70f: jne    0x00000000030ed71e
  0x00000000030ed711: addq   $0x1,0x188(%r8)
  0x00000000030ed719: jmpq   0x00000000030ed76e
  0x00000000030ed71e: cmpq   $0x0,0x170(%r8)
  0x00000000030ed729: jne    0x00000000030ed742
  0x00000000030ed72b: mov    %rax,0x170(%r8)
  0x00000000030ed732: movq   $0x1,0x178(%r8)
  0x00000000030ed73d: jmpq   0x00000000030ed76e
  0x00000000030ed742: cmpq   $0x0,0x180(%r8)
  0x00000000030ed74d: jne    0x00000000030ed766
  0x00000000030ed74f: mov    %rax,0x180(%r8)
  0x00000000030ed756: movq   $0x1,0x188(%r8)
  0x00000000030ed761: jmpq   0x00000000030ed76e
  0x00000000030ed766: addq   $0x1,0x168(%r8)
  0x00000000030ed76e: movabs $0x174012d8,%r8    ;   {metadata(method data for {method} {0x00000000172273c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed778: mov    0xdc(%r8),%edx
  0x00000000030ed77f: add    $0x8,%edx
  0x00000000030ed782: mov    %edx,0xdc(%r8)
  0x00000000030ed789: movabs $0x172273b8,%r8    ;   {metadata({method} {0x00000000172273c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed793: and    $0x7ffff8,%edx
  0x00000000030ed799: cmp    $0x0,%edx
  0x00000000030ed79c: je     0x00000000030edb3b
  0x00000000030ed7a2: mov    0x78(%rsp),%rax
  0x00000000030ed7a7: movabs $0x174012d8,%r8    ;   {metadata(method data for {method} {0x00000000172273c0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed7b1: addq   $0x1,0x108(%r8)
  0x00000000030ed7b9: movabs $0xd5f69cb0,%r8    ;   {oop(&quot; &gt; &quot;)}
  0x00000000030ed7c3: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x00000000030ed7c8: nop
  0x00000000030ed7c9: nop
  0x00000000030ed7ca: nop
  0x00000000030ed7cb: nop
  0x00000000030ed7cc: nop
  0x00000000030ed7cd: nop
  0x00000000030ed7ce: nop
  0x00000000030ed7cf: callq  0x00000000030161a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000030ed7d4: mov    0x78(%rsp),%rax
  0x00000000030ed7d9: movabs $0x173e9818,%r8    ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed7e3: mov    0x8(%rax),%eax
  0x00000000030ed7e6: shl    $0x3,%rax
  0x00000000030ed7ea: cmp    0x1a0(%r8),%rax
  0x00000000030ed7f1: jne    0x00000000030ed800
  0x00000000030ed7f3: addq   $0x1,0x1a8(%r8)
  0x00000000030ed7fb: jmpq   0x00000000030ed866
  0x00000000030ed800: cmp    0x1b0(%r8),%rax
  0x00000000030ed807: jne    0x00000000030ed816
  0x00000000030ed809: addq   $0x1,0x1b8(%r8)
  0x00000000030ed811: jmpq   0x00000000030ed866
  0x00000000030ed816: cmpq   $0x0,0x1a0(%r8)
  0x00000000030ed821: jne    0x00000000030ed83a
  0x00000000030ed823: mov    %rax,0x1a0(%r8)
  0x00000000030ed82a: movq   $0x1,0x1a8(%r8)
  0x00000000030ed835: jmpq   0x00000000030ed866
  0x00000000030ed83a: cmpq   $0x0,0x1b0(%r8)
  0x00000000030ed845: jne    0x00000000030ed85e
  0x00000000030ed847: mov    %rax,0x1b0(%r8)
  0x00000000030ed84e: movq   $0x1,0x1b8(%r8)
  0x00000000030ed859: jmpq   0x00000000030ed866
  0x00000000030ed85e: addq   $0x1,0x198(%r8)
  0x00000000030ed866: movabs $0x174bab90,%r8    ;   {metadata(method data for {method} {0x0000000017227880} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed870: mov    0xdc(%r8),%edx
  0x00000000030ed877: add    $0x8,%edx
  0x00000000030ed87a: mov    %edx,0xdc(%r8)
  0x00000000030ed881: movabs $0x17227878,%r8    ;   {metadata({method} {0x0000000017227880} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed88b: and    $0x7ffff8,%edx
  0x00000000030ed891: cmp    $0x0,%edx
  0x00000000030ed894: je     0x00000000030edb52
  0x00000000030ed89a: mov    0x78(%rsp),%rax
  0x00000000030ed89f: movabs $0x174bab90,%r8    ;   {metadata(method data for {method} {0x0000000017227880} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed8a9: addq   $0x1,0x108(%r8)
  0x00000000030ed8b1: mov    0x80(%rsp),%r8d
  0x00000000030ed8b9: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x00000000030ed8be: nop
  0x00000000030ed8bf: callq  0x00000000030161a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000030ed8c4: mov    0x78(%rsp),%rax
  0x00000000030ed8c9: movabs $0x173e9818,%rdx   ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030ed8d3: mov    0x8(%rax),%eax
  0x00000000030ed8d6: shl    $0x3,%rax
  0x00000000030ed8da: cmp    0x1d0(%rdx),%rax
  0x00000000030ed8e1: jne    0x00000000030ed8f0
  0x00000000030ed8e3: addq   $0x1,0x1d8(%rdx)
  0x00000000030ed8eb: jmpq   0x00000000030ed956
  0x00000000030ed8f0: cmp    0x1e0(%rdx),%rax
  0x00000000030ed8f7: jne    0x00000000030ed906
  0x00000000030ed8f9: addq   $0x1,0x1e8(%rdx)
  0x00000000030ed901: jmpq   0x00000000030ed956
  0x00000000030ed906: cmpq   $0x0,0x1d0(%rdx)
  0x00000000030ed911: jne    0x00000000030ed92a
  0x00000000030ed913: mov    %rax,0x1d0(%rdx)
  0x00000000030ed91a: movq   $0x1,0x1d8(%rdx)
  0x00000000030ed925: jmpq   0x00000000030ed956
  0x00000000030ed92a: cmpq   $0x0,0x1e0(%rdx)
  0x00000000030ed935: jne    0x00000000030ed94e
  0x00000000030ed937: mov    %rax,0x1e0(%rdx)
  0x00000000030ed93e: movq   $0x1,0x1e8(%rdx)
  0x00000000030ed949: jmpq   0x00000000030ed956
  0x00000000030ed94e: addq   $0x1,0x1c8(%rdx)
  0x00000000030ed956: movabs $0x174bba98,%rdx   ;   {metadata(method data for {method} {0x0000000017228770} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed960: mov    0xdc(%rdx),%esi
  0x00000000030ed966: add    $0x8,%esi
  0x00000000030ed969: mov    %esi,0xdc(%rdx)
  0x00000000030ed96f: movabs $0x17228768,%rdx   ;   {metadata({method} {0x0000000017228770} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed979: and    $0x7ffff8,%esi
  0x00000000030ed97f: cmp    $0x0,%esi
  0x00000000030ed982: je     0x00000000030edb69
  0x00000000030ed988: movabs $0x1000016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000030ed992: mov    0x60(%r15),%rax
  0x00000000030ed996: lea    0x18(%rax),%rdi
  0x00000000030ed99a: cmp    0x70(%r15),%rdi
  0x00000000030ed99e: ja     0x00000000030edb80
  0x00000000030ed9a4: mov    %rdi,0x60(%r15)
  0x00000000030ed9a8: mov    0xa8(%rdx),%rcx
  0x00000000030ed9af: mov    %rcx,(%rax)
  0x00000000030ed9b2: mov    %rdx,%rcx
  0x00000000030ed9b5: shr    $0x3,%rcx
  0x00000000030ed9b9: mov    %ecx,0x8(%rax)
  0x00000000030ed9bc: xor    %rcx,%rcx
  0x00000000030ed9bf: mov    %ecx,0xc(%rax)
  0x00000000030ed9c2: xor    %rcx,%rcx
  0x00000000030ed9c5: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00000000030ed9c9: mov    0x78(%rsp),%r8
  0x00000000030ed9ce: mov    0x10(%r8),%r9d     ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00000000030ed9d2: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00000000030ed9d6: mov    %rax,%r8
  0x00000000030ed9d9: movabs $0x174bba98,%rdx   ;   {metadata(method data for {method} {0x0000000017228770} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030ed9e3: addq   $0x1,0x108(%rdx)
  0x00000000030ed9eb: mov    %r9,%r8
  0x00000000030ed9ee: mov    $0x0,%r9d
  0x00000000030ed9f4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00000000030ed9f7: mov    %rax,0x90(%rsp)
  0x00000000030ed9ff: callq  0x00000000030161a0  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000030eda04: mov    0x88(%rsp),%rax
  0x00000000030eda0c: movabs $0x173e9818,%r8    ;   {metadata(method data for {method} {0x00000000172c4140} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000030eda16: addq   $0x1,0x1f8(%r8)
  0x00000000030eda1e: mov    0x90(%rsp),%r8
  0x00000000030eda26: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00000000030eda2e: nop
  0x00000000030eda2f: callq  0x00000000030161a0  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000030eda34: mov    0x88(%rsp),%rax
  0x00000000030eda3c: jmpq   0x00000000030edbb8
  0x00000000030eda41: mov    %rbx,0x8(%rsp)
  0x00000000030eda46: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030eda4e: callq  0x00000000030d3220  ; OopMap{r11=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00000000030eda53: jmpq   0x00000000030ed1e4
  0x00000000030eda58: callq  0x00000000030cfe00  ; OopMap{r11=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00000000030eda5d: jmpq   0x00000000030ed29e
  0x00000000030eda62: callq  0x0000000003041280  ; OopMap{r11=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00000000030eda67: mov    %r9,0x8(%rsp)
  0x00000000030eda6c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030eda74: callq  0x00000000030d3220  ; OopMap{r11=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00000000030eda79: jmpq   0x00000000030ed2eb
  0x00000000030eda7e: nop
  0x00000000030eda7f: callq  0x0000000003016620  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00000000030eda84: jmpq   0x00000000030ed3d2
  0x00000000030eda89: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030eda93: mov    $0xa050f00,%eax
  0x00000000030eda98: callq  0x00000000030d2160  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00000000030eda9d: jmpq   0x00000000030ed3f0
  0x00000000030edaa2: mov    %rdx,%rdx
  0x00000000030edaa5: callq  0x0000000003040940  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edaaa: jmpq   0x00000000030ed435
  0x00000000030edaaf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030edab9: mov    $0xa050f00,%eax
  0x00000000030edabe: callq  0x00000000030d2160  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edac3: jmpq   0x00000000030ed438
  0x00000000030edac8: mov    %rdx,%rdx
  0x00000000030edacb: callq  0x0000000003040940  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edad0: jmpq   0x00000000030ed481
  0x00000000030edad5: mov    %rbx,0x8(%rsp)
  0x00000000030edada: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030edae2: callq  0x00000000030d3220  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edae7: jmpq   0x00000000030ed4c8
  0x00000000030edaec: mov    %rbx,0x8(%rsp)
  0x00000000030edaf1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030edaf9: callq  0x00000000030d3220  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edafe: jmpq   0x00000000030ed50f
  0x00000000030edb03: mov    %rbx,0x8(%rsp)
  0x00000000030edb08: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030edb10: callq  0x00000000030d3220  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edb15: jmpq   0x00000000030ed556
  0x00000000030edb1a: callq  0x00000000030cfe00  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edb1f: jmpq   0x00000000030ed5d5
  0x00000000030edb24: mov    %rdx,0x8(%rsp)
  0x00000000030edb29: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030edb31: callq  0x00000000030d3220  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edb36: jmpq   0x00000000030ed6b3
  0x00000000030edb3b: mov    %r8,0x8(%rsp)
  0x00000000030edb40: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030edb48: callq  0x00000000030d3220  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edb4d: jmpq   0x00000000030ed7a2
  0x00000000030edb52: mov    %r8,0x8(%rsp)
  0x00000000030edb57: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030edb5f: callq  0x00000000030d3220  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edb64: jmpq   0x00000000030ed89a
  0x00000000030edb69: mov    %rdx,0x8(%rsp)
  0x00000000030edb6e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030edb76: callq  0x00000000030d3220  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edb7b: jmpq   0x00000000030ed988
  0x00000000030edb80: mov    %rdx,%rdx
  0x00000000030edb83: callq  0x0000000003040940  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00000000030edb88: jmpq   0x00000000030ed9c9
  0x00000000030edb8d: nop
  0x00000000030edb8e: nop
  0x00000000030edb8f: mov    0x2a8(%r15),%rax
  0x00000000030edb96: movabs $0x0,%r10
  0x00000000030edba0: mov    %r10,0x2a8(%r15)
  0x00000000030edba7: movabs $0x0,%r10
  0x00000000030edbb1: mov    %r10,0x2b0(%r15)
  0x00000000030edbb8: add    $0xa0,%rsp
  0x00000000030edbbf: pop    %rbp
  0x00000000030edbc0: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030edbc5: hlt    
  0x00000000030edbc6: hlt    
  0x00000000030edbc7: hlt    
  0x00000000030edbc8: hlt    
  0x00000000030edbc9: hlt    
  0x00000000030edbca: hlt    
  0x00000000030edbcb: hlt    
  0x00000000030edbcc: hlt    
  0x00000000030edbcd: hlt    
  0x00000000030edbce: hlt    
  0x00000000030edbcf: hlt    
  0x00000000030edbd0: hlt    
  0x00000000030edbd1: hlt    
  0x00000000030edbd2: hlt    
  0x00000000030edbd3: hlt    
  0x00000000030edbd4: hlt    
  0x00000000030edbd5: hlt    
  0x00000000030edbd6: hlt    
  0x00000000030edbd7: hlt    
  0x00000000030edbd8: hlt    
  0x00000000030edbd9: hlt    
  0x00000000030edbda: hlt    
  0x00000000030edbdb: hlt    
  0x00000000030edbdc: hlt    
  0x00000000030edbdd: hlt    
  0x00000000030edbde: hlt    
  0x00000000030edbdf: hlt    
[Stub Code]
  0x00000000030edbe0: nop                       ;   {no_reloc}
  0x00000000030edbe1: nop
  0x00000000030edbe2: nop
  0x00000000030edbe3: nop
  0x00000000030edbe4: nop
  0x00000000030edbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030edbef: jmpq   0x00000000030edbef  ;   {runtime_call}
  0x00000000030edbf4: nop
  0x00000000030edbf5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030edbff: jmpq   0x00000000030edbff  ;   {runtime_call}
  0x00000000030edc04: nop
  0x00000000030edc05: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030edc0f: jmpq   0x00000000030edc0f  ;   {runtime_call}
  0x00000000030edc14: nop
  0x00000000030edc15: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030edc1f: jmpq   0x00000000030edc1f  ;   {runtime_call}
  0x00000000030edc24: nop
  0x00000000030edc25: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030edc2f: jmpq   0x00000000030edc2f  ;   {runtime_call}
  0x00000000030edc34: nop
  0x00000000030edc35: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030edc3f: jmpq   0x00000000030edc3f  ;   {runtime_call}
[Exception Handler]
  0x00000000030edc44: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030edc49: mov    %rsp,-0x28(%rsp)
  0x00000000030edc4e: sub    $0x80,%rsp
  0x00000000030edc55: mov    %rax,0x78(%rsp)
  0x00000000030edc5a: mov    %rcx,0x70(%rsp)
  0x00000000030edc5f: mov    %rdx,0x68(%rsp)
  0x00000000030edc64: mov    %rbx,0x60(%rsp)
  0x00000000030edc69: mov    %rbp,0x50(%rsp)
  0x00000000030edc6e: mov    %rsi,0x48(%rsp)
  0x00000000030edc73: mov    %rdi,0x40(%rsp)
  0x00000000030edc78: mov    %r8,0x38(%rsp)
  0x00000000030edc7d: mov    %r9,0x30(%rsp)
  0x00000000030edc82: mov    %r10,0x28(%rsp)
  0x00000000030edc87: mov    %r11,0x20(%rsp)
  0x00000000030edc8c: mov    %r12,0x18(%rsp)
  0x00000000030edc91: mov    %r13,0x10(%rsp)
  0x00000000030edc96: mov    %r14,0x8(%rsp)
  0x00000000030edc9b: mov    %r15,(%rsp)
  0x00000000030edc9f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030edca9: movabs $0x30edc49,%rdx    ;   {internal_word}
  0x00000000030edcb3: mov    %rsp,%r8
  0x00000000030edcb6: and    $0xfffffffffffffff0,%rsp
  0x00000000030edcba: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030edcbf: hlt    
[Deopt Handler Code]
  0x00000000030edcc0: movabs $0x30edcc0,%r10    ;   {section_word}
  0x00000000030edcca: push   %r10
  0x00000000030edccc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030edcd1: hlt    
  0x00000000030edcd2: hlt    
  0x00000000030edcd3: hlt    
  0x00000000030edcd4: hlt    
  0x00000000030edcd5: hlt    
  0x00000000030edcd6: hlt    
  0x00000000030edcd7: hlt    
<nmethod compile_id='39' compiler='C1' level='3' entry='0x00000000030ed1a0' size='4856' address='0x00000000030ecf90' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1729' iicount='1729' stamp='13.016'/>
<sweeper state='finished' traversals='1'  total_blobs='298' nmethods='34' adapters='178' free_code_cache='250496896' stamp='13.016'/>
Decoding compiled method 0x00000000030e9e50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x00000000030ea000: mov    0x8(%rdx),%r10d
  0x00000000030ea004: shl    $0x3,%r10
  0x00000000030ea008: cmp    %rax,%r10
  0x00000000030ea00b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030ea011: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030ea01c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030ea020: mov    %eax,-0x6000(%rsp)
  0x00000000030ea027: push   %rbp
  0x00000000030ea028: sub    $0x60,%rsp
  0x00000000030ea02c: movabs $0x173e9a90,%rsi   ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea036: mov    0xdc(%rsi),%ebx
  0x00000000030ea03c: add    $0x8,%ebx
  0x00000000030ea03f: mov    %ebx,0xdc(%rsi)
  0x00000000030ea045: movabs $0x171b3140,%rsi   ;   {metadata({method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea04f: and    $0x1ff8,%ebx
  0x00000000030ea055: cmp    $0x0,%ebx
  0x00000000030ea058: je     0x00000000030ea276  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x00000000030ea05e: mov    %rdx,%rsi
  0x00000000030ea061: movabs $0x173e9a90,%rbx   ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea06b: addq   $0x1,0x108(%rbx)
  0x00000000030ea073: movabs $0x172de480,%rsi   ;   {metadata(method data for {method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000030ea07d: mov    0xdc(%rsi),%ebx
  0x00000000030ea083: add    $0x8,%ebx
  0x00000000030ea086: mov    %ebx,0xdc(%rsi)
  0x00000000030ea08c: movabs $0x171b0488,%rsi   ;   {metadata({method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000030ea096: and    $0x7ffff8,%ebx
  0x00000000030ea09c: cmp    $0x0,%ebx
  0x00000000030ea09f: je     0x00000000030ea28d
  0x00000000030ea0a5: cmp    $0x0,%r9d
  0x00000000030ea0a9: movabs $0x173e9a90,%rsi   ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea0b3: movabs $0x118,%rbx
  0x00000000030ea0bd: jge    0x00000000030ea0cd
  0x00000000030ea0c3: movabs $0x128,%rbx
  0x00000000030ea0cd: mov    (%rsi,%rbx,1),%rax
  0x00000000030ea0d1: lea    0x1(%rax),%rax
  0x00000000030ea0d5: mov    %rax,(%rsi,%rbx,1)
  0x00000000030ea0d9: jl     0x00000000030ea236  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00000000030ea0df: cmp    $0x0,%edi
  0x00000000030ea0e2: movabs $0x173e9a90,%rsi   ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea0ec: movabs $0x148,%rbx
  0x00000000030ea0f6: jge    0x00000000030ea106
  0x00000000030ea0fc: movabs $0x158,%rbx
  0x00000000030ea106: mov    (%rsi,%rbx,1),%rax
  0x00000000030ea10a: lea    0x1(%rax),%rax
  0x00000000030ea10e: mov    %rax,(%rsi,%rbx,1)
  0x00000000030ea112: jl     0x00000000030ea1f6  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x00000000030ea118: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@32 (line 198)
                                                ; implicit exception: dispatches to 0x00000000030ea2a4
  0x00000000030ea11c: sub    %edi,%esi
  0x00000000030ea11e: cmp    %esi,%r9d
  0x00000000030ea121: movabs $0x173e9a90,%rsi   ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea12b: movabs $0x178,%rbx
  0x00000000030ea135: jle    0x00000000030ea145
  0x00000000030ea13b: movabs $0x188,%rbx
  0x00000000030ea145: mov    (%rsi,%rbx,1),%rax
  0x00000000030ea149: lea    0x1(%rax),%rax
  0x00000000030ea14d: mov    %rax,(%rsi,%rbx,1)
  0x00000000030ea151: jg     0x00000000030ea1ae  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@35 (line 198)

  0x00000000030ea157: mov    %rdx,0x38(%rsp)
  0x00000000030ea15c: movabs $0x173e9a90,%rsi   ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea166: addq   $0x1,0x1a8(%rsi)
  0x00000000030ea16e: add    %r9d,%edi
  0x00000000030ea171: mov    %r8,%rdx
  0x00000000030ea174: mov    %r9,%r8
  0x00000000030ea177: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@55 (line 201)

  0x00000000030ea17a: nop
  0x00000000030ea17b: nop
  0x00000000030ea17c: nop
  0x00000000030ea17d: nop
  0x00000000030ea17e: nop
  0x00000000030ea17f: callq  0x0000000003016620  ; OopMap{[56]=Oop off=388}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@55 (line 201)
                                                ;   {static_call}
  0x00000000030ea184: mov    0x38(%rsp),%rdx
  0x00000000030ea189: mov    %rax,%r10
  0x00000000030ea18c: mov    %r10d,0xc(%rdx)
  0x00000000030ea190: shr    $0x9,%rdx
  0x00000000030ea194: movabs $0x11f87000,%rax
  0x00000000030ea19e: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@58 (line 201)

  0x00000000030ea1a2: add    $0x60,%rsp
  0x00000000030ea1a6: pop    %rbp
  0x00000000030ea1a7: test   %eax,-0x28fa0ad(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030ea1ad: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@61 (line 202)

  0x00000000030ea1ae: xchg   %ax,%ax
  0x00000000030ea1b0: jmpq   0x00000000030ea2b8  ;   {no_reloc}
  0x00000000030ea1b5: add    %al,(%rax)
  0x00000000030ea1b7: add    %al,(%rax)
  0x00000000030ea1b9: add    %ch,%cl
  0x00000000030ea1bb: add    (%rcx),%eax
  0x00000000030ea1bd: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@38 (line 199)

  0x00000000030ea1bf: mov    %rax,%r8
  0x00000000030ea1c2: movabs $0x173e9a90,%rdx   ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea1cc: addq   $0x1,0x198(%rdx)
  0x00000000030ea1d4: add    %r9d,%edi
  0x00000000030ea1d7: mov    %rdi,%r8
  0x00000000030ea1da: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@45 (line 199)

  0x00000000030ea1dd: mov    %rax,0x40(%rsp)
  0x00000000030ea1e2: nop
  0x00000000030ea1e3: nop
  0x00000000030ea1e4: nop
  0x00000000030ea1e5: nop
  0x00000000030ea1e6: nop
  0x00000000030ea1e7: callq  0x00000000030161a0  ; OopMap{[64]=Oop off=492}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@45 (line 199)
                                                ;   {optimized virtual_call}
  0x00000000030ea1ec: mov    0x40(%rsp),%rax
  0x00000000030ea1f1: jmpq   0x00000000030ea346  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@48 (line 199)

  0x00000000030ea1f6: xchg   %ax,%ax
  0x00000000030ea1f8: jmpq   0x00000000030ea2de  ;   {no_reloc}
  0x00000000030ea1fd: add    %al,(%rax)
  0x00000000030ea1ff: add    %al,(%rax)
  0x00000000030ea201: add    %ch,%cl
  0x00000000030ea203: loope  0x00000000030ea205
  0x00000000030ea205: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@21 (line 195)

  0x00000000030ea207: mov    %rax,%r8
  0x00000000030ea20a: movabs $0x173e9a90,%rdx   ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea214: addq   $0x1,0x168(%rdx)
  0x00000000030ea21c: mov    %rdi,%r8
  0x00000000030ea21f: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@26 (line 195)

  0x00000000030ea222: mov    %rax,0x48(%rsp)
  0x00000000030ea227: callq  0x00000000030161a0  ; OopMap{[72]=Oop off=556}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@26 (line 195)
                                                ;   {optimized virtual_call}
  0x00000000030ea22c: mov    0x48(%rsp),%rax
  0x00000000030ea231: jmpq   0x00000000030ea346  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@29 (line 195)

  0x00000000030ea236: xchg   %ax,%ax
  0x00000000030ea238: jmpq   0x00000000030ea304  ;   {no_reloc}
  0x00000000030ea23d: add    %al,(%rax)
  0x00000000030ea23f: add    %al,(%rax)
  0x00000000030ea241: add    %ch,%cl
  0x00000000030ea243: movl   $0x8b4c0000,(%rax)  ;*new
                                                ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x00000000030ea249: rorb   $0x90,-0x46(%rax)  ;   {metadata(method data for {method} {0x00000000171b3148} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000030ea24d: (bad)  
  0x00000000030ea24e: ds (bad) 
  0x00000000030ea250: add    %al,(%rax)
  0x00000000030ea252: add    %al,(%rax)
  0x00000000030ea254: addq   $0x1,0x138(%rdx)
  0x00000000030ea25c: mov    %r9,%r8
  0x00000000030ea25f: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x00000000030ea262: mov    %rax,0x50(%rsp)
  0x00000000030ea267: callq  0x00000000030161a0  ; OopMap{[80]=Oop off=620}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x00000000030ea26c: mov    0x50(%rsp),%rax
  0x00000000030ea271: jmpq   0x00000000030ea346
  0x00000000030ea276: mov    %rsi,0x8(%rsp)
  0x00000000030ea27b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030ea283: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=648}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x00000000030ea288: jmpq   0x00000000030ea05e
  0x00000000030ea28d: mov    %rsi,0x8(%rsp)
  0x00000000030ea292: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030ea29a: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop off=671}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x00000000030ea29f: jmpq   0x00000000030ea0a5
  0x00000000030ea2a4: callq  0x0000000003041280  ; OopMap{rdx=Oop r8=Oop off=681}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@32 (line 198)
                                                ;   {runtime_call}
  0x00000000030ea2a9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030ea2b3: mov    $0xa050f00,%eax
  0x00000000030ea2b8: callq  0x00000000030d2160  ; OopMap{off=701}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@38 (line 199)
                                                ;   {runtime_call}
  0x00000000030ea2bd: jmpq   0x00000000030ea1b0
  0x00000000030ea2c2: mov    %rdx,%rdx
  0x00000000030ea2c5: callq  0x0000000003040d60  ; OopMap{off=714}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@38 (line 199)
                                                ;   {runtime_call}
  0x00000000030ea2ca: jmpq   0x00000000030ea1bf
  0x00000000030ea2cf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030ea2d9: mov    $0xa050f00,%eax
  0x00000000030ea2de: callq  0x00000000030d2160  ; OopMap{off=739}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@21 (line 195)
                                                ;   {runtime_call}
  0x00000000030ea2e3: jmpq   0x00000000030ea1f8
  0x00000000030ea2e8: mov    %rdx,%rdx
  0x00000000030ea2eb: callq  0x0000000003040d60  ; OopMap{off=752}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@21 (line 195)
                                                ;   {runtime_call}
  0x00000000030ea2f0: jmpq   0x00000000030ea207
  0x00000000030ea2f5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030ea2ff: mov    $0xa050f00,%eax
  0x00000000030ea304: callq  0x00000000030d2160  ; OopMap{off=777}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00000000030ea309: jmpq   0x00000000030ea238
  0x00000000030ea30e: mov    %rdx,%rdx
  0x00000000030ea311: callq  0x0000000003040d60  ; OopMap{off=790}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00000000030ea316: jmpq   0x00000000030ea247
  0x00000000030ea31b: nop
  0x00000000030ea31c: nop
  0x00000000030ea31d: mov    0x2a8(%r15),%rax
  0x00000000030ea324: movabs $0x0,%r10
  0x00000000030ea32e: mov    %r10,0x2a8(%r15)
  0x00000000030ea335: movabs $0x0,%r10
  0x00000000030ea33f: mov    %r10,0x2b0(%r15)
  0x00000000030ea346: add    $0x60,%rsp
  0x00000000030ea34a: pop    %rbp
  0x00000000030ea34b: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030ea350: hlt    
  0x00000000030ea351: hlt    
  0x00000000030ea352: hlt    
  0x00000000030ea353: hlt    
  0x00000000030ea354: hlt    
  0x00000000030ea355: hlt    
  0x00000000030ea356: hlt    
  0x00000000030ea357: hlt    
  0x00000000030ea358: hlt    
  0x00000000030ea359: hlt    
  0x00000000030ea35a: hlt    
  0x00000000030ea35b: hlt    
  0x00000000030ea35c: hlt    
  0x00000000030ea35d: hlt    
  0x00000000030ea35e: hlt    
  0x00000000030ea35f: hlt    
[Stub Code]
  0x00000000030ea360: nop                       ;   {no_reloc}
  0x00000000030ea361: nop
  0x00000000030ea362: nop
  0x00000000030ea363: nop
  0x00000000030ea364: nop
  0x00000000030ea365: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030ea36f: jmpq   0x00000000030ea36f  ;   {runtime_call}
  0x00000000030ea374: nop
  0x00000000030ea375: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030ea37f: jmpq   0x00000000030ea37f  ;   {runtime_call}
  0x00000000030ea384: nop
  0x00000000030ea385: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030ea38f: jmpq   0x00000000030ea38f  ;   {runtime_call}
  0x00000000030ea394: nop
  0x00000000030ea395: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030ea39f: jmpq   0x00000000030ea39f  ;   {runtime_call}
[Exception Handler]
  0x00000000030ea3a4: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030ea3a9: mov    %rsp,-0x28(%rsp)
  0x00000000030ea3ae: sub    $0x80,%rsp
  0x00000000030ea3b5: mov    %rax,0x78(%rsp)
  0x00000000030ea3ba: mov    %rcx,0x70(%rsp)
  0x00000000030ea3bf: mov    %rdx,0x68(%rsp)
  0x00000000030ea3c4: mov    %rbx,0x60(%rsp)
  0x00000000030ea3c9: mov    %rbp,0x50(%rsp)
  0x00000000030ea3ce: mov    %rsi,0x48(%rsp)
  0x00000000030ea3d3: mov    %rdi,0x40(%rsp)
  0x00000000030ea3d8: mov    %r8,0x38(%rsp)
  0x00000000030ea3dd: mov    %r9,0x30(%rsp)
  0x00000000030ea3e2: mov    %r10,0x28(%rsp)
  0x00000000030ea3e7: mov    %r11,0x20(%rsp)
  0x00000000030ea3ec: mov    %r12,0x18(%rsp)
  0x00000000030ea3f1: mov    %r13,0x10(%rsp)
  0x00000000030ea3f6: mov    %r14,0x8(%rsp)
  0x00000000030ea3fb: mov    %r15,(%rsp)
  0x00000000030ea3ff: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030ea409: movabs $0x30ea3a9,%rdx    ;   {internal_word}
  0x00000000030ea413: mov    %rsp,%r8
  0x00000000030ea416: and    $0xfffffffffffffff0,%rsp
  0x00000000030ea41a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030ea41f: hlt    
[Deopt Handler Code]
  0x00000000030ea420: movabs $0x30ea420,%r10    ;   {section_word}
  0x00000000030ea42a: push   %r10
  0x00000000030ea42c: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030ea431: hlt    
  0x00000000030ea432: hlt    
  0x00000000030ea433: hlt    
  0x00000000030ea434: hlt    
  0x00000000030ea435: hlt    
  0x00000000030ea436: hlt    
  0x00000000030ea437: hlt    
<nmethod compile_id='37' compiler='C1' level='3' entry='0x00000000030ea000' size='2288' address='0x00000000030e9e50' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1528' scopes_pcs_offset='1768' dependencies_offset='2264' nul_chk_table_offset='2272' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='1604' iicount='1604' stamp='13.397'/>
Decoding compiled method 0x00000000030ec250:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000017366ab8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000000030ec3a0: mov    %eax,-0x6000(%rsp)
  0x00000000030ec3a7: push   %rbp
  0x00000000030ec3a8: sub    $0x40,%rsp
  0x00000000030ec3ac: movabs $0x174c9178,%rcx   ;   {metadata(method data for {method} {0x0000000017366ab8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000030ec3b6: mov    0xdc(%rcx),%eax
  0x00000000030ec3bc: add    $0x8,%eax
  0x00000000030ec3bf: mov    %eax,0xdc(%rcx)
  0x00000000030ec3c5: movabs $0x17366ab0,%rcx   ;   {metadata({method} {0x0000000017366ab8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000030ec3cf: and    $0x1ff8,%eax
  0x00000000030ec3d5: cmp    $0x0,%eax
  0x00000000030ec3d8: je     0x00000000030ec4e6  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x00000000030ec3de: movslq %r8d,%r8
  0x00000000030ec3e1: mov    $0x2,%ecx
  0x00000000030ec3e6: shl    %cl,%r8
  0x00000000030ec3e9: movabs $0x10,%r10
  0x00000000030ec3f3: add    %r10,%r8
  0x00000000030ec3f6: mov    (%rdx,%r8,1),%eax
  0x00000000030ec3fa: cmp    $0x0,%rax
  0x00000000030ec3fe: jne    0x00000000030ec419
  0x00000000030ec400: movabs $0x174c9178,%rdi   ;   {metadata(method data for {method} {0x0000000017366ab8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000030ec40a: orl    $0x100,0x130(%rdi)
  0x00000000030ec414: jmpq   0x00000000030ec4da
  0x00000000030ec419: movabs $0x1000366f0,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x00000000030ec423: mov    0x8(%rax),%edi
  0x00000000030ec426: shl    $0x3,%rdi
  0x00000000030ec42a: cmp    0x30(%rdi),%rbx
  0x00000000030ec42e: jne    0x00000000030ec4be
  0x00000000030ec434: movabs $0x174c9178,%rdi   ;   {metadata(method data for {method} {0x0000000017366ab8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000030ec43e: mov    0x8(%rax),%ebx
  0x00000000030ec441: shl    $0x3,%rbx
  0x00000000030ec445: cmp    0x140(%rdi),%rbx
  0x00000000030ec44c: jne    0x00000000030ec45b
  0x00000000030ec44e: addq   $0x1,0x148(%rdi)
  0x00000000030ec456: jmpq   0x00000000030ec4da
  0x00000000030ec45b: cmp    0x150(%rdi),%rbx
  0x00000000030ec462: jne    0x00000000030ec471
  0x00000000030ec464: addq   $0x1,0x158(%rdi)
  0x00000000030ec46c: jmpq   0x00000000030ec4da
  0x00000000030ec471: cmpq   $0x0,0x140(%rdi)
  0x00000000030ec47c: jne    0x00000000030ec495
  0x00000000030ec47e: mov    %rbx,0x140(%rdi)
  0x00000000030ec485: movq   $0x1,0x148(%rdi)
  0x00000000030ec490: jmpq   0x00000000030ec4da
  0x00000000030ec495: cmpq   $0x0,0x150(%rdi)
  0x00000000030ec4a0: jne    0x00000000030ec4b9
  0x00000000030ec4a2: mov    %rbx,0x150(%rdi)
  0x00000000030ec4a9: movq   $0x1,0x158(%rdi)
  0x00000000030ec4b4: jmpq   0x00000000030ec4da
  0x00000000030ec4b9: jmpq   0x00000000030ec4da
  0x00000000030ec4be: movabs $0x174c9178,%rdi   ;   {metadata(method data for {method} {0x0000000017366ab8} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x00000000030ec4c8: subq   $0x1,0x138(%rdi)
  0x00000000030ec4d0: jmpq   0x00000000030ec4fd
  0x00000000030ec4d5: jmpq   0x00000000030ec4da  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x00000000030ec4da: add    $0x40,%rsp
  0x00000000030ec4de: pop    %rbp
  0x00000000030ec4df: test   %eax,-0x28fc3e5(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030ec4e5: retq   
  0x00000000030ec4e6: mov    %rcx,0x8(%rsp)
  0x00000000030ec4eb: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030ec4f3: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=344}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x00000000030ec4f8: jmpq   0x00000000030ec3de
  0x00000000030ec4fd: mov    %rax,(%rsp)
  0x00000000030ec501: callq  0x00000000030d0d40  ; OopMap{off=358}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x00000000030ec506: nop
  0x00000000030ec507: nop
  0x00000000030ec508: mov    0x2a8(%r15),%rax
  0x00000000030ec50f: movabs $0x0,%r10
  0x00000000030ec519: mov    %r10,0x2a8(%r15)
  0x00000000030ec520: movabs $0x0,%r10
  0x00000000030ec52a: mov    %r10,0x2b0(%r15)
  0x00000000030ec531: add    $0x40,%rsp
  0x00000000030ec535: pop    %rbp
  0x00000000030ec536: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030ec53b: hlt    
  0x00000000030ec53c: hlt    
  0x00000000030ec53d: hlt    
  0x00000000030ec53e: hlt    
  0x00000000030ec53f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030ec540: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030ec545: mov    %rsp,-0x28(%rsp)
  0x00000000030ec54a: sub    $0x80,%rsp
  0x00000000030ec551: mov    %rax,0x78(%rsp)
  0x00000000030ec556: mov    %rcx,0x70(%rsp)
  0x00000000030ec55b: mov    %rdx,0x68(%rsp)
  0x00000000030ec560: mov    %rbx,0x60(%rsp)
  0x00000000030ec565: mov    %rbp,0x50(%rsp)
  0x00000000030ec56a: mov    %rsi,0x48(%rsp)
  0x00000000030ec56f: mov    %rdi,0x40(%rsp)
  0x00000000030ec574: mov    %r8,0x38(%rsp)
  0x00000000030ec579: mov    %r9,0x30(%rsp)
  0x00000000030ec57e: mov    %r10,0x28(%rsp)
  0x00000000030ec583: mov    %r11,0x20(%rsp)
  0x00000000030ec588: mov    %r12,0x18(%rsp)
  0x00000000030ec58d: mov    %r13,0x10(%rsp)
  0x00000000030ec592: mov    %r14,0x8(%rsp)
  0x00000000030ec597: mov    %r15,(%rsp)
  0x00000000030ec59b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030ec5a5: movabs $0x30ec545,%rdx    ;   {internal_word}
  0x00000000030ec5af: mov    %rsp,%r8
  0x00000000030ec5b2: and    $0xfffffffffffffff0,%rsp
  0x00000000030ec5b6: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030ec5bb: hlt    
[Deopt Handler Code]
  0x00000000030ec5bc: movabs $0x30ec5bc,%r10    ;   {section_word}
  0x00000000030ec5c6: push   %r10
  0x00000000030ec5c8: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030ec5cd: hlt    
  0x00000000030ec5ce: hlt    
  0x00000000030ec5cf: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x00000000030ec3a0' size='1048' address='0x00000000030ec250' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='944' dependencies_offset='1040' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='406' iicount='406' stamp='13.552'/>
<writer thread='1104'/>
<task_queued compile_id='52' method='sun/instrument/InstrumentationImpl transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B' bytes='38' count='256' iicount='256' level='3' stamp='13.552' comment='tiered' hot_count='256'/>
<task_queued compile_id='53' method='sun/instrument/TransformerManager transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B' bytes='98' count='256' iicount='256' level='3' stamp='13.552' comment='tiered' hot_count='256'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030ebb10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001739bff8} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;
  # this:     rdx:rdx   = &apos;sun/instrument/InstrumentationImpl&apos;
  # parm0:    r8:r8     = &apos;java/lang/ClassLoader&apos;
  # parm1:    r9:r9     = &apos;java/lang/String&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Class&apos;
  # parm3:    rsi:rsi   = &apos;java/security/ProtectionDomain&apos;
  # parm4:    rcx:rcx   = &apos;[B&apos;
  # parm5:    [sp+0x50]   = boolean  (sp of caller)
  0x00000000030ebc80: mov    0x8(%rdx),%r10d
  0x00000000030ebc84: shl    $0x3,%r10
  0x00000000030ebc88: cmp    %rax,%r10
  0x00000000030ebc8b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030ebc91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030ebc9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030ebca0: mov    %eax,-0x6000(%rsp)
  0x00000000030ebca7: push   %rbp
  0x00000000030ebca8: sub    $0x40,%rsp
  0x00000000030ebcac: movabs $0x174ceb48,%rax   ;   {metadata(method data for {method} {0x000000001739bff8} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x00000000030ebcb6: mov    0xdc(%rax),%ebx
  0x00000000030ebcbc: add    $0x8,%ebx
  0x00000000030ebcbf: mov    %ebx,0xdc(%rax)
  0x00000000030ebcc5: movabs $0x1739bff0,%rax   ;   {metadata({method} {0x000000001739bff8} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x00000000030ebccf: and    $0x1ff8,%ebx
  0x00000000030ebcd5: cmp    $0x0,%ebx
  0x00000000030ebcd8: je     0x00000000030ebdc8  ;*iload
                                                ; - sun.instrument.InstrumentationImpl::transform@0 (line 422)

  0x00000000030ebcde: mov    0x50(%rsp),%eax
  0x00000000030ebce2: cmp    $0x0,%eax
  0x00000000030ebce5: movabs $0x174ceb48,%rax   ;   {metadata(method data for {method} {0x000000001739bff8} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x00000000030ebcef: movabs $0x108,%rbx
  0x00000000030ebcf9: je     0x00000000030ebd09
  0x00000000030ebcff: movabs $0x118,%rbx
  0x00000000030ebd09: mov    (%rax,%rbx,1),%r11
  0x00000000030ebd0d: lea    0x1(%r11),%r11
  0x00000000030ebd11: mov    %r11,(%rax,%rbx,1)
  0x00000000030ebd15: je     0x00000000030ebd33  ;*ifeq
                                                ; - sun.instrument.InstrumentationImpl::transform@2 (line 422)

  0x00000000030ebd1b: mov    0x1c(%rdx),%eax    ;*getfield mRetransfomableTransformerManager
                                                ; - sun.instrument.InstrumentationImpl::transform@6 (line 422)

  0x00000000030ebd1e: movabs $0x174ceb48,%rdx   ;   {metadata(method data for {method} {0x000000001739bff8} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x00000000030ebd28: incl   0x128(%rdx)
  0x00000000030ebd2e: jmpq   0x00000000030ebd36  ;*goto
                                                ; - sun.instrument.InstrumentationImpl::transform@9 (line 422)

  0x00000000030ebd33: mov    0x18(%rdx),%eax    ;*getfield mTransformerManager
                                                ; - sun.instrument.InstrumentationImpl::transform@13 (line 422)

  0x00000000030ebd36: cmp    $0x0,%rax
  0x00000000030ebd3a: movabs $0x174ceb48,%rdx   ;   {metadata(method data for {method} {0x000000001739bff8} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x00000000030ebd44: movabs $0x140,%rbx
  0x00000000030ebd4e: jne    0x00000000030ebd5e
  0x00000000030ebd54: movabs $0x150,%rbx
  0x00000000030ebd5e: mov    (%rdx,%rbx,1),%r11
  0x00000000030ebd62: lea    0x1(%r11),%r11
  0x00000000030ebd66: mov    %r11,(%rdx,%rbx,1)
  0x00000000030ebd6a: jne    0x00000000030ebd86  ;*ifnonnull
                                                ; - sun.instrument.InstrumentationImpl::transform@20 (line 425)

  0x00000000030ebd70: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030ebd7a: add    $0x40,%rsp
  0x00000000030ebd7e: pop    %rbp
  0x00000000030ebd7f: test   %eax,-0x28fbc85(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030ebd85: retq                      ;*areturn
                                                ; - sun.instrument.InstrumentationImpl::transform@24 (line 426)

  0x00000000030ebd86: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000030ebddf
  0x00000000030ebd89: mov    %rax,%rdx
  0x00000000030ebd8c: movabs $0x174ceb48,%rbx   ;   {metadata(method data for {method} {0x000000001739bff8} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x00000000030ebd96: movabs $0x10003c348,%r10  ;   {metadata(&apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ebda0: mov    %r10,0x168(%rbx)
  0x00000000030ebda7: addq   $0x1,0x170(%rbx)
  0x00000000030ebdaf: mov    %rax,%rdx          ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)

  0x00000000030ebdb2: nop
  0x00000000030ebdb3: nop
  0x00000000030ebdb4: nop
  0x00000000030ebdb5: nop
  0x00000000030ebdb6: nop
  0x00000000030ebdb7: callq  0x00000000030161a0  ; OopMap{off=316}
                                                ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)
                                                ;   {optimized virtual_call}
  0x00000000030ebdbc: add    $0x40,%rsp
  0x00000000030ebdc0: pop    %rbp
  0x00000000030ebdc1: test   %eax,-0x28fbcc7(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030ebdc7: retq   
  0x00000000030ebdc8: mov    %rax,0x8(%rsp)
  0x00000000030ebdcd: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030ebdd5: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop r9=Oop rdi=Oop rsi=Oop rcx=Oop off=346}
                                                ;*synchronization entry
                                                ; - sun.instrument.InstrumentationImpl::transform@-1 (line 422)
                                                ;   {runtime_call}
  0x00000000030ebdda: jmpq   0x00000000030ebcde
  0x00000000030ebddf: callq  0x0000000003041280  ; OopMap{rax=Oop rcx=Oop rsi=Oop rdi=Oop r9=Oop r8=Oop off=356}
                                                ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)
                                                ;   {runtime_call}
  0x00000000030ebde4: nop
  0x00000000030ebde5: nop
  0x00000000030ebde6: mov    0x2a8(%r15),%rax
  0x00000000030ebded: movabs $0x0,%r10
  0x00000000030ebdf7: mov    %r10,0x2a8(%r15)
  0x00000000030ebdfe: movabs $0x0,%r10
  0x00000000030ebe08: mov    %r10,0x2b0(%r15)
  0x00000000030ebe0f: add    $0x40,%rsp
  0x00000000030ebe13: pop    %rbp
  0x00000000030ebe14: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030ebe19: hlt    
  0x00000000030ebe1a: hlt    
  0x00000000030ebe1b: hlt    
  0x00000000030ebe1c: hlt    
  0x00000000030ebe1d: hlt    
  0x00000000030ebe1e: hlt    
  0x00000000030ebe1f: hlt    
[Stub Code]
  0x00000000030ebe20: nop                       ;   {no_reloc}
  0x00000000030ebe21: nop
  0x00000000030ebe22: nop
  0x00000000030ebe23: nop
  0x00000000030ebe24: nop
  0x00000000030ebe25: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030ebe2f: jmpq   0x00000000030ebe2f  ;   {runtime_call}
[Exception Handler]
  0x00000000030ebe34: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030ebe39: mov    %rsp,-0x28(%rsp)
  0x00000000030ebe3e: sub    $0x80,%rsp
  0x00000000030ebe45: mov    %rax,0x78(%rsp)
  0x00000000030ebe4a: mov    %rcx,0x70(%rsp)
  0x00000000030ebe4f: mov    %rdx,0x68(%rsp)
  0x00000000030ebe54: mov    %rbx,0x60(%rsp)
  0x00000000030ebe59: mov    %rbp,0x50(%rsp)
  0x00000000030ebe5e: mov    %rsi,0x48(%rsp)
  0x00000000030ebe63: mov    %rdi,0x40(%rsp)
  0x00000000030ebe68: mov    %r8,0x38(%rsp)
  0x00000000030ebe6d: mov    %r9,0x30(%rsp)
  0x00000000030ebe72: mov    %r10,0x28(%rsp)
  0x00000000030ebe77: mov    %r11,0x20(%rsp)
  0x00000000030ebe7c: mov    %r12,0x18(%rsp)
  0x00000000030ebe81: mov    %r13,0x10(%rsp)
  0x00000000030ebe86: mov    %r14,0x8(%rsp)
  0x00000000030ebe8b: mov    %r15,(%rsp)
  0x00000000030ebe8f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030ebe99: movabs $0x30ebe39,%rdx    ;   {internal_word}
  0x00000000030ebea3: mov    %rsp,%r8
  0x00000000030ebea6: and    $0xfffffffffffffff0,%rsp
  0x00000000030ebeaa: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030ebeaf: hlt    
[Deopt Handler Code]
  0x00000000030ebeb0: movabs $0x30ebeb0,%r10    ;   {section_word}
  0x00000000030ebeba: push   %r10
  0x00000000030ebebc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030ebec1: hlt    
  0x00000000030ebec2: hlt    
  0x00000000030ebec3: hlt    
  0x00000000030ebec4: hlt    
  0x00000000030ebec5: hlt    
  0x00000000030ebec6: hlt    
  0x00000000030ebec7: hlt    
<nmethod compile_id='52' compiler='C1' level='3' entry='0x00000000030ebc80' size='1312' address='0x00000000030ebb10' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='976' scopes_pcs_offset='1080' dependencies_offset='1288' nul_chk_table_offset='1296' method='sun/instrument/InstrumentationImpl transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B' bytes='38' count='260' iicount='260' stamp='13.752'/>
Decoding compiled method 0x00000000030ee2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;
  # this:     rdx:rdx   = &apos;sun/instrument/TransformerManager&apos;
  # parm0:    r8:r8     = &apos;java/lang/ClassLoader&apos;
  # parm1:    r9:r9     = &apos;java/lang/String&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Class&apos;
  # parm3:    rsi:rsi   = &apos;java/security/ProtectionDomain&apos;
  # parm4:    rcx:rcx   = &apos;[B&apos;
  #           [sp+0xa0]  (sp of caller)
  0x00000000030ee460: mov    0x8(%rdx),%r10d
  0x00000000030ee464: shl    $0x3,%r10
  0x00000000030ee468: cmp    %rax,%r10
  0x00000000030ee46b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030ee471: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030ee47c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030ee480: mov    %eax,-0x6000(%rsp)
  0x00000000030ee487: push   %rbp
  0x00000000030ee488: sub    $0x90,%rsp
  0x00000000030ee48f: mov    %r8,0x50(%rsp)
  0x00000000030ee494: mov    %r9,0x58(%rsp)
  0x00000000030ee499: mov    %rdi,0x60(%rsp)
  0x00000000030ee49e: mov    %rsi,0x48(%rsp)
  0x00000000030ee4a3: movabs $0x174cfb38,%rbx   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee4ad: mov    0xdc(%rbx),%eax
  0x00000000030ee4b3: add    $0x8,%eax
  0x00000000030ee4b6: mov    %eax,0xdc(%rbx)
  0x00000000030ee4bc: movabs $0x1739d270,%rbx   ;   {metadata({method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee4c6: and    $0x1ff8,%eax
  0x00000000030ee4cc: cmp    $0x0,%eax
  0x00000000030ee4cf: je     0x00000000030ee817  ;*iconst_0
                                                ; - sun.instrument.TransformerManager::transform@0 (line 175)

  0x00000000030ee4d5: mov    %rdx,%rbx
  0x00000000030ee4d8: movabs $0x174cfb38,%rax   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee4e2: addq   $0x1,0x108(%rax)
  0x00000000030ee4ea: mov    0x10(%rdx),%ebx    ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)
                                                ; - sun.instrument.TransformerManager::transform@4 (line 177)

  0x00000000030ee4ed: mov    %rbx,0x78(%rsp)
  0x00000000030ee4f2: mov    $0x0,%eax
  0x00000000030ee4f7: mov    $0x0,%r11d         ;*iload
                                                ; - sun.instrument.TransformerManager::transform@16 (line 182)

  0x00000000030ee4fd: mov    %rcx,0x68(%rsp)
  0x00000000030ee502: mov    %r11d,0x70(%rsp)
  0x00000000030ee507: nop
  0x00000000030ee508: mov    0xc(%rbx),%edx     ;*arraylength
                                                ; - sun.instrument.TransformerManager::transform@20 (line 182)
                                                ; implicit exception: dispatches to 0x00000000030ee82e
  0x00000000030ee50b: cmp    %edx,%eax
  0x00000000030ee50d: movabs $0x174cfb38,%rdx   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee517: movabs $0x118,%r13
  0x00000000030ee521: jge    0x00000000030ee531
  0x00000000030ee527: movabs $0x128,%r13
  0x00000000030ee531: mov    (%rdx,%r13,1),%r14
  0x00000000030ee535: lea    0x1(%r14),%r14
  0x00000000030ee539: mov    %r14,(%rdx,%r13,1)
  0x00000000030ee53d: jge    0x00000000030ee7a2  ;*if_icmpge
                                                ; - sun.instrument.TransformerManager::transform@21 (line 182)

  0x00000000030ee543: movslq %eax,%rdx
  0x00000000030ee546: mov    0x10(%rbx,%rdx,4),%edx  ;*aaload
                                                ; - sun.instrument.TransformerManager::transform@28 (line 183)

  0x00000000030ee54a: cmp    (%rdx),%rax        ;*invokevirtual transformer
                                                ; - sun.instrument.TransformerManager::transform@33 (line 184)
                                                ; implicit exception: dispatches to 0x00000000030ee833
  0x00000000030ee54d: mov    %rdx,%r13
  0x00000000030ee550: movabs $0x174cfb38,%r14   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee55a: mov    0x8(%r13),%r13d
  0x00000000030ee55e: shl    $0x3,%r13
  0x00000000030ee562: cmp    0x140(%r14),%r13
  0x00000000030ee569: jne    0x00000000030ee578
  0x00000000030ee56b: addq   $0x1,0x148(%r14)
  0x00000000030ee573: jmpq   0x00000000030ee5de
  0x00000000030ee578: cmp    0x150(%r14),%r13
  0x00000000030ee57f: jne    0x00000000030ee58e
  0x00000000030ee581: addq   $0x1,0x158(%r14)
  0x00000000030ee589: jmpq   0x00000000030ee5de
  0x00000000030ee58e: cmpq   $0x0,0x140(%r14)
  0x00000000030ee599: jne    0x00000000030ee5b2
  0x00000000030ee59b: mov    %r13,0x140(%r14)
  0x00000000030ee5a2: movq   $0x1,0x148(%r14)
  0x00000000030ee5ad: jmpq   0x00000000030ee5de
  0x00000000030ee5b2: cmpq   $0x0,0x150(%r14)
  0x00000000030ee5bd: jne    0x00000000030ee5d6
  0x00000000030ee5bf: mov    %r13,0x150(%r14)
  0x00000000030ee5c6: movq   $0x1,0x158(%r14)
  0x00000000030ee5d1: jmpq   0x00000000030ee5de
  0x00000000030ee5d6: addq   $0x1,0x138(%r14)
  0x00000000030ee5de: mov    %eax,0x74(%rsp)
  0x00000000030ee5e2: nop
  0x00000000030ee5e3: nop
  0x00000000030ee5e4: nop
  0x00000000030ee5e5: movabs $0xffffffffffffffff,%rax
  0x00000000030ee5ef: callq  0x00000000030163e0  ; OopMap{[104]=Oop [72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop off=404}
                                                ;*invokevirtual transformer
                                                ; - sun.instrument.TransformerManager::transform@33 (line 184)
                                                ;   {virtual_call}
  0x00000000030ee5f4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000030ee838
  0x00000000030ee5f7: mov    %rax,%r8
  0x00000000030ee5fa: movabs $0x174cfb38,%r9    ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee604: mov    0x8(%r8),%r8d
  0x00000000030ee608: shl    $0x3,%r8
  0x00000000030ee60c: cmp    0x170(%r9),%r8
  0x00000000030ee613: jne    0x00000000030ee622
  0x00000000030ee615: addq   $0x1,0x178(%r9)
  0x00000000030ee61d: jmpq   0x00000000030ee688
  0x00000000030ee622: cmp    0x180(%r9),%r8
  0x00000000030ee629: jne    0x00000000030ee638
  0x00000000030ee62b: addq   $0x1,0x188(%r9)
  0x00000000030ee633: jmpq   0x00000000030ee688
  0x00000000030ee638: cmpq   $0x0,0x170(%r9)
  0x00000000030ee643: jne    0x00000000030ee65c
  0x00000000030ee645: mov    %r8,0x170(%r9)
  0x00000000030ee64c: movq   $0x1,0x178(%r9)
  0x00000000030ee657: jmpq   0x00000000030ee688
  0x00000000030ee65c: cmpq   $0x0,0x180(%r9)
  0x00000000030ee667: jne    0x00000000030ee680
  0x00000000030ee669: mov    %r8,0x180(%r9)
  0x00000000030ee670: movq   $0x1,0x188(%r9)
  0x00000000030ee67b: jmpq   0x00000000030ee688
  0x00000000030ee680: addq   $0x1,0x168(%r9)
  0x00000000030ee688: mov    0x50(%rsp),%r8
  0x00000000030ee68d: mov    0x58(%rsp),%r9
  0x00000000030ee692: mov    0x60(%rsp),%rdi
  0x00000000030ee697: mov    0x48(%rsp),%rsi
  0x00000000030ee69c: mov    0x68(%rsp),%rcx
  0x00000000030ee6a1: mov    %rax,%rdx          ;*invokeinterface transform
                                                ; - sun.instrument.TransformerManager::transform@50 (line 188)

  0x00000000030ee6a4: nop
  0x00000000030ee6a5: movabs $0xffffffffffffffff,%rax
  0x00000000030ee6af: callq  0x00000000030163e0  ; OopMap{[104]=Oop [72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop off=596}
                                                ;*invokeinterface transform
                                                ; - sun.instrument.TransformerManager::transform@50 (line 188)
                                                ;   {virtual_call}
  0x00000000030ee6b4: movabs $0x174cfb38,%rsi   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee6be: incl   0x198(%rsi)
  0x00000000030ee6c4: jmpq   0x00000000030ee6ee  ;*goto
                                                ; - sun.instrument.TransformerManager::transform@57 (line 197)

  0x00000000030ee6c9: mov    0x2a8(%r15),%rax
  0x00000000030ee6d0: xor    %r10,%r10
  0x00000000030ee6d3: mov    %r10,0x2a8(%r15)
  0x00000000030ee6da: xor    %r10,%r10
  0x00000000030ee6dd: mov    %r10,0x2b0(%r15)
  0x00000000030ee6e4: movabs $0x0,%rax          ;*aload
                                                ; - sun.instrument.TransformerManager::transform@62 (line 199)
                                                ;   {oop(NULL)}
  0x00000000030ee6ee: cmp    $0x0,%rax
  0x00000000030ee6f2: movabs $0x174cfb38,%rsi   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee6fc: movabs $0x1b0,%rdi
  0x00000000030ee706: je     0x00000000030ee716
  0x00000000030ee70c: movabs $0x1c0,%rdi
  0x00000000030ee716: mov    (%rsi,%rdi,1),%rbx
  0x00000000030ee71a: lea    0x1(%rbx),%rbx
  0x00000000030ee71e: mov    %rbx,(%rsi,%rdi,1)
  0x00000000030ee722: jne    0x00000000030ee737  ;*ifnull
                                                ; - sun.instrument.TransformerManager::transform@64 (line 199)

  0x00000000030ee728: mov    0x68(%rsp),%rcx
  0x00000000030ee72d: mov    0x70(%rsp),%r11d
  0x00000000030ee732: jmpq   0x00000000030ee740
  0x00000000030ee737: mov    %rax,%rcx
  0x00000000030ee73a: mov    $0x1,%r11d         ;*iinc
                                                ; - sun.instrument.TransformerManager::transform@74 (line 182)

  0x00000000030ee740: mov    0x74(%rsp),%eax
  0x00000000030ee744: inc    %eax
  0x00000000030ee746: movabs $0x174cfb38,%rsi   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee750: mov    0xe0(%rsi),%edi
  0x00000000030ee756: add    $0x8,%edi
  0x00000000030ee759: mov    %edi,0xe0(%rsi)
  0x00000000030ee75f: movabs $0x1739d270,%rsi   ;   {metadata({method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee769: and    $0xfff8,%edi
  0x00000000030ee76f: cmp    $0x0,%edi
  0x00000000030ee772: je     0x00000000030ee83d  ; OopMap{[72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop rcx=Oop off=792}
                                                ;*goto
                                                ; - sun.instrument.TransformerManager::transform@77 (line 182)

  0x00000000030ee778: test   %eax,-0x28fe67e(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030ee77e: movabs $0x174cfb38,%rsi   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee788: incl   0x1d0(%rsi)
  0x00000000030ee78e: mov    %rcx,0x68(%rsp)
  0x00000000030ee793: mov    %r11d,0x70(%rsp)
  0x00000000030ee798: mov    0x78(%rsp),%rbx
  0x00000000030ee79d: jmpq   0x00000000030ee508  ;*goto
                                                ; - sun.instrument.TransformerManager::transform@77 (line 182)

  0x00000000030ee7a2: mov    0x68(%rsp),%rcx
  0x00000000030ee7a7: mov    0x70(%rsp),%r11d
  0x00000000030ee7ac: cmp    $0x0,%r11d
  0x00000000030ee7b0: movabs $0x174cfb38,%rax   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee7ba: movabs $0x1e8,%rsi
  0x00000000030ee7c4: je     0x00000000030ee7d4
  0x00000000030ee7ca: movabs $0x1f8,%rsi
  0x00000000030ee7d4: mov    (%rax,%rsi,1),%rdi
  0x00000000030ee7d8: lea    0x1(%rdi),%rdi
  0x00000000030ee7dc: mov    %rdi,(%rax,%rsi,1)
  0x00000000030ee7e0: je     0x00000000030ee7fb  ;*ifeq
                                                ; - sun.instrument.TransformerManager::transform@82 (line 208)

  0x00000000030ee7e6: movabs $0x174cfb38,%rax   ;   {metadata(method data for {method} {0x000000001739d278} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B&apos; in &apos;sun/instrument/TransformerManager&apos;)}
  0x00000000030ee7f0: incl   0x208(%rax)
  0x00000000030ee7f6: jmpq   0x00000000030ee805  ;*goto
                                                ; - sun.instrument.TransformerManager::transform@89 (line 209)

  0x00000000030ee7fb: movabs $0x0,%rcx          ;*aload
                                                ; - sun.instrument.TransformerManager::transform@95 (line 215)
                                                ;   {oop(NULL)}
  0x00000000030ee805: mov    %rcx,%rax
  0x00000000030ee808: add    $0x90,%rsp
  0x00000000030ee80f: pop    %rbp
  0x00000000030ee810: test   %eax,-0x28fe716(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030ee816: retq   
  0x00000000030ee817: mov    %rbx,0x8(%rsp)
  0x00000000030ee81c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030ee824: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop [80]=Oop r9=Oop [88]=Oop rdi=Oop [96]=Oop rsi=Oop [72]=Oop rcx=Oop off=969}
                                                ;*synchronization entry
                                                ; - sun.instrument.TransformerManager::transform@-1 (line 175)
                                                ;   {runtime_call}
  0x00000000030ee829: jmpq   0x00000000030ee4d5
  0x00000000030ee82e: callq  0x0000000003041280  ; OopMap{rbx=Oop [120]=Oop [80]=Oop [104]=Oop [72]=Oop [96]=Oop [88]=Oop off=979}
                                                ;*arraylength
                                                ; - sun.instrument.TransformerManager::transform@20 (line 182)
                                                ;   {runtime_call}
  0x00000000030ee833: callq  0x0000000003041280  ; OopMap{rbx=Oop [120]=Oop [72]=Oop [96]=Oop [88]=Oop [80]=Oop [104]=Oop rdx=Oop off=984}
                                                ;*invokevirtual transformer
                                                ; - sun.instrument.TransformerManager::transform@33 (line 184)
                                                ;   {runtime_call}
  0x00000000030ee838: callq  0x0000000003041280  ; OopMap{[104]=Oop [72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop rax=Oop off=989}
                                                ;*invokeinterface transform
                                                ; - sun.instrument.TransformerManager::transform@50 (line 188)
                                                ;   {runtime_call}
  0x00000000030ee83d: mov    %rsi,0x8(%rsp)
  0x00000000030ee842: movq   $0x4d,(%rsp)
  0x00000000030ee84a: callq  0x00000000030d3220  ; OopMap{[72]=Oop [96]=Oop [88]=Oop [80]=Oop [120]=Oop rcx=Oop off=1007}
                                                ;*goto
                                                ; - sun.instrument.TransformerManager::transform@77 (line 182)
                                                ;   {runtime_call}
  0x00000000030ee84f: jmpq   0x00000000030ee778
  0x00000000030ee854: nop
  0x00000000030ee855: nop
  0x00000000030ee856: mov    0x2a8(%r15),%rax
  0x00000000030ee85d: movabs $0x0,%r10
  0x00000000030ee867: mov    %r10,0x2a8(%r15)
  0x00000000030ee86e: movabs $0x0,%r10
  0x00000000030ee878: mov    %r10,0x2b0(%r15)
  0x00000000030ee87f: add    $0x90,%rsp
  0x00000000030ee886: pop    %rbp
  0x00000000030ee887: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030ee88c: hlt    
  0x00000000030ee88d: hlt    
  0x00000000030ee88e: hlt    
  0x00000000030ee88f: hlt    
  0x00000000030ee890: hlt    
  0x00000000030ee891: hlt    
  0x00000000030ee892: hlt    
  0x00000000030ee893: hlt    
  0x00000000030ee894: hlt    
  0x00000000030ee895: hlt    
  0x00000000030ee896: hlt    
  0x00000000030ee897: hlt    
  0x00000000030ee898: hlt    
  0x00000000030ee899: hlt    
  0x00000000030ee89a: hlt    
  0x00000000030ee89b: hlt    
  0x00000000030ee89c: hlt    
  0x00000000030ee89d: hlt    
  0x00000000030ee89e: hlt    
  0x00000000030ee89f: hlt    
[Stub Code]
  0x00000000030ee8a0: nop                       ;   {no_reloc}
  0x00000000030ee8a1: nop
  0x00000000030ee8a2: nop
  0x00000000030ee8a3: nop
  0x00000000030ee8a4: nop
  0x00000000030ee8a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030ee8af: jmpq   0x00000000030ee8af  ;   {runtime_call}
  0x00000000030ee8b4: nop
  0x00000000030ee8b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030ee8bf: jmpq   0x00000000030ee8bf  ;   {runtime_call}
[Exception Handler]
  0x00000000030ee8c4: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030ee8c9: mov    %rsp,-0x28(%rsp)
  0x00000000030ee8ce: sub    $0x80,%rsp
  0x00000000030ee8d5: mov    %rax,0x78(%rsp)
  0x00000000030ee8da: mov    %rcx,0x70(%rsp)
  0x00000000030ee8df: mov    %rdx,0x68(%rsp)
  0x00000000030ee8e4: mov    %rbx,0x60(%rsp)
  0x00000000030ee8e9: mov    %rbp,0x50(%rsp)
  0x00000000030ee8ee: mov    %rsi,0x48(%rsp)
  0x00000000030ee8f3: mov    %rdi,0x40(%rsp)
  0x00000000030ee8f8: mov    %r8,0x38(%rsp)
  0x00000000030ee8fd: mov    %r9,0x30(%rsp)
  0x00000000030ee902: mov    %r10,0x28(%rsp)
  0x00000000030ee907: mov    %r11,0x20(%rsp)
  0x00000000030ee90c: mov    %r12,0x18(%rsp)
  0x00000000030ee911: mov    %r13,0x10(%rsp)
  0x00000000030ee916: mov    %r14,0x8(%rsp)
  0x00000000030ee91b: mov    %r15,(%rsp)
  0x00000000030ee91f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030ee929: movabs $0x30ee8c9,%rdx    ;   {internal_word}
  0x00000000030ee933: mov    %rsp,%r8
  0x00000000030ee936: and    $0xfffffffffffffff0,%rsp
  0x00000000030ee93a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030ee93f: hlt    
[Deopt Handler Code]
  0x00000000030ee940: movabs $0x30ee940,%r10    ;   {section_word}
  0x00000000030ee94a: push   %r10
  0x00000000030ee94c: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030ee951: hlt    
  0x00000000030ee952: hlt    
  0x00000000030ee953: hlt    
  0x00000000030ee954: hlt    
  0x00000000030ee955: hlt    
  0x00000000030ee956: hlt    
  0x00000000030ee957: hlt    
<nmethod compile_id='53' compiler='C1' level='3' entry='0x00000000030ee460' size='2528' address='0x00000000030ee2d0' relocation_offset='288' insts_offset='400' stub_offset='1488' scopes_data_offset='1704' scopes_pcs_offset='2024' dependencies_offset='2440' handler_table_offset='2448' nul_chk_table_offset='2496' method='sun/instrument/TransformerManager transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[B)[B' bytes='98' count='262' iicount='262' stamp='14.140'/>
<writer thread='1104'/>
<task_queued compile_id='54' method='sun/misc/ASCIICaseInsensitiveComparator compare (Ljava/lang/Object;Ljava/lang/Object;)I' bytes='13' count='12800' iicount='12800' stamp='14.140' comment='tiered' hot_count='12800'/>
<task_queued compile_id='55' method='sun/misc/ASCIICaseInsensitiveComparator compare (Ljava/lang/String;Ljava/lang/String;)I' bytes='126' count='12800' backedge_count='30250' iicount='12800' stamp='14.140' comment='tiered' hot_count='12800'/>
<task_queued compile_id='56' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='1024' iicount='1024' level='3' stamp='14.141' comment='tiered' hot_count='1024'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030eb650:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000017333148} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x00000000030eb7c0: mov    0x8(%rdx),%r10d
  0x00000000030eb7c4: shl    $0x3,%r10
  0x00000000030eb7c8: cmp    %rax,%r10
  0x00000000030eb7cb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030eb7d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030eb7dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030eb7e0: mov    %eax,-0x6000(%rsp)
  0x00000000030eb7e7: push   %rbp
  0x00000000030eb7e8: sub    $0x30,%rsp
  0x00000000030eb7ec: movabs $0x17400508,%rax   ;   {metadata(method data for {method} {0x0000000017333148} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x00000000030eb7f6: mov    0xdc(%rax),%esi
  0x00000000030eb7fc: add    $0x8,%esi
  0x00000000030eb7ff: mov    %esi,0xdc(%rax)
  0x00000000030eb805: movabs $0x17333140,%rax   ;   {metadata({method} {0x0000000017333148} &apos;encodeChar&apos; &apos;(C)I&apos; in &apos;sun/nio/cs/ext/DoubleByte$Encoder&apos;)}
  0x00000000030eb80f: and    $0x1ff8,%esi
  0x00000000030eb815: cmp    $0x0,%esi
  0x00000000030eb818: je     0x00000000030eb862  ;*aload_0
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@0 (line 656)

  0x00000000030eb81e: mov    0x30(%rdx),%eax    ;*getfield c2b
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@1 (line 656)

  0x00000000030eb821: mov    0x34(%rdx),%esi    ;*getfield c2bIndex
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@5 (line 656)

  0x00000000030eb824: mov    %r8,%rdi
  0x00000000030eb827: sar    $0x8,%edi
  0x00000000030eb82a: movslq %edi,%rbx
  0x00000000030eb82d: cmp    0xc(%rsi),%edi     ; implicit exception: dispatches to 0x00000000030eb876
  0x00000000030eb830: jae    0x00000000030eb880
  0x00000000030eb836: movzwl 0x10(%rsi,%rbx,2),%esi  ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)

  0x00000000030eb83b: and    $0xff,%r8d
  0x00000000030eb842: add    %r8d,%esi
  0x00000000030eb845: movslq %esi,%rdi
  0x00000000030eb848: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x00000000030eb889
  0x00000000030eb84b: jae    0x00000000030eb893
  0x00000000030eb851: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)

  0x00000000030eb856: add    $0x30,%rsp
  0x00000000030eb85a: pop    %rbp
  0x00000000030eb85b: test   %eax,-0x28fb761(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030eb861: retq   
  0x00000000030eb862: mov    %rax,0x8(%rsp)
  0x00000000030eb867: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030eb86f: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=180}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@-1 (line 656)
                                                ;   {runtime_call}
  0x00000000030eb874: jmp    0x00000000030eb81e
  0x00000000030eb876: callq  0x0000000003041280  ; OopMap{rax=Oop rsi=Oop off=187}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x00000000030eb87b: callq  0x0000000003041280  ; OopMap{rax=Oop rsi=Oop off=192}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x00000000030eb880: mov    %rdi,(%rsp)
  0x00000000030eb884: callq  0x0000000003041940  ; OopMap{rax=Oop rsi=Oop off=201}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@12 (line 656)
                                                ;   {runtime_call}
  0x00000000030eb889: callq  0x0000000003041280  ; OopMap{rax=Oop off=206}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x00000000030eb88e: callq  0x0000000003041280  ; OopMap{rax=Oop off=211}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x00000000030eb893: mov    %rsi,(%rsp)
  0x00000000030eb897: callq  0x0000000003041940  ; OopMap{rax=Oop off=220}
                                                ;*caload
                                                ; - sun.nio.cs.ext.DoubleByte$Encoder::encodeChar@19 (line 656)
                                                ;   {runtime_call}
  0x00000000030eb89c: nop
  0x00000000030eb89d: nop
  0x00000000030eb89e: mov    0x2a8(%r15),%rax
  0x00000000030eb8a5: movabs $0x0,%r10
  0x00000000030eb8af: mov    %r10,0x2a8(%r15)
  0x00000000030eb8b6: movabs $0x0,%r10
  0x00000000030eb8c0: mov    %r10,0x2b0(%r15)
  0x00000000030eb8c7: add    $0x30,%rsp
  0x00000000030eb8cb: pop    %rbp
  0x00000000030eb8cc: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030eb8d1: hlt    
  0x00000000030eb8d2: hlt    
  0x00000000030eb8d3: hlt    
  0x00000000030eb8d4: hlt    
  0x00000000030eb8d5: hlt    
  0x00000000030eb8d6: hlt    
  0x00000000030eb8d7: hlt    
  0x00000000030eb8d8: hlt    
  0x00000000030eb8d9: hlt    
  0x00000000030eb8da: hlt    
  0x00000000030eb8db: hlt    
  0x00000000030eb8dc: hlt    
  0x00000000030eb8dd: hlt    
  0x00000000030eb8de: hlt    
  0x00000000030eb8df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030eb8e0: callq  0x00000000030d09a0  ;   {no_reloc}
  0x00000000030eb8e5: mov    %rsp,-0x28(%rsp)
  0x00000000030eb8ea: sub    $0x80,%rsp
  0x00000000030eb8f1: mov    %rax,0x78(%rsp)
  0x00000000030eb8f6: mov    %rcx,0x70(%rsp)
  0x00000000030eb8fb: mov    %rdx,0x68(%rsp)
  0x00000000030eb900: mov    %rbx,0x60(%rsp)
  0x00000000030eb905: mov    %rbp,0x50(%rsp)
  0x00000000030eb90a: mov    %rsi,0x48(%rsp)
  0x00000000030eb90f: mov    %rdi,0x40(%rsp)
  0x00000000030eb914: mov    %r8,0x38(%rsp)
  0x00000000030eb919: mov    %r9,0x30(%rsp)
  0x00000000030eb91e: mov    %r10,0x28(%rsp)
  0x00000000030eb923: mov    %r11,0x20(%rsp)
  0x00000000030eb928: mov    %r12,0x18(%rsp)
  0x00000000030eb92d: mov    %r13,0x10(%rsp)
  0x00000000030eb932: mov    %r14,0x8(%rsp)
  0x00000000030eb937: mov    %r15,(%rsp)
  0x00000000030eb93b: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030eb945: movabs $0x30eb8e5,%rdx    ;   {internal_word}
  0x00000000030eb94f: mov    %rsp,%r8
  0x00000000030eb952: and    $0xfffffffffffffff0,%rsp
  0x00000000030eb956: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030eb95b: hlt    
[Deopt Handler Code]
  0x00000000030eb95c: movabs $0x30eb95c,%r10    ;   {section_word}
  0x00000000030eb966: push   %r10
  0x00000000030eb968: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030eb96d: hlt    
  0x00000000030eb96e: hlt    
  0x00000000030eb96f: hlt    
<nmethod compile_id='56' compiler='C1' level='3' entry='0x00000000030eb7c0' size='1144' address='0x00000000030eb650' relocation_offset='288' insts_offset='368' stub_offset='656' scopes_data_offset='808' scopes_pcs_offset='872' dependencies_offset='1096' nul_chk_table_offset='1104' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='1038' iicount='1038' stamp='14.318'/>
<writer thread='1104'/>
<task_queued compile_id='57' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='3584' iicount='3584' level='3' stamp='14.318' comment='tiered' hot_count='3584'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030eecd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000172277e8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x00000000030eee40: mov    0x8(%rdx),%r10d
  0x00000000030eee44: shl    $0x3,%r10
  0x00000000030eee48: cmp    %rax,%r10
  0x00000000030eee4b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030eee51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030eee5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030eee60: mov    %eax,-0x6000(%rsp)
  0x00000000030eee67: push   %rbp
  0x00000000030eee68: sub    $0x80,%rsp
  0x00000000030eee6f: movabs $0x173ab2a8,%rsi   ;   {metadata(method data for {method} {0x00000000172277e8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030eee79: mov    0xdc(%rsi),%edi
  0x00000000030eee7f: add    $0x8,%edi
  0x00000000030eee82: mov    %edi,0xdc(%rsi)
  0x00000000030eee88: movabs $0x172277e0,%rsi   ;   {metadata({method} {0x00000000172277e8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030eee92: and    $0x1ff8,%edi
  0x00000000030eee98: cmp    $0x0,%edi
  0x00000000030eee9b: je     0x00000000030ef068  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x00000000030eeea1: mov    %rdx,%rsi
  0x00000000030eeea4: movabs $0x173ab2a8,%rdi   ;   {metadata(method data for {method} {0x00000000172277e8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000030eeeae: addq   $0x1,0x108(%rdi)
  0x00000000030eeeb6: movabs $0x173ab170,%rsi   ;   {metadata(method data for {method} {0x0000000017224790} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030eeec0: mov    0xdc(%rsi),%edi
  0x00000000030eeec6: add    $0x8,%edi
  0x00000000030eeec9: mov    %edi,0xdc(%rsi)
  0x00000000030eeecf: movabs $0x17224788,%rsi   ;   {metadata({method} {0x0000000017224790} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030eeed9: and    $0x7ffff8,%edi
  0x00000000030eeedf: cmp    $0x0,%edi
  0x00000000030eeee2: je     0x00000000030ef07f
  0x00000000030eeee8: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030eeeeb: inc    %esi
  0x00000000030eeeed: mov    %rdx,%rdi
  0x00000000030eeef0: movabs $0x173ab170,%rbx   ;   {metadata(method data for {method} {0x0000000017224790} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030eeefa: addq   $0x1,0x108(%rbx)
  0x00000000030eef02: movabs $0x173aafd0,%rdi   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030eef0c: mov    0xdc(%rdi),%ebx
  0x00000000030eef12: add    $0x8,%ebx
  0x00000000030eef15: mov    %ebx,0xdc(%rdi)
  0x00000000030eef1b: movabs $0x172236f8,%rdi   ;   {metadata({method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030eef25: and    $0x7ffff8,%ebx
  0x00000000030eef2b: cmp    $0x0,%ebx
  0x00000000030eef2e: je     0x00000000030ef096
  0x00000000030eef34: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030eef37: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x00000000030ef0ad
  0x00000000030eef3a: mov    %rsi,%rbx
  0x00000000030eef3d: sub    %edi,%ebx
  0x00000000030eef3f: cmp    $0x0,%ebx
  0x00000000030eef42: movabs $0x173aafd0,%rdi   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030eef4c: movabs $0x108,%rbx
  0x00000000030eef56: jle    0x00000000030eef66
  0x00000000030eef5c: movabs $0x118,%rbx
  0x00000000030eef66: mov    (%rdi,%rbx,1),%rax
  0x00000000030eef6a: lea    0x1(%rax),%rax
  0x00000000030eef6e: mov    %rax,(%rdi,%rbx,1)
  0x00000000030eef72: mov    %r8d,0x68(%rsp)
  0x00000000030eef77: jg     0x00000000030eef87  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030eef7d: mov    %rdx,0x60(%rsp)
  0x00000000030eef82: jmpq   0x00000000030ef02c  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030eef87: mov    %rdx,%rdi
  0x00000000030eef8a: movabs $0x173aafd0,%rbx   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030eef94: mov    0x8(%rdi),%edi
  0x00000000030eef97: shl    $0x3,%rdi
  0x00000000030eef9b: cmp    0x130(%rbx),%rdi
  0x00000000030eefa2: jne    0x00000000030eefb1
  0x00000000030eefa4: addq   $0x1,0x138(%rbx)
  0x00000000030eefac: jmpq   0x00000000030ef017
  0x00000000030eefb1: cmp    0x140(%rbx),%rdi
  0x00000000030eefb8: jne    0x00000000030eefc7
  0x00000000030eefba: addq   $0x1,0x148(%rbx)
  0x00000000030eefc2: jmpq   0x00000000030ef017
  0x00000000030eefc7: cmpq   $0x0,0x130(%rbx)
  0x00000000030eefd2: jne    0x00000000030eefeb
  0x00000000030eefd4: mov    %rdi,0x130(%rbx)
  0x00000000030eefdb: movq   $0x1,0x138(%rbx)
  0x00000000030eefe6: jmpq   0x00000000030ef017
  0x00000000030eefeb: cmpq   $0x0,0x140(%rbx)
  0x00000000030eeff6: jne    0x00000000030ef00f
  0x00000000030eeff8: mov    %rdi,0x140(%rbx)
  0x00000000030eefff: movq   $0x1,0x148(%rbx)
  0x00000000030ef00a: jmpq   0x00000000030ef017
  0x00000000030ef00f: addq   $0x1,0x128(%rbx)
  0x00000000030ef017: mov    %rsi,%r8
  0x00000000030ef01a: mov    %rdx,%rsi
  0x00000000030ef01d: mov    %rsi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030ef020: mov    %rsi,0x60(%rsp)
  0x00000000030ef025: nop
  0x00000000030ef026: nop
  0x00000000030ef027: callq  0x00000000030161a0  ; OopMap{[96]=Oop off=492}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x00000000030ef02c: mov    0x68(%rsp),%r8d
  0x00000000030ef031: mov    0x60(%rsp),%rdx
  0x00000000030ef036: mov    0x10(%rdx),%eax    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030ef039: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030ef03c: mov    %rsi,%rdi
  0x00000000030ef03f: inc    %edi
  0x00000000030ef041: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030ef044: movslq %esi,%rdi
  0x00000000030ef047: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x00000000030ef0b2
  0x00000000030ef04a: jae    0x00000000030ef0bc
  0x00000000030ef050: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x00000000030ef056: mov    %rdx,%rax
  0x00000000030ef059: add    $0x80,%rsp
  0x00000000030ef060: pop    %rbp
  0x00000000030ef061: test   %eax,-0x28fef67(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030ef067: retq   
  0x00000000030ef068: mov    %rsi,0x8(%rsp)
  0x00000000030ef06d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030ef075: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=570}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x00000000030ef07a: jmpq   0x00000000030eeea1
  0x00000000030ef07f: mov    %rsi,0x8(%rsp)
  0x00000000030ef084: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030ef08c: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=593}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000030ef091: jmpq   0x00000000030eeee8
  0x00000000030ef096: mov    %rdi,0x8(%rsp)
  0x00000000030ef09b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030ef0a3: callq  0x00000000030d3220  ; OopMap{rdx=Oop off=616}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000030ef0a8: jmpq   0x00000000030eef34
  0x00000000030ef0ad: callq  0x0000000003041280  ; OopMap{rdx=Oop off=626}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000030ef0b2: callq  0x0000000003041280  ; OopMap{rdx=Oop rax=Oop off=631}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000030ef0b7: callq  0x0000000003041280  ; OopMap{rdx=Oop rax=Oop off=636}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000030ef0bc: mov    %rsi,(%rsp)
  0x00000000030ef0c0: callq  0x0000000003041940  ; OopMap{rdx=Oop rax=Oop off=645}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x00000000030ef0c5: nop
  0x00000000030ef0c6: nop
  0x00000000030ef0c7: mov    0x2a8(%r15),%rax
  0x00000000030ef0ce: movabs $0x0,%r10
  0x00000000030ef0d8: mov    %r10,0x2a8(%r15)
  0x00000000030ef0df: movabs $0x0,%r10
  0x00000000030ef0e9: mov    %r10,0x2b0(%r15)
  0x00000000030ef0f0: add    $0x80,%rsp
  0x00000000030ef0f7: pop    %rbp
  0x00000000030ef0f8: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030ef0fd: hlt    
  0x00000000030ef0fe: hlt    
  0x00000000030ef0ff: hlt    
[Stub Code]
  0x00000000030ef100: nop                       ;   {no_reloc}
  0x00000000030ef101: nop
  0x00000000030ef102: nop
  0x00000000030ef103: nop
  0x00000000030ef104: nop
  0x00000000030ef105: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030ef10f: jmpq   0x00000000030ef10f  ;   {runtime_call}
[Exception Handler]
  0x00000000030ef114: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030ef119: mov    %rsp,-0x28(%rsp)
  0x00000000030ef11e: sub    $0x80,%rsp
  0x00000000030ef125: mov    %rax,0x78(%rsp)
  0x00000000030ef12a: mov    %rcx,0x70(%rsp)
  0x00000000030ef12f: mov    %rdx,0x68(%rsp)
  0x00000000030ef134: mov    %rbx,0x60(%rsp)
  0x00000000030ef139: mov    %rbp,0x50(%rsp)
  0x00000000030ef13e: mov    %rsi,0x48(%rsp)
  0x00000000030ef143: mov    %rdi,0x40(%rsp)
  0x00000000030ef148: mov    %r8,0x38(%rsp)
  0x00000000030ef14d: mov    %r9,0x30(%rsp)
  0x00000000030ef152: mov    %r10,0x28(%rsp)
  0x00000000030ef157: mov    %r11,0x20(%rsp)
  0x00000000030ef15c: mov    %r12,0x18(%rsp)
  0x00000000030ef161: mov    %r13,0x10(%rsp)
  0x00000000030ef166: mov    %r14,0x8(%rsp)
  0x00000000030ef16b: mov    %r15,(%rsp)
  0x00000000030ef16f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030ef179: movabs $0x30ef119,%rdx    ;   {internal_word}
  0x00000000030ef183: mov    %rsp,%r8
  0x00000000030ef186: and    $0xfffffffffffffff0,%rsp
  0x00000000030ef18a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030ef18f: hlt    
[Deopt Handler Code]
  0x00000000030ef190: movabs $0x30ef190,%r10    ;   {section_word}
  0x00000000030ef19a: push   %r10
  0x00000000030ef19c: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030ef1a1: hlt    
  0x00000000030ef1a2: hlt    
  0x00000000030ef1a3: hlt    
  0x00000000030ef1a4: hlt    
  0x00000000030ef1a5: hlt    
  0x00000000030ef1a6: hlt    
  0x00000000030ef1a7: hlt    
<nmethod compile_id='57' compiler='C1' level='3' entry='0x00000000030eee40' size='1816' address='0x00000000030eecd0' relocation_offset='288' insts_offset='368' stub_offset='1072' scopes_data_offset='1264' scopes_pcs_offset='1440' dependencies_offset='1776' nul_chk_table_offset='1784' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='3721' iicount='3721' stamp='14.640'/>
<writer thread='1104'/>
<task_queued compile_id='58' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='256' iicount='256' level='3' stamp='14.640' comment='tiered' hot_count='256'/>
<task_queued compile_id='59' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='197' count='256' backedge_count='45' iicount='256' level='3' stamp='14.640' comment='tiered' hot_count='256'/>
<writer thread='22584'/>
Decoding compiled method 0x00000000030f2390:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000172dc168} &apos;compare&apos; &apos;(Ljava/lang/String;Ljava/lang/String;)I&apos; in &apos;sun/misc/ASCIICaseInsensitiveComparator&apos;
  # this:     rdx:rdx   = &apos;sun/misc/ASCIICaseInsensitiveComparator&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9:r9     = &apos;java/lang/String&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000000030f24e0: mov    0x8(%rdx),%r10d
  0x00000000030f24e4: shl    $0x3,%r10
  0x00000000030f24e8: cmp    %r10,%rax
  0x00000000030f24eb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030f24f1: data16 xchg %ax,%ax
  0x00000000030f24f4: nopl   0x0(%rax,%rax,1)
  0x00000000030f24fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030f2500: mov    %eax,-0x6000(%rsp)
  0x00000000030f2507: push   %rbp
  0x00000000030f2508: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@-1 (line 41)

  0x00000000030f250c: mov    %r9,%r10
  0x00000000030f250f: vmovq  %r8,%xmm0
  0x00000000030f2514: mov    0xc(%r8),%edx      ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)
                                                ; implicit exception: dispatches to 0x00000000030f2819
  0x00000000030f2518: mov    0xc(%rdx),%r9d     ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)
                                                ; implicit exception: dispatches to 0x00000000030f2825
  0x00000000030f251c: mov    %r10,%rbx
  0x00000000030f251f: mov    0xc(%r10),%r13d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)
                                                ; implicit exception: dispatches to 0x00000000030f2831
  0x00000000030f2523: mov    0xc(%r13),%ecx     ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)
                                                ; implicit exception: dispatches to 0x00000000030f283d
  0x00000000030f2527: cmp    %ecx,%r9d
  0x00000000030f252a: jge    0x00000000030f2531  ;*if_icmpge
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@14 (line 42)

  0x00000000030f252c: mov    %r9d,%r11d
  0x00000000030f252f: jmp    0x00000000030f2534
  0x00000000030f2531: mov    %ecx,%r11d         ;*istore
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@23 (line 42)

  0x00000000030f2534: test   %r11d,%r11d
  0x00000000030f2537: jle    0x00000000030f2766  ;*if_icmpge
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@32 (line 43)

  0x00000000030f253d: test   %r9d,%r9d
  0x00000000030f2540: jbe    0x00000000030f2770
  0x00000000030f2546: mov    %r11d,%r8d
  0x00000000030f2549: dec    %r8d
  0x00000000030f254c: cmp    %r9d,%r8d
  0x00000000030f254f: jae    0x00000000030f2770
  0x00000000030f2555: test   %ecx,%ecx
  0x00000000030f2557: jbe    0x00000000030f2770
  0x00000000030f255d: cmp    %ecx,%r8d
  0x00000000030f2560: jae    0x00000000030f2770
  0x00000000030f2566: xor    %edi,%edi
  0x00000000030f2568: mov    $0x1,%esi
  0x00000000030f256d: cmp    %esi,%r11d
  0x00000000030f2570: mov    %r11d,%r8d
  0x00000000030f2573: cmovg  %esi,%r8d          ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)

  0x00000000030f2577: test   %edi,%edi
  0x00000000030f2579: jl     0x00000000030f2795  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f257f: cmp    %r9d,%edi
  0x00000000030f2582: jge    0x00000000030f27c1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f2588: movzwl 0x10(%rdx,%rdi,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f258d: cmp    %ecx,%edi
  0x00000000030f258f: jge    0x00000000030f27ed  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)

  0x00000000030f2595: movzwl 0x10(%r13,%rdi,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)

  0x00000000030f259b: cmp    %esi,%ebp
  0x00000000030f259d: je     0x00000000030f25f0  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@83 (line 47)

  0x00000000030f259f: mov    $0x5a,%r10d
  0x00000000030f25a5: sub    %esi,%r10d
  0x00000000030f25a8: mov    %esi,%r14d
  0x00000000030f25ab: add    $0xffffffbf,%r14d
  0x00000000030f25af: or     %r10d,%r14d
  0x00000000030f25b2: test   %r14d,%r14d
  0x00000000030f25b5: jl     0x00000000030f25bd  ;*iflt
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::isUpper@9 (line 89)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::toLower@1 (line 93)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@96 (line 49)

  0x00000000030f25b7: add    $0x20,%esi
  0x00000000030f25ba: movzwl %si,%esi           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@99 (line 49)

  0x00000000030f25bd: mov    $0x5a,%r14d
  0x00000000030f25c3: sub    %ebp,%r14d
  0x00000000030f25c6: mov    %ebp,%r10d
  0x00000000030f25c9: add    $0xffffffbf,%r10d
  0x00000000030f25cd: or     %r14d,%r10d
  0x00000000030f25d0: mov    %ebp,%eax
  0x00000000030f25d2: add    $0x20,%eax
  0x00000000030f25d5: test   %r10d,%r10d
  0x00000000030f25d8: cmovl  %ebp,%eax
  0x00000000030f25db: movzwl %ax,%eax           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@91 (line 48)

  0x00000000030f25de: cmp    %esi,%eax
  0x00000000030f25e0: je     0x00000000030f25f0  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@106 (line 50)

  0x00000000030f25e2: sub    %esi,%eax          ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)

  0x00000000030f25e4: add    $0x50,%rsp
  0x00000000030f25e8: pop    %rbp
  0x00000000030f25e9: test   %eax,-0x29025ef(%rip)        # 0x00000000007f0000
                                                ;   {poll_return}
  0x00000000030f25ef: retq   
  0x00000000030f25f0: inc    %edi               ;*iinc
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@115 (line 43)

  0x00000000030f25f2: cmp    %r8d,%edi
  0x00000000030f25f5: jl     0x00000000030f2577  ;*if_icmpge
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@32 (line 43)

  0x00000000030f25fb: cmp    %r11d,%ecx
  0x00000000030f25fe: mov    %ecx,%r8d
  0x00000000030f2601: cmovg  %r11d,%r8d
  0x00000000030f2605: cmp    %r9d,%r8d
  0x00000000030f2608: cmovg  %r9d,%r8d
  0x00000000030f260c: mov    %r8d,%ebp
  0x00000000030f260f: dec    %ebp
  0x00000000030f2611: mov    $0x80000000,%r10d
  0x00000000030f2617: cmp    %ebp,%r8d
  0x00000000030f261a: cmovl  %r10d,%ebp
  0x00000000030f261e: cmp    %ebp,%edi
  0x00000000030f2620: jge    0x00000000030f26e8  ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)

  0x00000000030f2626: movzwl 0x10(%r13,%rdi,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)

  0x00000000030f262c: movzwl 0x10(%rdx,%rdi,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f2632: cmp    %esi,%r8d
  0x00000000030f2635: je     0x00000000030f2680  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@83 (line 47)

  0x00000000030f2637: mov    $0x5a,%r10d
  0x00000000030f263d: sub    %esi,%r10d
  0x00000000030f2640: mov    %esi,%r14d
  0x00000000030f2643: add    $0xffffffbf,%r14d
  0x00000000030f2647: or     %r10d,%r14d
  0x00000000030f264a: test   %r14d,%r14d
  0x00000000030f264d: jl     0x00000000030f2655  ;*iflt
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::isUpper@9 (line 89)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::toLower@1 (line 93)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@96 (line 49)

  0x00000000030f264f: add    $0x20,%esi
  0x00000000030f2652: movzwl %si,%esi           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@99 (line 49)

  0x00000000030f2655: mov    $0x5a,%r14d
  0x00000000030f265b: sub    %r8d,%r14d
  0x00000000030f265e: mov    %r8d,%r10d
  0x00000000030f2661: add    $0xffffffbf,%r10d
  0x00000000030f2665: or     %r14d,%r10d
  0x00000000030f2668: mov    %r8d,%eax
  0x00000000030f266b: add    $0x20,%eax
  0x00000000030f266e: test   %r10d,%r10d
  0x00000000030f2671: cmovl  %r8d,%eax
  0x00000000030f2675: movzwl %ax,%eax           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@91 (line 48)

  0x00000000030f2678: cmp    %esi,%eax
  0x00000000030f267a: jne    0x00000000030f25e2  ;*iinc
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@115 (line 43)

  0x00000000030f2680: movslq %edi,%r10
  0x00000000030f2683: movzwl 0x12(%rdx,%r10,2),%r14d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f2689: movzwl 0x12(%r13,%r10,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)

  0x00000000030f268f: cmp    %esi,%r14d
  0x00000000030f2692: je     0x00000000030f26dd  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@83 (line 47)

  0x00000000030f2694: mov    $0x5a,%r10d
  0x00000000030f269a: sub    %esi,%r10d
  0x00000000030f269d: mov    %esi,%r8d
  0x00000000030f26a0: add    $0xffffffbf,%r8d
  0x00000000030f26a4: or     %r10d,%r8d
  0x00000000030f26a7: test   %r8d,%r8d
  0x00000000030f26aa: jl     0x00000000030f26b2  ;*iflt
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::isUpper@9 (line 89)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::toLower@1 (line 93)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@96 (line 49)

  0x00000000030f26ac: add    $0x20,%esi
  0x00000000030f26af: movzwl %si,%esi           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@99 (line 49)

  0x00000000030f26b2: mov    $0x5a,%r10d
  0x00000000030f26b8: sub    %r14d,%r10d
  0x00000000030f26bb: mov    %r14d,%r8d
  0x00000000030f26be: add    $0xffffffbf,%r8d
  0x00000000030f26c2: or     %r10d,%r8d
  0x00000000030f26c5: mov    %r14d,%eax
  0x00000000030f26c8: add    $0x20,%eax
  0x00000000030f26cb: test   %r8d,%r8d
  0x00000000030f26ce: cmovl  %r14d,%eax
  0x00000000030f26d2: movzwl %ax,%eax           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@91 (line 48)

  0x00000000030f26d5: cmp    %esi,%eax
  0x00000000030f26d7: jne    0x00000000030f25e2
  0x00000000030f26dd: add    $0x2,%edi          ;*iinc
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@115 (line 43)

  0x00000000030f26e0: cmp    %ebp,%edi
  0x00000000030f26e2: jl     0x00000000030f2626  ;*if_icmpge
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@32 (line 43)

  0x00000000030f26e8: cmp    %r11d,%edi
  0x00000000030f26eb: jge    0x00000000030f2766
  0x00000000030f26ed: data16 xchg %ax,%ax       ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)

  0x00000000030f26f0: test   %edi,%edi
  0x00000000030f26f2: jl     0x00000000030f2795  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f26f8: cmp    %r9d,%edi
  0x00000000030f26fb: jge    0x00000000030f27c1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f2701: movzwl 0x10(%rdx,%rdi,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f2706: cmp    %ecx,%edi
  0x00000000030f2708: jge    0x00000000030f27ed  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)

  0x00000000030f270e: movzwl 0x10(%r13,%rdi,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)

  0x00000000030f2714: cmp    %esi,%ebp
  0x00000000030f2716: je     0x00000000030f275f  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@83 (line 47)

  0x00000000030f2718: mov    $0x5a,%r10d
  0x00000000030f271e: sub    %esi,%r10d
  0x00000000030f2721: mov    %esi,%r8d
  0x00000000030f2724: add    $0xffffffbf,%r8d
  0x00000000030f2728: or     %r10d,%r8d
  0x00000000030f272b: test   %r8d,%r8d
  0x00000000030f272e: jl     0x00000000030f2736  ;*iflt
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::isUpper@9 (line 89)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::toLower@1 (line 93)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@96 (line 49)

  0x00000000030f2730: add    $0x20,%esi
  0x00000000030f2733: movzwl %si,%esi           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@99 (line 49)

  0x00000000030f2736: mov    $0x5a,%r8d
  0x00000000030f273c: sub    %ebp,%r8d
  0x00000000030f273f: mov    %ebp,%r14d
  0x00000000030f2742: add    $0xffffffbf,%r14d
  0x00000000030f2746: or     %r8d,%r14d
  0x00000000030f2749: mov    %ebp,%eax
  0x00000000030f274b: add    $0x20,%eax
  0x00000000030f274e: test   %r14d,%r14d
  0x00000000030f2751: cmovl  %ebp,%eax
  0x00000000030f2754: movzwl %ax,%eax           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@91 (line 48)

  0x00000000030f2757: cmp    %esi,%eax
  0x00000000030f2759: jne    0x00000000030f25e2
  0x00000000030f275f: inc    %edi               ;*iinc
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@115 (line 43)

  0x00000000030f2761: cmp    %r11d,%edi
  0x00000000030f2764: jl     0x00000000030f26f0  ;*iload_3
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@121 (line 55)

  0x00000000030f2766: mov    %r9d,%eax
  0x00000000030f2769: sub    %ecx,%eax          ;*isub
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@124 (line 55)

  0x00000000030f276b: jmpq   0x00000000030f25e4
  0x00000000030f2770: mov    $0xffffff86,%edx
  0x00000000030f2775: vmovq  %xmm0,%rbp
  0x00000000030f277a: mov    %r10,(%rsp)
  0x00000000030f277e: mov    %r9d,0x8(%rsp)
  0x00000000030f2783: mov    %ecx,0xc(%rsp)
  0x00000000030f2787: mov    %r11d,0x10(%rsp)
  0x00000000030f278c: data16 xchg %ax,%ax
  0x00000000030f278f: callq  0x00000000030157a0  ; OopMap{rbp=Oop [0]=Oop off=692}
                                                ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)
                                                ;   {runtime_call}
  0x00000000030f2794: int3                      ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)

  0x00000000030f2795: mov    $0xffffff65,%edx
  0x00000000030f279a: mov    %edi,(%rsp)
  0x00000000030f279d: mov    %edi,0x4(%rsp)
  0x00000000030f27a1: mov    %rbx,0x10(%rsp)
  0x00000000030f27a6: mov    %r9d,0x18(%rsp)
  0x00000000030f27ab: mov    %ecx,0x1c(%rsp)
  0x00000000030f27af: mov    %r11d,0x20(%rsp)
  0x00000000030f27b4: vmovsd %xmm0,0x28(%rsp)
  0x00000000030f27ba: nop
  0x00000000030f27bb: callq  0x00000000030157a0  ; OopMap{[16]=Oop [40]=Oop off=736}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ;   {runtime_call}
  0x00000000030f27c0: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f27c1: mov    $0xffffff65,%edx
  0x00000000030f27c6: mov    %edi,(%rsp)
  0x00000000030f27c9: mov    %edi,0x4(%rsp)
  0x00000000030f27cd: mov    %rbx,0x10(%rsp)
  0x00000000030f27d2: mov    %ecx,0x1c(%rsp)
  0x00000000030f27d6: mov    %r11d,0x20(%rsp)
  0x00000000030f27db: vmovsd %xmm0,0x28(%rsp)
  0x00000000030f27e1: mov    %r9d,0x24(%rsp)
  0x00000000030f27e6: nop
  0x00000000030f27e7: callq  0x00000000030157a0  ; OopMap{[16]=Oop [40]=Oop off=780}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ;   {runtime_call}
  0x00000000030f27ec: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)

  0x00000000030f27ed: mov    $0xffffff65,%edx
  0x00000000030f27f2: mov    %edi,0x4(%rsp)
  0x00000000030f27f6: mov    %edi,0x8(%rsp)
  0x00000000030f27fa: vmovsd %xmm0,0x10(%rsp)
  0x00000000030f2800: mov    %r9d,0xc(%rsp)
  0x00000000030f2805: mov    %r11d,0x24(%rsp)
  0x00000000030f280a: mov    %rbx,0x28(%rsp)
  0x00000000030f280f: mov    %ecx,0x30(%rsp)
  0x00000000030f2813: callq  0x00000000030157a0  ; OopMap{[16]=Oop [40]=Oop off=824}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ;   {runtime_call}
  0x00000000030f2818: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)

  0x00000000030f2819: mov    $0xfffffff6,%edx
  0x00000000030f281e: nop
  0x00000000030f281f: callq  0x00000000030157a0  ; OopMap{off=836}
                                                ;*invokevirtual length
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)
                                                ;   {runtime_call}
  0x00000000030f2824: int3                      ;*invokevirtual length
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)

  0x00000000030f2825: mov    $0xfffffff6,%edx
  0x00000000030f282a: nop
  0x00000000030f282b: callq  0x00000000030157a0  ; OopMap{off=848}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)
                                                ;   {runtime_call}
  0x00000000030f2830: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)

  0x00000000030f2831: mov    $0xfffffff6,%edx
  0x00000000030f2836: nop
  0x00000000030f2837: callq  0x00000000030157a0  ; OopMap{off=860}
                                                ;*invokevirtual length
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)
                                                ;   {runtime_call}
  0x00000000030f283c: int3                      ;*invokevirtual length
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)

  0x00000000030f283d: mov    $0xfffffff6,%edx
  0x00000000030f2842: nop
  0x00000000030f2843: callq  0x00000000030157a0  ; OopMap{off=872}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)
                                                ;   {runtime_call}
  0x00000000030f2848: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)

  0x00000000030f2849: hlt    
  0x00000000030f284a: hlt    
  0x00000000030f284b: hlt    
  0x00000000030f284c: hlt    
  0x00000000030f284d: hlt    
  0x00000000030f284e: hlt    
  0x00000000030f284f: hlt    
  0x00000000030f2850: hlt    
  0x00000000030f2851: hlt    
  0x00000000030f2852: hlt    
  0x00000000030f2853: hlt    
  0x00000000030f2854: hlt    
  0x00000000030f2855: hlt    
  0x00000000030f2856: hlt    
  0x00000000030f2857: hlt    
  0x00000000030f2858: hlt    
  0x00000000030f2859: hlt    
  0x00000000030f285a: hlt    
  0x00000000030f285b: hlt    
  0x00000000030f285c: hlt    
  0x00000000030f285d: hlt    
  0x00000000030f285e: hlt    
  0x00000000030f285f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030f2860: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030f2865: callq  0x00000000030f286a
  0x00000000030f286a: subq   $0x5,(%rsp)
  0x00000000030f286f: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030f2874: hlt    
  0x00000000030f2875: hlt    
  0x00000000030f2876: hlt    
  0x00000000030f2877: hlt    
<nmethod compile_id='55' compiler='C2' level='4' entry='0x00000000030f24e0' size='2864' address='0x00000000030f2390' relocation_offset='288' insts_offset='336' stub_offset='1232' scopes_data_offset='1296' scopes_pcs_offset='1712' dependencies_offset='2816' nul_chk_table_offset='2824' method='sun/misc/ASCIICaseInsensitiveComparator compare (Ljava/lang/String;Ljava/lang/String;)I' bytes='126' count='12802' backedge_count='30255' iicount='12802' stamp='15.263'/>
<writer thread='1104'/>
<task_queued compile_id='60' method='java/util/ArrayList size ()I' bytes='5' count='384' iicount='384' level='1' stamp='15.263' comment='tiered' hot_count='384'/>
<writer thread='10816'/>
Decoding compiled method 0x00000000030efc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000172dc540} &apos;compare&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)I&apos; in &apos;sun/misc/ASCIICaseInsensitiveComparator&apos;
  # this:     rdx:rdx   = &apos;sun/misc/ASCIICaseInsensitiveComparator&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000000030efd60: mov    0x8(%rdx),%r10d
  0x00000000030efd64: shl    $0x3,%r10
  0x00000000030efd68: cmp    %r10,%rax
  0x00000000030efd6b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030efd71: data16 xchg %ax,%ax
  0x00000000030efd74: nopl   0x0(%rax,%rax,1)
  0x00000000030efd7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030efd80: mov    %eax,-0x6000(%rsp)
  0x00000000030efd87: push   %rbp
  0x00000000030efd88: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@-1 (line 36)

  0x00000000030efd8c: mov    %rdx,%r10
  0x00000000030efd8f: mov    0x8(%r8),%r11d     ; implicit exception: dispatches to 0x00000000030f00f1
  0x00000000030efd93: cmp    $0x200002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000030efd9a: jne    0x00000000030f00c1  ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@2 (line 36)

  0x00000000030efda0: vmovq  %r8,%xmm0
  0x00000000030efda5: mov    %r9,%r8
  0x00000000030efda8: mov    0x8(%r9),%r11d     ; implicit exception: dispatches to 0x00000000030f0105
  0x00000000030efdac: cmp    $0x200002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000030efdb3: jne    0x00000000030f00d9  ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 36)

  0x00000000030efdb9: vmovq  %xmm0,%r10
  0x00000000030efdbe: mov    0xc(%r10),%esi     ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efdc2: mov    0xc(%rsi),%ecx     ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 36)
                                                ; implicit exception: dispatches to 0x00000000030f0119
  0x00000000030efdc5: mov    0xc(%r8),%edx      ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efdc9: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)
                                                ; implicit exception: dispatches to 0x00000000030f0125
  0x00000000030efdcc: cmp    %ebx,%ecx
  0x00000000030efdce: jge    0x00000000030efdd5  ;*if_icmpge
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@14 (line 42)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efdd0: mov    %ecx,%r9d
  0x00000000030efdd3: jmp    0x00000000030efdd8
  0x00000000030efdd5: mov    %ebx,%r9d          ;*istore
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@23 (line 42)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efdd8: test   %r9d,%r9d
  0x00000000030efddb: jle    0x00000000030f0015  ;*if_icmpge
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@32 (line 43)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efde1: test   %ecx,%ecx
  0x00000000030efde3: jbe    0x00000000030f001e
  0x00000000030efde9: mov    %r9d,%r11d
  0x00000000030efdec: dec    %r11d
  0x00000000030efdef: cmp    %ecx,%r11d
  0x00000000030efdf2: jae    0x00000000030f001e
  0x00000000030efdf8: test   %ebx,%ebx
  0x00000000030efdfa: jbe    0x00000000030f001e
  0x00000000030efe00: cmp    %ebx,%r11d
  0x00000000030efe03: jae    0x00000000030f001e
  0x00000000030efe09: xor    %edi,%edi
  0x00000000030efe0b: mov    $0x1,%eax
  0x00000000030efe10: cmp    %eax,%r9d
  0x00000000030efe13: mov    %r9d,%r11d
  0x00000000030efe16: cmovg  %eax,%r11d         ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe1a: test   %edi,%edi
  0x00000000030efe1c: jl     0x00000000030f003d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe22: cmp    %ecx,%edi
  0x00000000030efe24: jge    0x00000000030f0069  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe2a: movzwl 0x10(%rsi,%rdi,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe2f: cmp    %ebx,%edi
  0x00000000030efe31: jge    0x00000000030f0095  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe37: movzwl 0x10(%rdx,%rdi,2),%r14d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe3d: cmp    %r14d,%ebp
  0x00000000030efe40: je     0x00000000030efe97  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@83 (line 47)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe42: mov    $0x5a,%r10d
  0x00000000030efe48: sub    %r14d,%r10d
  0x00000000030efe4b: mov    %r14d,%r13d
  0x00000000030efe4e: add    $0xffffffbf,%r13d
  0x00000000030efe52: or     %r10d,%r13d
  0x00000000030efe55: test   %r13d,%r13d
  0x00000000030efe58: jl     0x00000000030efe62  ;*iflt
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::isUpper@9 (line 89)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::toLower@1 (line 93)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@96 (line 49)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe5a: add    $0x20,%r14d
  0x00000000030efe5e: movzwl %r14w,%r14d        ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@99 (line 49)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe62: mov    $0x5a,%r13d
  0x00000000030efe68: sub    %ebp,%r13d
  0x00000000030efe6b: mov    %ebp,%r10d
  0x00000000030efe6e: add    $0xffffffbf,%r10d
  0x00000000030efe72: or     %r13d,%r10d
  0x00000000030efe75: mov    %ebp,%eax
  0x00000000030efe77: add    $0x20,%eax
  0x00000000030efe7a: test   %r10d,%r10d
  0x00000000030efe7d: cmovl  %ebp,%eax
  0x00000000030efe80: movzwl %ax,%eax           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@91 (line 48)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe83: cmp    %r14d,%eax
  0x00000000030efe86: je     0x00000000030efe97  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@106 (line 50)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe88: sub    %r14d,%eax         ;*invokevirtual compare
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe8b: add    $0x50,%rsp
  0x00000000030efe8f: pop    %rbp
  0x00000000030efe90: test   %eax,-0x28ffe96(%rip)        # 0x00000000007f0000
                                                ;   {poll_return}
  0x00000000030efe96: retq   
  0x00000000030efe97: inc    %edi               ;*iinc
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@115 (line 43)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efe99: cmp    %r11d,%edi
  0x00000000030efe9c: jl     0x00000000030efe1a  ;*if_icmpge
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@32 (line 43)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efea2: cmp    %r9d,%ebx
  0x00000000030efea5: mov    %ebx,%r11d
  0x00000000030efea8: cmovg  %r9d,%r11d
  0x00000000030efeac: cmp    %ecx,%r11d
  0x00000000030efeaf: cmovg  %ecx,%r11d
  0x00000000030efeb3: mov    %r11d,%ebp
  0x00000000030efeb6: dec    %ebp
  0x00000000030efeb8: mov    $0x80000000,%r10d
  0x00000000030efebe: cmp    %ebp,%r11d
  0x00000000030efec1: cmovl  %r10d,%ebp
  0x00000000030efec5: cmp    %ebp,%edi
  0x00000000030efec7: jge    0x00000000030eff95  ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efecd: movzwl 0x10(%rdx,%rdi,2),%r14d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efed3: movzwl 0x10(%rsi,%rdi,2),%r11d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efed9: cmp    %r14d,%r11d
  0x00000000030efedc: je     0x00000000030eff2a  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@83 (line 47)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efede: mov    $0x5a,%r10d
  0x00000000030efee4: sub    %r14d,%r10d
  0x00000000030efee7: mov    %r14d,%r13d
  0x00000000030efeea: add    $0xffffffbf,%r13d
  0x00000000030efeee: or     %r10d,%r13d
  0x00000000030efef1: test   %r13d,%r13d
  0x00000000030efef4: jl     0x00000000030efefe  ;*iflt
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::isUpper@9 (line 89)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::toLower@1 (line 93)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@96 (line 49)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efef6: add    $0x20,%r14d
  0x00000000030efefa: movzwl %r14w,%r14d        ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@99 (line 49)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030efefe: mov    $0x5a,%r13d
  0x00000000030eff04: sub    %r11d,%r13d
  0x00000000030eff07: mov    %r11d,%r10d
  0x00000000030eff0a: add    $0xffffffbf,%r10d
  0x00000000030eff0e: or     %r13d,%r10d
  0x00000000030eff11: mov    %r11d,%eax
  0x00000000030eff14: add    $0x20,%eax
  0x00000000030eff17: test   %r10d,%r10d
  0x00000000030eff1a: cmovl  %r11d,%eax
  0x00000000030eff1e: movzwl %ax,%eax           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@91 (line 48)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff21: cmp    %r14d,%eax
  0x00000000030eff24: jne    0x00000000030efe88  ;*iinc
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@115 (line 43)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff2a: movslq %edi,%r10
  0x00000000030eff2d: movzwl 0x12(%rsi,%r10,2),%r13d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff33: movzwl 0x12(%rdx,%r10,2),%r14d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff39: cmp    %r14d,%r13d
  0x00000000030eff3c: je     0x00000000030eff8a  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@83 (line 47)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff3e: mov    $0x5a,%r10d
  0x00000000030eff44: sub    %r14d,%r10d
  0x00000000030eff47: mov    %r14d,%r11d
  0x00000000030eff4a: add    $0xffffffbf,%r11d
  0x00000000030eff4e: or     %r10d,%r11d
  0x00000000030eff51: test   %r11d,%r11d
  0x00000000030eff54: jl     0x00000000030eff5e  ;*iflt
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::isUpper@9 (line 89)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::toLower@1 (line 93)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@96 (line 49)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff56: add    $0x20,%r14d
  0x00000000030eff5a: movzwl %r14w,%r14d        ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@99 (line 49)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff5e: mov    $0x5a,%r10d
  0x00000000030eff64: sub    %r13d,%r10d
  0x00000000030eff67: mov    %r13d,%r11d
  0x00000000030eff6a: add    $0xffffffbf,%r11d
  0x00000000030eff6e: or     %r10d,%r11d
  0x00000000030eff71: mov    %r13d,%eax
  0x00000000030eff74: add    $0x20,%eax
  0x00000000030eff77: test   %r11d,%r11d
  0x00000000030eff7a: cmovl  %r13d,%eax
  0x00000000030eff7e: movzwl %ax,%eax           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@91 (line 48)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff81: cmp    %r14d,%eax
  0x00000000030eff84: jne    0x00000000030efe88
  0x00000000030eff8a: add    $0x2,%edi          ;*iinc
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@115 (line 43)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff8d: cmp    %ebp,%edi
  0x00000000030eff8f: jl     0x00000000030efecd  ;*if_icmpge
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@32 (line 43)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff95: cmp    %r9d,%edi
  0x00000000030eff98: jge    0x00000000030f0015
  0x00000000030eff9a: xchg   %ax,%ax            ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030eff9c: test   %edi,%edi
  0x00000000030eff9e: jl     0x00000000030f003d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030effa4: cmp    %ecx,%edi
  0x00000000030effa6: jge    0x00000000030f0069  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030effac: movzwl 0x10(%rsi,%rdi,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030effb1: cmp    %ebx,%edi
  0x00000000030effb3: jge    0x00000000030f0095  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030effb9: movzwl 0x10(%rdx,%rdi,2),%r14d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 648)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030effbf: cmp    %r14d,%ebp
  0x00000000030effc2: je     0x00000000030f000e  ;*if_icmpeq
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@83 (line 47)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030effc4: mov    $0x5a,%r10d
  0x00000000030effca: sub    %r14d,%r10d
  0x00000000030effcd: mov    %r14d,%r11d
  0x00000000030effd0: add    $0xffffffbf,%r11d
  0x00000000030effd4: or     %r10d,%r11d
  0x00000000030effd7: test   %r11d,%r11d
  0x00000000030effda: jl     0x00000000030effe4  ;*iflt
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::isUpper@9 (line 89)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::toLower@1 (line 93)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@96 (line 49)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030effdc: add    $0x20,%r14d
  0x00000000030effe0: movzwl %r14w,%r14d        ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@99 (line 49)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030effe4: mov    $0x5a,%r10d
  0x00000000030effea: sub    %ebp,%r10d
  0x00000000030effed: mov    %ebp,%r13d
  0x00000000030efff0: add    $0xffffffbf,%r13d
  0x00000000030efff4: or     %r10d,%r13d
  0x00000000030efff7: mov    %ebp,%eax
  0x00000000030efff9: add    $0x20,%eax
  0x00000000030efffc: test   %r13d,%r13d
  0x00000000030effff: cmovl  %ebp,%eax
  0x00000000030f0002: movzwl %ax,%eax           ;*i2c  ; - sun.misc.ASCIICaseInsensitiveComparator::compare@91 (line 48)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f0005: cmp    %r14d,%eax
  0x00000000030f0008: jne    0x00000000030efe88
  0x00000000030f000e: inc    %edi               ;*iinc
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@115 (line 43)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f0010: cmp    %r9d,%edi
  0x00000000030f0013: jl     0x00000000030eff9c  ;*iload_3
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@121 (line 55)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f0015: mov    %ecx,%eax
  0x00000000030f0017: sub    %ebx,%eax          ;*isub
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@124 (line 55)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f0019: jmpq   0x00000000030efe8b
  0x00000000030f001e: mov    $0xffffff86,%edx
  0x00000000030f0023: mov    %r10,%rbp
  0x00000000030f0026: mov    %r8,(%rsp)
  0x00000000030f002a: mov    %ecx,0x8(%rsp)
  0x00000000030f002e: mov    %ebx,0xc(%rsp)
  0x00000000030f0032: mov    %r9d,0x10(%rsp)
  0x00000000030f0037: callq  0x00000000030157a0  ; OopMap{rbp=Oop [0]=Oop off=732}
                                                ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)
                                                ;   {runtime_call}
  0x00000000030f003c: int3                      ;*aload_1
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@35 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f003d: mov    $0xffffff65,%edx
  0x00000000030f0042: mov    %edi,(%rsp)
  0x00000000030f0045: mov    %edi,0x4(%rsp)
  0x00000000030f0049: mov    %r8,0x10(%rsp)
  0x00000000030f004e: mov    %ecx,0x18(%rsp)
  0x00000000030f0052: mov    %ebx,0x1c(%rsp)
  0x00000000030f0056: mov    %r9d,0x20(%rsp)
  0x00000000030f005b: vmovsd %xmm0,0x28(%rsp)
  0x00000000030f0061: xchg   %ax,%ax
  0x00000000030f0063: callq  0x00000000030157a0  ; OopMap{[16]=Oop [40]=Oop off=776}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)
                                                ;   {runtime_call}
  0x00000000030f0068: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f0069: mov    $0xffffff65,%edx
  0x00000000030f006e: mov    %edi,(%rsp)
  0x00000000030f0071: mov    %edi,0x4(%rsp)
  0x00000000030f0075: mov    %r8,0x10(%rsp)
  0x00000000030f007a: mov    %ebx,0x1c(%rsp)
  0x00000000030f007e: mov    %r9d,0x20(%rsp)
  0x00000000030f0083: vmovsd %xmm0,0x28(%rsp)
  0x00000000030f0089: mov    %ecx,0x24(%rsp)
  0x00000000030f008d: xchg   %ax,%ax
  0x00000000030f008f: callq  0x00000000030157a0  ; OopMap{[16]=Oop [40]=Oop off=820}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)
                                                ;   {runtime_call}
  0x00000000030f0094: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@38 (line 44)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f0095: mov    $0xffffff65,%edx
  0x00000000030f009a: mov    %edi,0x4(%rsp)
  0x00000000030f009e: mov    %edi,0x8(%rsp)
  0x00000000030f00a2: vmovsd %xmm0,0x10(%rsp)
  0x00000000030f00a8: mov    %ecx,0xc(%rsp)
  0x00000000030f00ac: mov    %r9d,0x24(%rsp)
  0x00000000030f00b1: mov    %r8,0x28(%rsp)
  0x00000000030f00b6: mov    %ebx,0x30(%rsp)
  0x00000000030f00ba: nop
  0x00000000030f00bb: callq  0x00000000030157a0  ; OopMap{[16]=Oop [40]=Oop off=864}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)
                                                ;   {runtime_call}
  0x00000000030f00c0: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 645)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@46 (line 45)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f00c1: mov    $0xffffffde,%edx
  0x00000000030f00c6: mov    %r9,%rbp
  0x00000000030f00c9: mov    %r10,(%rsp)
  0x00000000030f00cd: mov    %r8,0x8(%rsp)
  0x00000000030f00d2: nop
  0x00000000030f00d3: callq  0x00000000030157a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=888}
                                                ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@2 (line 36)
                                                ;   {runtime_call}
  0x00000000030f00d8: int3                      ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@2 (line 36)

  0x00000000030f00d9: mov    $0xffffffde,%edx
  0x00000000030f00de: mov    %r10,%rbp
  0x00000000030f00e1: vmovsd %xmm0,(%rsp)
  0x00000000030f00e6: mov    %r9,0x8(%rsp)
  0x00000000030f00eb: callq  0x00000000030157a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=912}
                                                ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 36)
                                                ;   {runtime_call}
  0x00000000030f00f0: int3                      ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 36)

  0x00000000030f00f1: mov    $0xfffffff4,%edx
  0x00000000030f00f6: mov    %r9,%rbp
  0x00000000030f00f9: mov    %r10,(%rsp)
  0x00000000030f00fd: xchg   %ax,%ax
  0x00000000030f00ff: callq  0x00000000030157a0  ; OopMap{rbp=Oop [0]=Oop off=932}
                                                ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@2 (line 36)
                                                ;   {runtime_call}
  0x00000000030f0104: int3                      ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@2 (line 36)

  0x00000000030f0105: mov    $0xfffffff4,%edx
  0x00000000030f010a: mov    %r10,%rbp
  0x00000000030f010d: vmovsd %xmm0,(%rsp)
  0x00000000030f0112: nop
  0x00000000030f0113: callq  0x00000000030157a0  ; OopMap{rbp=Oop [0]=Oop off=952}
                                                ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 36)
                                                ;   {runtime_call}
  0x00000000030f0118: int3                      ;*checkcast
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 36)

  0x00000000030f0119: mov    $0xfffffff6,%edx
  0x00000000030f011e: nop
  0x00000000030f011f: callq  0x00000000030157a0  ; OopMap{off=964}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)
                                                ;   {runtime_call}
  0x00000000030f0124: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@1 (line 41)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f0125: mov    $0xfffffff6,%edx
  0x00000000030f012a: nop
  0x00000000030f012b: callq  0x00000000030157a0  ; OopMap{off=976}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)
                                                ;   {runtime_call}
  0x00000000030f0130: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@6 (line 41)
                                                ; - sun.misc.ASCIICaseInsensitiveComparator::compare@9 (line 36)

  0x00000000030f0131: hlt    
  0x00000000030f0132: hlt    
  0x00000000030f0133: hlt    
  0x00000000030f0134: hlt    
  0x00000000030f0135: hlt    
  0x00000000030f0136: hlt    
  0x00000000030f0137: hlt    
  0x00000000030f0138: hlt    
  0x00000000030f0139: hlt    
  0x00000000030f013a: hlt    
  0x00000000030f013b: hlt    
  0x00000000030f013c: hlt    
  0x00000000030f013d: hlt    
  0x00000000030f013e: hlt    
  0x00000000030f013f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030f0140: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030f0145: callq  0x00000000030f014a
  0x00000000030f014a: subq   $0x5,(%rsp)
  0x00000000030f014f: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030f0154: hlt    
  0x00000000030f0155: hlt    
  0x00000000030f0156: hlt    
  0x00000000030f0157: hlt    
<nmethod compile_id='54' compiler='C2' level='4' entry='0x00000000030efd60' size='3168' address='0x00000000030efc10' relocation_offset='288' insts_offset='336' stub_offset='1328' scopes_data_offset='1408' scopes_pcs_offset='1920' dependencies_offset='3120' nul_chk_table_offset='3128' method='sun/misc/ASCIICaseInsensitiveComparator compare (Ljava/lang/Object;Ljava/lang/Object;)I' bytes='13' count='12802' iicount='12802' stamp='15.918'/>
<writer thread='1104'/>
<task_queued compile_id='61' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='896' iicount='896' level='3' stamp='15.918' comment='tiered' hot_count='896'/>
<task_queued compile_id='62' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='384' iicount='384' level='3' stamp='15.919' comment='tiered' hot_count='384'/>
<task_queued compile_id='63' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='768' iicount='768' level='3' stamp='15.919' comment='tiered' hot_count='768'/>
<task_queued compile_id='64' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='527' iicount='527' level='3' stamp='15.919' comment='tiered' hot_count='527'/>
<task_queued compile_id='65' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='128' iicount='128' level='1' stamp='15.919' comment='tiered' hot_count='128'/>
<task_queued compile_id='66' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='542' backedge_count='54' iicount='542' level='3' stamp='15.919' comment='tiered' hot_count='542'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030f43d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rdx:rdx   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    r8        = int
  #           [sp+0x160]  (sp of caller)
  0x00000000030f47e0: mov    0x8(%rdx),%r10d
  0x00000000030f47e4: shl    $0x3,%r10
  0x00000000030f47e8: cmp    %rax,%r10
  0x00000000030f47eb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030f47f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030f47fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030f4800: mov    %eax,-0x6000(%rsp)
  0x00000000030f4807: push   %rbp
  0x00000000030f4808: sub    $0x150,%rsp
  0x00000000030f480f: mov    %rdx,0x98(%rsp)
  0x00000000030f4817: mov    %r8d,0x94(%rsp)
  0x00000000030f481f: lea    0xf8(%rsp),%rsi
  0x00000000030f4827: mov    %rdx,0x8(%rsi)
  0x00000000030f482b: mov    (%rdx),%rax
  0x00000000030f482e: mov    %rax,%rdi
  0x00000000030f4831: and    $0x7,%rdi
  0x00000000030f4835: cmp    $0x5,%rdi
  0x00000000030f4839: jne    0x00000000030f48c0
  0x00000000030f483f: mov    0x8(%rdx),%edi
  0x00000000030f4842: shl    $0x3,%rdi
  0x00000000030f4846: mov    0xa8(%rdi),%rdi
  0x00000000030f484d: or     %r15,%rdi
  0x00000000030f4850: xor    %rax,%rdi
  0x00000000030f4853: and    $0xffffffffffffff87,%rdi
  0x00000000030f4857: je     0x00000000030f48e8
  0x00000000030f485d: test   $0x7,%rdi
  0x00000000030f4864: jne    0x00000000030f48ad
  0x00000000030f4866: test   $0x300,%rdi
  0x00000000030f486d: jne    0x00000000030f488c
  0x00000000030f486f: and    $0x37f,%rax
  0x00000000030f4876: mov    %rax,%rdi
  0x00000000030f4879: or     %r15,%rdi
  0x00000000030f487c: lock cmpxchg %rdi,(%rdx)
  0x00000000030f4881: jne    0x00000000030f6be7
  0x00000000030f4887: jmpq   0x00000000030f48e8
  0x00000000030f488c: mov    0x8(%rdx),%edi
  0x00000000030f488f: shl    $0x3,%rdi
  0x00000000030f4893: mov    0xa8(%rdi),%rdi
  0x00000000030f489a: or     %r15,%rdi
  0x00000000030f489d: lock cmpxchg %rdi,(%rdx)
  0x00000000030f48a2: jne    0x00000000030f6be7
  0x00000000030f48a8: jmpq   0x00000000030f48e8
  0x00000000030f48ad: mov    0x8(%rdx),%edi
  0x00000000030f48b0: shl    $0x3,%rdi
  0x00000000030f48b4: mov    0xa8(%rdi),%rdi
  0x00000000030f48bb: lock cmpxchg %rdi,(%rdx)
  0x00000000030f48c0: mov    (%rdx),%rax
  0x00000000030f48c3: or     $0x1,%rax
  0x00000000030f48c7: mov    %rax,(%rsi)
  0x00000000030f48ca: lock cmpxchg %rsi,(%rdx)
  0x00000000030f48cf: je     0x00000000030f48e8
  0x00000000030f48d5: sub    %rsp,%rax
  0x00000000030f48d8: and    $0xfffffffffffff007,%rax
  0x00000000030f48df: mov    %rax,(%rsi)
  0x00000000030f48e2: jne    0x00000000030f6be7
  0x00000000030f48e8: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f48f2: mov    0xdc(%rax),%esi
  0x00000000030f48f8: add    $0x8,%esi
  0x00000000030f48fb: mov    %esi,0xdc(%rax)
  0x00000000030f4901: movabs $0x17394918,%rax   ;   {metadata({method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f490b: and    $0x1ff8,%esi
  0x00000000030f4911: cmp    $0x0,%esi
  0x00000000030f4914: je     0x00000000030f6bfa  ;*aload_0
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 467)

  0x00000000030f491a: movsbl 0xc(%rdx),%eax     ;*getfield closed
                                                ; - sun.misc.URLClassPath::getLoader@1 (line 467)

  0x00000000030f491e: cmp    $0x0,%eax
  0x00000000030f4921: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f492b: movabs $0x108,%rsi
  0x00000000030f4935: je     0x00000000030f4945
  0x00000000030f493b: movabs $0x118,%rsi
  0x00000000030f4945: mov    (%rax,%rsi,1),%rdi
  0x00000000030f4949: lea    0x1(%rdi),%rdi
  0x00000000030f494d: mov    %rdi,(%rax,%rsi,1)
  0x00000000030f4951: jne    0x00000000030f6852  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@4 (line 467)

  0x00000000030f4957: nop
  0x00000000030f4958: mov    0x18(%rdx),%esi    ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 472)

  0x00000000030f495b: cmp    (%rsi),%rax        ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)
                                                ; implicit exception: dispatches to 0x00000000030f6c11
  0x00000000030f495e: mov    %rsi,%rax
  0x00000000030f4961: movabs $0x174dc9c0,%rdi   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f496b: movabs $0x10001b6c0,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000030f4975: mov    %r10,0x130(%rdi)
  0x00000000030f497c: addq   $0x1,0x138(%rdi)
  0x00000000030f4984: mov    0x10(%rsi),%edi    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)

  0x00000000030f4987: mov    %r8,%rax
  0x00000000030f498a: inc    %eax
  0x00000000030f498c: cmp    %eax,%edi
  0x00000000030f498e: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f4998: movabs $0x158,%rbx
  0x00000000030f49a2: jge    0x00000000030f49b2
  0x00000000030f49a8: movabs $0x168,%rbx
  0x00000000030f49b2: mov    (%rax,%rbx,1),%rcx
  0x00000000030f49b6: lea    0x1(%rcx),%rcx
  0x00000000030f49ba: mov    %rcx,(%rax,%rbx,1)
  0x00000000030f49be: jge    0x00000000030f654a  ;*if_icmpge
                                                ; - sun.misc.URLClassPath::getLoader@19 (line 472)

  0x00000000030f49c4: mov    0x14(%rdx),%esi    ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@23 (line 475)

  0x00000000030f49c7: lea    0x108(%rsp),%rdi
  0x00000000030f49cf: mov    %rsi,0x8(%rdi)
  0x00000000030f49d3: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000030f6c16
  0x00000000030f49d6: mov    %rax,%rbx
  0x00000000030f49d9: and    $0x7,%rbx
  0x00000000030f49dd: cmp    $0x5,%rbx
  0x00000000030f49e1: jne    0x00000000030f4a68
  0x00000000030f49e7: mov    0x8(%rsi),%ebx
  0x00000000030f49ea: shl    $0x3,%rbx
  0x00000000030f49ee: mov    0xa8(%rbx),%rbx
  0x00000000030f49f5: or     %r15,%rbx
  0x00000000030f49f8: xor    %rax,%rbx
  0x00000000030f49fb: and    $0xffffffffffffff87,%rbx
  0x00000000030f49ff: je     0x00000000030f4a90
  0x00000000030f4a05: test   $0x7,%rbx
  0x00000000030f4a0c: jne    0x00000000030f4a55
  0x00000000030f4a0e: test   $0x300,%rbx
  0x00000000030f4a15: jne    0x00000000030f4a34
  0x00000000030f4a17: and    $0x37f,%rax
  0x00000000030f4a1e: mov    %rax,%rbx
  0x00000000030f4a21: or     %r15,%rbx
  0x00000000030f4a24: lock cmpxchg %rbx,(%rsi)
  0x00000000030f4a29: jne    0x00000000030f6c1b
  0x00000000030f4a2f: jmpq   0x00000000030f4a90
  0x00000000030f4a34: mov    0x8(%rsi),%ebx
  0x00000000030f4a37: shl    $0x3,%rbx
  0x00000000030f4a3b: mov    0xa8(%rbx),%rbx
  0x00000000030f4a42: or     %r15,%rbx
  0x00000000030f4a45: lock cmpxchg %rbx,(%rsi)
  0x00000000030f4a4a: jne    0x00000000030f6c1b
  0x00000000030f4a50: jmpq   0x00000000030f4a90
  0x00000000030f4a55: mov    0x8(%rsi),%ebx
  0x00000000030f4a58: shl    $0x3,%rbx
  0x00000000030f4a5c: mov    0xa8(%rbx),%rbx
  0x00000000030f4a63: lock cmpxchg %rbx,(%rsi)
  0x00000000030f4a68: mov    (%rsi),%rax
  0x00000000030f4a6b: or     $0x1,%rax
  0x00000000030f4a6f: mov    %rax,(%rdi)
  0x00000000030f4a72: lock cmpxchg %rdi,(%rsi)
  0x00000000030f4a77: je     0x00000000030f4a90
  0x00000000030f4a7d: sub    %rsp,%rax
  0x00000000030f4a80: and    $0xfffffffffffff007,%rax
  0x00000000030f4a87: mov    %rax,(%rdi)
  0x00000000030f4a8a: jne    0x00000000030f6c1b  ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)

  0x00000000030f4a90: mov    0x14(%rdx),%edi    ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@30 (line 476)

  0x00000000030f4a93: cmp    (%rdi),%rax        ;*invokevirtual empty
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ; implicit exception: dispatches to 0x00000000030f6c2e
  0x00000000030f4a96: mov    %rdi,%rax
  0x00000000030f4a99: movabs $0x174dc9c0,%rbx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f4aa3: movabs $0x100016978,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00000000030f4aad: mov    %r10,0x180(%rbx)
  0x00000000030f4ab4: addq   $0x1,0x188(%rbx)
  0x00000000030f4abc: movabs $0x174dd800,%rax   ;   {metadata(method data for {method} {0x0000000017277858} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4ac6: mov    0xdc(%rax),%ebx
  0x00000000030f4acc: add    $0x8,%ebx
  0x00000000030f4acf: mov    %ebx,0xdc(%rax)
  0x00000000030f4ad5: movabs $0x17277850,%rax   ;   {metadata({method} {0x0000000017277858} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4adf: and    $0x7ffff8,%ebx
  0x00000000030f4ae5: cmp    $0x0,%ebx
  0x00000000030f4ae8: je     0x00000000030f6c33
  0x00000000030f4aee: mov    %rdi,%rax
  0x00000000030f4af1: movabs $0x174dd800,%rbx   ;   {metadata(method data for {method} {0x0000000017277858} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4afb: mov    0x8(%rax),%eax
  0x00000000030f4afe: shl    $0x3,%rax
  0x00000000030f4b02: cmp    0x110(%rbx),%rax
  0x00000000030f4b09: jne    0x00000000030f4b18
  0x00000000030f4b0b: addq   $0x1,0x118(%rbx)
  0x00000000030f4b13: jmpq   0x00000000030f4b7e
  0x00000000030f4b18: cmp    0x120(%rbx),%rax
  0x00000000030f4b1f: jne    0x00000000030f4b2e
  0x00000000030f4b21: addq   $0x1,0x128(%rbx)
  0x00000000030f4b29: jmpq   0x00000000030f4b7e
  0x00000000030f4b2e: cmpq   $0x0,0x110(%rbx)
  0x00000000030f4b39: jne    0x00000000030f4b52
  0x00000000030f4b3b: mov    %rax,0x110(%rbx)
  0x00000000030f4b42: movq   $0x1,0x118(%rbx)
  0x00000000030f4b4d: jmpq   0x00000000030f4b7e
  0x00000000030f4b52: cmpq   $0x0,0x120(%rbx)
  0x00000000030f4b5d: jne    0x00000000030f4b76
  0x00000000030f4b5f: mov    %rax,0x120(%rbx)
  0x00000000030f4b66: movq   $0x1,0x128(%rbx)
  0x00000000030f4b71: jmpq   0x00000000030f4b7e
  0x00000000030f4b76: addq   $0x1,0x108(%rbx)
  0x00000000030f4b7e: lea    0x118(%rsp),%rbx
  0x00000000030f4b86: mov    %rdi,0x8(%rbx)
  0x00000000030f4b8a: mov    (%rdi),%rax
  0x00000000030f4b8d: mov    %rax,%rcx
  0x00000000030f4b90: and    $0x7,%rcx
  0x00000000030f4b94: cmp    $0x5,%rcx
  0x00000000030f4b98: jne    0x00000000030f4c1f
  0x00000000030f4b9e: mov    0x8(%rdi),%ecx
  0x00000000030f4ba1: shl    $0x3,%rcx
  0x00000000030f4ba5: mov    0xa8(%rcx),%rcx
  0x00000000030f4bac: or     %r15,%rcx
  0x00000000030f4baf: xor    %rax,%rcx
  0x00000000030f4bb2: and    $0xffffffffffffff87,%rcx
  0x00000000030f4bb6: je     0x00000000030f4c47
  0x00000000030f4bbc: test   $0x7,%rcx
  0x00000000030f4bc3: jne    0x00000000030f4c0c
  0x00000000030f4bc5: test   $0x300,%rcx
  0x00000000030f4bcc: jne    0x00000000030f4beb
  0x00000000030f4bce: and    $0x37f,%rax
  0x00000000030f4bd5: mov    %rax,%rcx
  0x00000000030f4bd8: or     %r15,%rcx
  0x00000000030f4bdb: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4be0: jne    0x00000000030f6c4a
  0x00000000030f4be6: jmpq   0x00000000030f4c47
  0x00000000030f4beb: mov    0x8(%rdi),%ecx
  0x00000000030f4bee: shl    $0x3,%rcx
  0x00000000030f4bf2: mov    0xa8(%rcx),%rcx
  0x00000000030f4bf9: or     %r15,%rcx
  0x00000000030f4bfc: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4c01: jne    0x00000000030f6c4a
  0x00000000030f4c07: jmpq   0x00000000030f4c47
  0x00000000030f4c0c: mov    0x8(%rdi),%ecx
  0x00000000030f4c0f: shl    $0x3,%rcx
  0x00000000030f4c13: mov    0xa8(%rcx),%rcx
  0x00000000030f4c1a: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4c1f: mov    (%rdi),%rax
  0x00000000030f4c22: or     $0x1,%rax
  0x00000000030f4c26: mov    %rax,(%rbx)
  0x00000000030f4c29: lock cmpxchg %rbx,(%rdi)
  0x00000000030f4c2e: je     0x00000000030f4c47
  0x00000000030f4c34: sub    %rsp,%rax
  0x00000000030f4c37: and    $0xfffffffffffff007,%rax
  0x00000000030f4c3e: mov    %rax,(%rbx)
  0x00000000030f4c41: jne    0x00000000030f6c4a  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f4c47: mov    0x10(%rdi),%edi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f4c4a: lea    0x118(%rsp),%rax
  0x00000000030f4c52: mov    0x8(%rax),%rcx
  0x00000000030f4c56: mov    (%rcx),%rbx
  0x00000000030f4c59: and    $0x7,%rbx
  0x00000000030f4c5d: cmp    $0x5,%rbx
  0x00000000030f4c61: je     0x00000000030f4c7e
  0x00000000030f4c67: mov    (%rax),%rbx
  0x00000000030f4c6a: test   %rbx,%rbx
  0x00000000030f4c6d: je     0x00000000030f4c7e
  0x00000000030f4c73: lock cmpxchg %rbx,(%rcx)
  0x00000000030f4c78: jne    0x00000000030f6c5d  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f4c7e: cmp    $0x0,%edi
  0x00000000030f4c81: movabs $0x174dd800,%rax   ;   {metadata(method data for {method} {0x0000000017277858} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4c8b: movabs $0x138,%rdi
  0x00000000030f4c95: jne    0x00000000030f4ca5
  0x00000000030f4c9b: movabs $0x148,%rdi
  0x00000000030f4ca5: mov    (%rax,%rdi,1),%rbx
  0x00000000030f4ca9: lea    0x1(%rbx),%rbx
  0x00000000030f4cad: mov    %rbx,(%rax,%rdi,1)
  0x00000000030f4cb1: jne    0x00000000030f4cd1  ;*ifne
                                                ; - java.util.Stack::empty@4 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f4cb7: movabs $0x174dd800,%rax   ;   {metadata(method data for {method} {0x0000000017277858} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4cc1: incl   0x158(%rax)
  0x00000000030f4cc7: mov    $0x1,%eax
  0x00000000030f4ccc: jmpq   0x00000000030f4cd6  ;*goto
                                                ; - java.util.Stack::empty@8 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f4cd1: mov    $0x0,%eax          ;*ireturn
                                                ; - java.util.Stack::empty@12 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f4cd6: cmp    $0x0,%eax
  0x00000000030f4cd9: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f4ce3: movabs $0x1a8,%rdi
  0x00000000030f4ced: je     0x00000000030f4cfd
  0x00000000030f4cf3: movabs $0x1b8,%rdi
  0x00000000030f4cfd: mov    (%rax,%rdi,1),%rbx
  0x00000000030f4d01: lea    0x1(%rbx),%rbx
  0x00000000030f4d05: mov    %rbx,(%rax,%rdi,1)
  0x00000000030f4d09: jne    0x00000000030f67d1  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@36 (line 476)

  0x00000000030f4d0f: mov    0x14(%rdx),%edi    ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@44 (line 479)

  0x00000000030f4d12: cmp    (%rdi),%rax        ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ; implicit exception: dispatches to 0x00000000030f6c73
  0x00000000030f4d15: mov    %rdi,%rax
  0x00000000030f4d18: movabs $0x174dc9c0,%rbx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f4d22: movabs $0x100016978,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00000000030f4d2c: mov    %r10,0x1d0(%rbx)
  0x00000000030f4d33: addq   $0x1,0x1d8(%rbx)
  0x00000000030f4d3b: lea    0x118(%rsp),%rbx
  0x00000000030f4d43: mov    %rdi,0x8(%rbx)
  0x00000000030f4d47: mov    (%rdi),%rax
  0x00000000030f4d4a: mov    %rax,%rcx
  0x00000000030f4d4d: and    $0x7,%rcx
  0x00000000030f4d51: cmp    $0x5,%rcx
  0x00000000030f4d55: jne    0x00000000030f4ddc
  0x00000000030f4d5b: mov    0x8(%rdi),%ecx
  0x00000000030f4d5e: shl    $0x3,%rcx
  0x00000000030f4d62: mov    0xa8(%rcx),%rcx
  0x00000000030f4d69: or     %r15,%rcx
  0x00000000030f4d6c: xor    %rax,%rcx
  0x00000000030f4d6f: and    $0xffffffffffffff87,%rcx
  0x00000000030f4d73: je     0x00000000030f4e04
  0x00000000030f4d79: test   $0x7,%rcx
  0x00000000030f4d80: jne    0x00000000030f4dc9
  0x00000000030f4d82: test   $0x300,%rcx
  0x00000000030f4d89: jne    0x00000000030f4da8
  0x00000000030f4d8b: and    $0x37f,%rax
  0x00000000030f4d92: mov    %rax,%rcx
  0x00000000030f4d95: or     %r15,%rcx
  0x00000000030f4d98: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4d9d: jne    0x00000000030f6c78
  0x00000000030f4da3: jmpq   0x00000000030f4e04
  0x00000000030f4da8: mov    0x8(%rdi),%ecx
  0x00000000030f4dab: shl    $0x3,%rcx
  0x00000000030f4daf: mov    0xa8(%rcx),%rcx
  0x00000000030f4db6: or     %r15,%rcx
  0x00000000030f4db9: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4dbe: jne    0x00000000030f6c78
  0x00000000030f4dc4: jmpq   0x00000000030f4e04
  0x00000000030f4dc9: mov    0x8(%rdi),%ecx
  0x00000000030f4dcc: shl    $0x3,%rcx
  0x00000000030f4dd0: mov    0xa8(%rcx),%rcx
  0x00000000030f4dd7: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4ddc: mov    (%rdi),%rax
  0x00000000030f4ddf: or     $0x1,%rax
  0x00000000030f4de3: mov    %rax,(%rbx)
  0x00000000030f4de6: lock cmpxchg %rbx,(%rdi)
  0x00000000030f4deb: je     0x00000000030f4e04
  0x00000000030f4df1: sub    %rsp,%rax
  0x00000000030f4df4: and    $0xfffffffffffff007,%rax
  0x00000000030f4dfb: mov    %rax,(%rbx)
  0x00000000030f4dfe: jne    0x00000000030f6c78  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f4e04: movabs $0x174ddbd0,%rax   ;   {metadata(method data for {method} {0x0000000017277708} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4e0e: mov    0xdc(%rax),%ebx
  0x00000000030f4e14: add    $0x8,%ebx
  0x00000000030f4e17: mov    %ebx,0xdc(%rax)
  0x00000000030f4e1d: movabs $0x17277700,%rax   ;   {metadata({method} {0x0000000017277708} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4e27: and    $0x7ffff8,%ebx
  0x00000000030f4e2d: cmp    $0x0,%ebx
  0x00000000030f4e30: je     0x00000000030f6c8b
  0x00000000030f4e36: mov    %rdi,%rax
  0x00000000030f4e39: movabs $0x174ddbd0,%rbx   ;   {metadata(method data for {method} {0x0000000017277708} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4e43: mov    0x8(%rax),%eax
  0x00000000030f4e46: shl    $0x3,%rax
  0x00000000030f4e4a: cmp    0x110(%rbx),%rax
  0x00000000030f4e51: jne    0x00000000030f4e60
  0x00000000030f4e53: addq   $0x1,0x118(%rbx)
  0x00000000030f4e5b: jmpq   0x00000000030f4ec6
  0x00000000030f4e60: cmp    0x120(%rbx),%rax
  0x00000000030f4e67: jne    0x00000000030f4e76
  0x00000000030f4e69: addq   $0x1,0x128(%rbx)
  0x00000000030f4e71: jmpq   0x00000000030f4ec6
  0x00000000030f4e76: cmpq   $0x0,0x110(%rbx)
  0x00000000030f4e81: jne    0x00000000030f4e9a
  0x00000000030f4e83: mov    %rax,0x110(%rbx)
  0x00000000030f4e8a: movq   $0x1,0x118(%rbx)
  0x00000000030f4e95: jmpq   0x00000000030f4ec6
  0x00000000030f4e9a: cmpq   $0x0,0x120(%rbx)
  0x00000000030f4ea5: jne    0x00000000030f4ebe
  0x00000000030f4ea7: mov    %rax,0x120(%rbx)
  0x00000000030f4eae: movq   $0x1,0x128(%rbx)
  0x00000000030f4eb9: jmpq   0x00000000030f4ec6
  0x00000000030f4ebe: addq   $0x1,0x108(%rbx)
  0x00000000030f4ec6: lea    0x128(%rsp),%rbx
  0x00000000030f4ece: mov    %rdi,0x8(%rbx)
  0x00000000030f4ed2: mov    (%rdi),%rax
  0x00000000030f4ed5: mov    %rax,%rcx
  0x00000000030f4ed8: and    $0x7,%rcx
  0x00000000030f4edc: cmp    $0x5,%rcx
  0x00000000030f4ee0: jne    0x00000000030f4f67
  0x00000000030f4ee6: mov    0x8(%rdi),%ecx
  0x00000000030f4ee9: shl    $0x3,%rcx
  0x00000000030f4eed: mov    0xa8(%rcx),%rcx
  0x00000000030f4ef4: or     %r15,%rcx
  0x00000000030f4ef7: xor    %rax,%rcx
  0x00000000030f4efa: and    $0xffffffffffffff87,%rcx
  0x00000000030f4efe: je     0x00000000030f4f8f
  0x00000000030f4f04: test   $0x7,%rcx
  0x00000000030f4f0b: jne    0x00000000030f4f54
  0x00000000030f4f0d: test   $0x300,%rcx
  0x00000000030f4f14: jne    0x00000000030f4f33
  0x00000000030f4f16: and    $0x37f,%rax
  0x00000000030f4f1d: mov    %rax,%rcx
  0x00000000030f4f20: or     %r15,%rcx
  0x00000000030f4f23: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4f28: jne    0x00000000030f6ca2
  0x00000000030f4f2e: jmpq   0x00000000030f4f8f
  0x00000000030f4f33: mov    0x8(%rdi),%ecx
  0x00000000030f4f36: shl    $0x3,%rcx
  0x00000000030f4f3a: mov    0xa8(%rcx),%rcx
  0x00000000030f4f41: or     %r15,%rcx
  0x00000000030f4f44: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4f49: jne    0x00000000030f6ca2
  0x00000000030f4f4f: jmpq   0x00000000030f4f8f
  0x00000000030f4f54: mov    0x8(%rdi),%ecx
  0x00000000030f4f57: shl    $0x3,%rcx
  0x00000000030f4f5b: mov    0xa8(%rcx),%rcx
  0x00000000030f4f62: lock cmpxchg %rcx,(%rdi)
  0x00000000030f4f67: mov    (%rdi),%rax
  0x00000000030f4f6a: or     $0x1,%rax
  0x00000000030f4f6e: mov    %rax,(%rbx)
  0x00000000030f4f71: lock cmpxchg %rbx,(%rdi)
  0x00000000030f4f76: je     0x00000000030f4f8f
  0x00000000030f4f7c: sub    %rsp,%rax
  0x00000000030f4f7f: and    $0xfffffffffffff007,%rax
  0x00000000030f4f86: mov    %rax,(%rbx)
  0x00000000030f4f89: jne    0x00000000030f6ca2  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f4f8f: mov    0x10(%rdi),%ebx    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f4f92: lea    0x128(%rsp),%rax
  0x00000000030f4f9a: mov    0x8(%rax),%r9
  0x00000000030f4f9e: mov    (%r9),%rcx
  0x00000000030f4fa1: and    $0x7,%rcx
  0x00000000030f4fa5: cmp    $0x5,%rcx
  0x00000000030f4fa9: je     0x00000000030f4fc6
  0x00000000030f4faf: mov    (%rax),%rcx
  0x00000000030f4fb2: test   %rcx,%rcx
  0x00000000030f4fb5: je     0x00000000030f4fc6
  0x00000000030f4fbb: lock cmpxchg %rcx,(%r9)
  0x00000000030f4fc0: jne    0x00000000030f6cb5  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f4fc6: mov    %rdi,%rax
  0x00000000030f4fc9: movabs $0x174ddbd0,%rcx   ;   {metadata(method data for {method} {0x0000000017277708} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f4fd3: movabs $0x100016978,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00000000030f4fdd: mov    %r10,0x140(%rcx)
  0x00000000030f4fe4: addq   $0x1,0x148(%rcx)
  0x00000000030f4fec: lea    0x128(%rsp),%rcx
  0x00000000030f4ff4: mov    %rdi,0x8(%rcx)
  0x00000000030f4ff8: mov    (%rdi),%rax
  0x00000000030f4ffb: mov    %rax,%r9
  0x00000000030f4ffe: and    $0x7,%r9
  0x00000000030f5002: cmp    $0x5,%r9
  0x00000000030f5006: jne    0x00000000030f5090
  0x00000000030f500c: mov    0x8(%rdi),%r9d
  0x00000000030f5010: shl    $0x3,%r9
  0x00000000030f5014: mov    0xa8(%r9),%r9
  0x00000000030f501b: or     %r15,%r9
  0x00000000030f501e: xor    %rax,%r9
  0x00000000030f5021: and    $0xffffffffffffff87,%r9
  0x00000000030f5025: je     0x00000000030f50b8
  0x00000000030f502b: test   $0x7,%r9
  0x00000000030f5032: jne    0x00000000030f507c
  0x00000000030f5034: test   $0x300,%r9
  0x00000000030f503b: jne    0x00000000030f505a
  0x00000000030f503d: and    $0x37f,%rax
  0x00000000030f5044: mov    %rax,%r9
  0x00000000030f5047: or     %r15,%r9
  0x00000000030f504a: lock cmpxchg %r9,(%rdi)
  0x00000000030f504f: jne    0x00000000030f6ccb
  0x00000000030f5055: jmpq   0x00000000030f50b8
  0x00000000030f505a: mov    0x8(%rdi),%r9d
  0x00000000030f505e: shl    $0x3,%r9
  0x00000000030f5062: mov    0xa8(%r9),%r9
  0x00000000030f5069: or     %r15,%r9
  0x00000000030f506c: lock cmpxchg %r9,(%rdi)
  0x00000000030f5071: jne    0x00000000030f6ccb
  0x00000000030f5077: jmpq   0x00000000030f50b8
  0x00000000030f507c: mov    0x8(%rdi),%r9d
  0x00000000030f5080: shl    $0x3,%r9
  0x00000000030f5084: mov    0xa8(%r9),%r9
  0x00000000030f508b: lock cmpxchg %r9,(%rdi)
  0x00000000030f5090: mov    (%rdi),%rax
  0x00000000030f5093: or     $0x1,%rax
  0x00000000030f5097: mov    %rax,(%rcx)
  0x00000000030f509a: lock cmpxchg %rcx,(%rdi)
  0x00000000030f509f: je     0x00000000030f50b8
  0x00000000030f50a5: sub    %rsp,%rax
  0x00000000030f50a8: and    $0xfffffffffffff007,%rax
  0x00000000030f50af: mov    %rax,(%rcx)
  0x00000000030f50b2: jne    0x00000000030f6ccb  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f50b8: movabs $0x174de160,%rax   ;   {metadata(method data for {method} {0x00000000172777b8} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f50c2: mov    0xdc(%rax),%ecx
  0x00000000030f50c8: add    $0x8,%ecx
  0x00000000030f50cb: mov    %ecx,0xdc(%rax)
  0x00000000030f50d1: movabs $0x172777b0,%rax   ;   {metadata({method} {0x00000000172777b8} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f50db: and    $0x7ffff8,%ecx
  0x00000000030f50e1: cmp    $0x0,%ecx
  0x00000000030f50e4: je     0x00000000030f6cde
  0x00000000030f50ea: mov    %rdi,%rax
  0x00000000030f50ed: movabs $0x174de160,%rcx   ;   {metadata(method data for {method} {0x00000000172777b8} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f50f7: mov    0x8(%rax),%eax
  0x00000000030f50fa: shl    $0x3,%rax
  0x00000000030f50fe: cmp    0x110(%rcx),%rax
  0x00000000030f5105: jne    0x00000000030f5114
  0x00000000030f5107: addq   $0x1,0x118(%rcx)
  0x00000000030f510f: jmpq   0x00000000030f517a
  0x00000000030f5114: cmp    0x120(%rcx),%rax
  0x00000000030f511b: jne    0x00000000030f512a
  0x00000000030f511d: addq   $0x1,0x128(%rcx)
  0x00000000030f5125: jmpq   0x00000000030f517a
  0x00000000030f512a: cmpq   $0x0,0x110(%rcx)
  0x00000000030f5135: jne    0x00000000030f514e
  0x00000000030f5137: mov    %rax,0x110(%rcx)
  0x00000000030f513e: movq   $0x1,0x118(%rcx)
  0x00000000030f5149: jmpq   0x00000000030f517a
  0x00000000030f514e: cmpq   $0x0,0x120(%rcx)
  0x00000000030f5159: jne    0x00000000030f5172
  0x00000000030f515b: mov    %rax,0x120(%rcx)
  0x00000000030f5162: movq   $0x1,0x128(%rcx)
  0x00000000030f516d: jmpq   0x00000000030f517a
  0x00000000030f5172: addq   $0x1,0x108(%rcx)
  0x00000000030f517a: lea    0x138(%rsp),%rcx
  0x00000000030f5182: mov    %rdi,0x8(%rcx)
  0x00000000030f5186: mov    (%rdi),%rax
  0x00000000030f5189: mov    %rax,%r9
  0x00000000030f518c: and    $0x7,%r9
  0x00000000030f5190: cmp    $0x5,%r9
  0x00000000030f5194: jne    0x00000000030f521e
  0x00000000030f519a: mov    0x8(%rdi),%r9d
  0x00000000030f519e: shl    $0x3,%r9
  0x00000000030f51a2: mov    0xa8(%r9),%r9
  0x00000000030f51a9: or     %r15,%r9
  0x00000000030f51ac: xor    %rax,%r9
  0x00000000030f51af: and    $0xffffffffffffff87,%r9
  0x00000000030f51b3: je     0x00000000030f5246
  0x00000000030f51b9: test   $0x7,%r9
  0x00000000030f51c0: jne    0x00000000030f520a
  0x00000000030f51c2: test   $0x300,%r9
  0x00000000030f51c9: jne    0x00000000030f51e8
  0x00000000030f51cb: and    $0x37f,%rax
  0x00000000030f51d2: mov    %rax,%r9
  0x00000000030f51d5: or     %r15,%r9
  0x00000000030f51d8: lock cmpxchg %r9,(%rdi)
  0x00000000030f51dd: jne    0x00000000030f6cf5
  0x00000000030f51e3: jmpq   0x00000000030f5246
  0x00000000030f51e8: mov    0x8(%rdi),%r9d
  0x00000000030f51ec: shl    $0x3,%r9
  0x00000000030f51f0: mov    0xa8(%r9),%r9
  0x00000000030f51f7: or     %r15,%r9
  0x00000000030f51fa: lock cmpxchg %r9,(%rdi)
  0x00000000030f51ff: jne    0x00000000030f6cf5
  0x00000000030f5205: jmpq   0x00000000030f5246
  0x00000000030f520a: mov    0x8(%rdi),%r9d
  0x00000000030f520e: shl    $0x3,%r9
  0x00000000030f5212: mov    0xa8(%r9),%r9
  0x00000000030f5219: lock cmpxchg %r9,(%rdi)
  0x00000000030f521e: mov    (%rdi),%rax
  0x00000000030f5221: or     $0x1,%rax
  0x00000000030f5225: mov    %rax,(%rcx)
  0x00000000030f5228: lock cmpxchg %rcx,(%rdi)
  0x00000000030f522d: je     0x00000000030f5246
  0x00000000030f5233: sub    %rsp,%rax
  0x00000000030f5236: and    $0xfffffffffffff007,%rax
  0x00000000030f523d: mov    %rax,(%rcx)
  0x00000000030f5240: jne    0x00000000030f6cf5  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f5246: mov    0x10(%rdi),%ecx    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f5249: lea    0x138(%rsp),%rax
  0x00000000030f5251: mov    0x8(%rax),%r11
  0x00000000030f5255: mov    (%r11),%r9
  0x00000000030f5258: and    $0x7,%r9
  0x00000000030f525c: cmp    $0x5,%r9
  0x00000000030f5260: je     0x00000000030f527d
  0x00000000030f5266: mov    (%rax),%r9
  0x00000000030f5269: test   %r9,%r9
  0x00000000030f526c: je     0x00000000030f527d
  0x00000000030f5272: lock cmpxchg %r9,(%r11)
  0x00000000030f5277: jne    0x00000000030f6d08  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f527d: cmp    $0x0,%ecx
  0x00000000030f5280: movabs $0x174de160,%rax   ;   {metadata(method data for {method} {0x00000000172777b8} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f528a: movabs $0x138,%r9
  0x00000000030f5294: jne    0x00000000030f52a4
  0x00000000030f529a: movabs $0x148,%r9
  0x00000000030f52a4: mov    (%rax,%r9,1),%r11
  0x00000000030f52a8: lea    0x1(%r11),%r11
  0x00000000030f52ac: mov    %r11,(%rax,%r9,1)
  0x00000000030f52b0: mov    %ebx,0x90(%rsp)
  0x00000000030f52b7: je     0x00000000030f6921  ;*ifne
                                                ; - java.util.Stack::peek@6 (line 101)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f52bd: mov    %rsi,0xa0(%rsp)
  0x00000000030f52c5: mov    %rdi,%rax
  0x00000000030f52c8: movabs $0x174de160,%r9    ;   {metadata(method data for {method} {0x00000000172777b8} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f52d2: mov    0x8(%rax),%eax
  0x00000000030f52d5: shl    $0x3,%rax
  0x00000000030f52d9: cmp    0x170(%r9),%rax
  0x00000000030f52e0: jne    0x00000000030f52ef
  0x00000000030f52e2: addq   $0x1,0x178(%r9)
  0x00000000030f52ea: jmpq   0x00000000030f5355
  0x00000000030f52ef: cmp    0x180(%r9),%rax
  0x00000000030f52f6: jne    0x00000000030f5305
  0x00000000030f52f8: addq   $0x1,0x188(%r9)
  0x00000000030f5300: jmpq   0x00000000030f5355
  0x00000000030f5305: cmpq   $0x0,0x170(%r9)
  0x00000000030f5310: jne    0x00000000030f5329
  0x00000000030f5312: mov    %rax,0x170(%r9)
  0x00000000030f5319: movq   $0x1,0x178(%r9)
  0x00000000030f5324: jmpq   0x00000000030f5355
  0x00000000030f5329: cmpq   $0x0,0x180(%r9)
  0x00000000030f5334: jne    0x00000000030f534d
  0x00000000030f5336: mov    %rax,0x180(%r9)
  0x00000000030f533d: movq   $0x1,0x188(%r9)
  0x00000000030f5348: jmpq   0x00000000030f5355
  0x00000000030f534d: addq   $0x1,0x168(%r9)
  0x00000000030f5355: dec    %ecx
  0x00000000030f5357: mov    %rcx,%r8
  0x00000000030f535a: mov    %rdi,%rdx          ;*invokevirtual elementAt
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f535d: mov    %rdi,0x88(%rsp)
  0x00000000030f5365: nop
  0x00000000030f5366: nop
  0x00000000030f5367: callq  0x00000000030161a0  ; OopMap{[160]=Oop [152]=Oop [136]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=2956}
                                                ;*invokevirtual elementAt
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x00000000030f536c: mov    %rax,0xa8(%rsp)
  0x00000000030f5374: lea    0x128(%rsp),%rax
  0x00000000030f537c: mov    0x8(%rax),%rdx
  0x00000000030f5380: mov    (%rdx),%r8
  0x00000000030f5383: and    $0x7,%r8
  0x00000000030f5387: cmp    $0x5,%r8
  0x00000000030f538b: je     0x00000000030f53a8
  0x00000000030f5391: mov    (%rax),%r8
  0x00000000030f5394: test   %r8,%r8
  0x00000000030f5397: je     0x00000000030f53a8
  0x00000000030f539d: lock cmpxchg %r8,(%rdx)
  0x00000000030f53a2: jne    0x00000000030f6d1e  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f53a8: mov    0x88(%rsp),%rdi
  0x00000000030f53b0: movabs $0x174ddbd0,%r8    ;   {metadata(method data for {method} {0x0000000017277708} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f53ba: mov    0x8(%rdi),%edi
  0x00000000030f53bd: shl    $0x3,%rdi
  0x00000000030f53c1: cmp    0x170(%r8),%rdi
  0x00000000030f53c8: jne    0x00000000030f53d7
  0x00000000030f53ca: addq   $0x1,0x178(%r8)
  0x00000000030f53d2: jmpq   0x00000000030f543d
  0x00000000030f53d7: cmp    0x180(%r8),%rdi
  0x00000000030f53de: jne    0x00000000030f53ed
  0x00000000030f53e0: addq   $0x1,0x188(%r8)
  0x00000000030f53e8: jmpq   0x00000000030f543d
  0x00000000030f53ed: cmpq   $0x0,0x170(%r8)
  0x00000000030f53f8: jne    0x00000000030f5411
  0x00000000030f53fa: mov    %rdi,0x170(%r8)
  0x00000000030f5401: movq   $0x1,0x178(%r8)
  0x00000000030f540c: jmpq   0x00000000030f543d
  0x00000000030f5411: cmpq   $0x0,0x180(%r8)
  0x00000000030f541c: jne    0x00000000030f5435
  0x00000000030f541e: mov    %rdi,0x180(%r8)
  0x00000000030f5425: movq   $0x1,0x188(%r8)
  0x00000000030f5430: jmpq   0x00000000030f543d
  0x00000000030f5435: addq   $0x1,0x168(%r8)
  0x00000000030f543d: mov    0x90(%rsp),%ebx
  0x00000000030f5444: dec    %ebx
  0x00000000030f5446: mov    %rbx,%r8
  0x00000000030f5449: mov    0x88(%rsp),%rdx    ;*invokevirtual removeElementAt
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f5451: nop
  0x00000000030f5452: nop
  0x00000000030f5453: nop
  0x00000000030f5454: nop
  0x00000000030f5455: nop
  0x00000000030f5456: nop
  0x00000000030f5457: callq  0x00000000030161a0  ; OopMap{[160]=Oop [152]=Oop [168]=Oop [256]=Oop [272]=Oop [288]=Oop off=3196}
                                                ;*invokevirtual removeElementAt
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x00000000030f545c: lea    0x118(%rsp),%rax
  0x00000000030f5464: mov    0x8(%rax),%rsi
  0x00000000030f5468: mov    (%rsi),%rdx
  0x00000000030f546b: and    $0x7,%rdx
  0x00000000030f546f: cmp    $0x5,%rdx
  0x00000000030f5473: je     0x00000000030f5490
  0x00000000030f5479: mov    (%rax),%rdx
  0x00000000030f547c: test   %rdx,%rdx
  0x00000000030f547f: je     0x00000000030f5490
  0x00000000030f5485: lock cmpxchg %rdx,(%rsi)
  0x00000000030f548a: jne    0x00000000030f6d34  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f5490: mov    0xa8(%rsp),%rax
  0x00000000030f5498: cmp    $0x0,%rax
  0x00000000030f549c: jne    0x00000000030f54b7
  0x00000000030f549e: movabs $0x174dc9c0,%rdx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f54a8: orl    $0x100,0x1f0(%rdx)
  0x00000000030f54b2: jmpq   0x00000000030f5577
  0x00000000030f54b7: movabs $0x10000f038,%rdi  ;   {metadata(&apos;java/net/URL&apos;)}
  0x00000000030f54c1: mov    0x8(%rax),%esi
  0x00000000030f54c4: shl    $0x3,%rsi
  0x00000000030f54c8: cmp    %rsi,%rdi
  0x00000000030f54cb: jne    0x00000000030f555b
  0x00000000030f54d1: movabs $0x174dc9c0,%rdx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f54db: mov    0x8(%rax),%edi
  0x00000000030f54de: shl    $0x3,%rdi
  0x00000000030f54e2: cmp    0x200(%rdx),%rdi
  0x00000000030f54e9: jne    0x00000000030f54f8
  0x00000000030f54eb: addq   $0x1,0x208(%rdx)
  0x00000000030f54f3: jmpq   0x00000000030f5577
  0x00000000030f54f8: cmp    0x210(%rdx),%rdi
  0x00000000030f54ff: jne    0x00000000030f550e
  0x00000000030f5501: addq   $0x1,0x218(%rdx)
  0x00000000030f5509: jmpq   0x00000000030f5577
  0x00000000030f550e: cmpq   $0x0,0x200(%rdx)
  0x00000000030f5519: jne    0x00000000030f5532
  0x00000000030f551b: mov    %rdi,0x200(%rdx)
  0x00000000030f5522: movq   $0x1,0x208(%rdx)
  0x00000000030f552d: jmpq   0x00000000030f5577
  0x00000000030f5532: cmpq   $0x0,0x210(%rdx)
  0x00000000030f553d: jne    0x00000000030f5556
  0x00000000030f553f: mov    %rdi,0x210(%rdx)
  0x00000000030f5546: movq   $0x1,0x218(%rdx)
  0x00000000030f5551: jmpq   0x00000000030f5577
  0x00000000030f5556: jmpq   0x00000000030f5577
  0x00000000030f555b: movabs $0x174dc9c0,%rdx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5565: subq   $0x1,0x1f8(%rdx)
  0x00000000030f556d: jmpq   0x00000000030f6d4a
  0x00000000030f5572: jmpq   0x00000000030f5577
  0x00000000030f5577: mov    %rax,%rsi          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 479)

  0x00000000030f557a: lea    0x108(%rsp),%rax
  0x00000000030f5582: mov    0x8(%rax),%rdi
  0x00000000030f5586: mov    (%rdi),%rdx
  0x00000000030f5589: and    $0x7,%rdx
  0x00000000030f558d: cmp    $0x5,%rdx
  0x00000000030f5591: je     0x00000000030f55ae
  0x00000000030f5597: mov    (%rax),%rdx
  0x00000000030f559a: test   %rdx,%rdx
  0x00000000030f559d: je     0x00000000030f55ae
  0x00000000030f55a3: lock cmpxchg %rdx,(%rdi)
  0x00000000030f55a8: jne    0x00000000030f6d53  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@55 (line 481)

  0x00000000030f55ae: movabs $0x174dc9c0,%rdx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f55b8: incl   0x228(%rdx)        ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@56 (line 481)

  0x00000000030f55be: movabs $0x174dc9c0,%rdi   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f55c8: addq   $0x1,0x240(%rdi)
  0x00000000030f55d0: mov    %rsi,%rdx          ;*invokestatic urlNoFragString
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 485)

  0x00000000030f55d3: mov    %rsi,0xb0(%rsp)
  0x00000000030f55db: nop
  0x00000000030f55dc: nop
  0x00000000030f55dd: nop
  0x00000000030f55de: nop
  0x00000000030f55df: callq  0x0000000003016620  ; OopMap{[176]=Oop [152]=Oop [256]=Oop off=3588}
                                                ;*invokestatic urlNoFragString
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 485)
                                                ;   {static_call}
  0x00000000030f55e4: mov    %rax,0xc0(%rsp)
  0x00000000030f55ec: mov    0x98(%rsp),%rdx
  0x00000000030f55f4: mov    0x1c(%rdx),%esi    ;*getfield lmap
                                                ; - sun.misc.URLClassPath::getLoader@72 (line 486)

  0x00000000030f55f7: cmp    (%rsi),%rax        ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ; implicit exception: dispatches to 0x00000000030f6d69
  0x00000000030f55fa: mov    %rsi,%rdi
  0x00000000030f55fd: movabs $0x174dc9c0,%rbx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5607: mov    0x8(%rdi),%edi
  0x00000000030f560a: shl    $0x3,%rdi
  0x00000000030f560e: cmp    0x258(%rbx),%rdi
  0x00000000030f5615: jne    0x00000000030f5624
  0x00000000030f5617: addq   $0x1,0x260(%rbx)
  0x00000000030f561f: jmpq   0x00000000030f568a
  0x00000000030f5624: cmp    0x268(%rbx),%rdi
  0x00000000030f562b: jne    0x00000000030f563a
  0x00000000030f562d: addq   $0x1,0x270(%rbx)
  0x00000000030f5635: jmpq   0x00000000030f568a
  0x00000000030f563a: cmpq   $0x0,0x258(%rbx)
  0x00000000030f5645: jne    0x00000000030f565e
  0x00000000030f5647: mov    %rdi,0x258(%rbx)
  0x00000000030f564e: movq   $0x1,0x260(%rbx)
  0x00000000030f5659: jmpq   0x00000000030f568a
  0x00000000030f565e: cmpq   $0x0,0x268(%rbx)
  0x00000000030f5669: jne    0x00000000030f5682
  0x00000000030f566b: mov    %rdi,0x268(%rbx)
  0x00000000030f5672: movq   $0x1,0x270(%rbx)
  0x00000000030f567d: jmpq   0x00000000030f568a
  0x00000000030f5682: addq   $0x1,0x250(%rbx)
  0x00000000030f568a: movabs $0x174df230,%rdi   ;   {metadata(method data for {method} {0x00000000172ac2c8} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f5694: mov    0xdc(%rdi),%ebx
  0x00000000030f569a: add    $0x8,%ebx
  0x00000000030f569d: mov    %ebx,0xdc(%rdi)
  0x00000000030f56a3: movabs $0x172ac2c0,%rdi   ;   {metadata({method} {0x00000000172ac2c8} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f56ad: and    $0x7ffff8,%ebx
  0x00000000030f56b3: cmp    $0x0,%ebx
  0x00000000030f56b6: je     0x00000000030f6d6e
  0x00000000030f56bc: movabs $0x174df230,%rdi   ;   {metadata(method data for {method} {0x00000000172ac2c8} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f56c6: addq   $0x1,0x108(%rdi)
  0x00000000030f56ce: movabs $0x174110e0,%rdi   ;   {metadata(method data for {method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f56d8: mov    0xdc(%rdi),%ebx
  0x00000000030f56de: add    $0x8,%ebx
  0x00000000030f56e1: mov    %ebx,0xdc(%rdi)
  0x00000000030f56e7: movabs $0x172ab870,%rdi   ;   {metadata({method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f56f1: and    $0x7ffff8,%ebx
  0x00000000030f56f7: cmp    $0x0,%ebx
  0x00000000030f56fa: je     0x00000000030f6d85
  0x00000000030f5700: cmp    $0x0,%rax
  0x00000000030f5704: movabs $0x174110e0,%rdi   ;   {metadata(method data for {method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f570e: movabs $0x108,%rbx
  0x00000000030f5718: jne    0x00000000030f5728
  0x00000000030f571e: movabs $0x118,%rbx
  0x00000000030f5728: mov    (%rdi,%rbx,1),%rcx
  0x00000000030f572c: lea    0x1(%rcx),%rcx
  0x00000000030f5730: mov    %rcx,(%rdi,%rbx,1)
  0x00000000030f5734: jne    0x00000000030f575c  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000030f573a: movabs $0x174110e0,%rdi   ;   {metadata(method data for {method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f5744: incl   0x128(%rdi)
  0x00000000030f574a: mov    $0x0,%edi
  0x00000000030f574f: mov    %rsi,0xb8(%rsp)
  0x00000000030f5757: jmpq   0x00000000030f5791  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000030f575c: mov    %rsi,0xb8(%rsp)
  0x00000000030f5764: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000030f6d9c
  0x00000000030f5767: mov    %rax,%rdi
  0x00000000030f576a: movabs $0x174110e0,%rbx   ;   {metadata(method data for {method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f5774: addq   $0x1,0x160(%rbx)
  0x00000000030f577c: mov    %rax,%rdx          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000030f577f: callq  0x00000000030161a0  ; OopMap{[176]=Oop [184]=Oop [192]=Oop [152]=Oop [256]=Oop off=4004}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {optimized virtual_call}
  0x00000000030f5784: mov    %rax,%r8
  0x00000000030f5787: shr    $0x10,%r8d
  0x00000000030f578b: xor    %rax,%r8
  0x00000000030f578e: mov    %r8,%rdi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000030f5791: mov    0xb8(%rsp),%rsi
  0x00000000030f5799: mov    %rsi,%r8
  0x00000000030f579c: movabs $0x174df230,%r9    ;   {metadata(method data for {method} {0x00000000172ac2c8} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f57a6: mov    0x8(%r8),%r8d
  0x00000000030f57aa: shl    $0x3,%r8
  0x00000000030f57ae: cmp    0x120(%r9),%r8
  0x00000000030f57b5: jne    0x00000000030f57c4
  0x00000000030f57b7: addq   $0x1,0x128(%r9)
  0x00000000030f57bf: jmpq   0x00000000030f582a
  0x00000000030f57c4: cmp    0x130(%r9),%r8
  0x00000000030f57cb: jne    0x00000000030f57da
  0x00000000030f57cd: addq   $0x1,0x138(%r9)
  0x00000000030f57d5: jmpq   0x00000000030f582a
  0x00000000030f57da: cmpq   $0x0,0x120(%r9)
  0x00000000030f57e5: jne    0x00000000030f57fe
  0x00000000030f57e7: mov    %r8,0x120(%r9)
  0x00000000030f57ee: movq   $0x1,0x128(%r9)
  0x00000000030f57f9: jmpq   0x00000000030f582a
  0x00000000030f57fe: cmpq   $0x0,0x130(%r9)
  0x00000000030f5809: jne    0x00000000030f5822
  0x00000000030f580b: mov    %r8,0x130(%r9)
  0x00000000030f5812: movq   $0x1,0x138(%r9)
  0x00000000030f581d: jmpq   0x00000000030f582a
  0x00000000030f5822: addq   $0x1,0x118(%r9)
  0x00000000030f582a: mov    %rdi,%r8
  0x00000000030f582d: mov    0xc0(%rsp),%r9
  0x00000000030f5835: mov    %rsi,%rdx          ;*invokevirtual getNode
                                                ; - java.util.HashMap::containsKey@6 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000030f5838: nop
  0x00000000030f5839: nop
  0x00000000030f583a: nop
  0x00000000030f583b: nop
  0x00000000030f583c: nop
  0x00000000030f583d: nop
  0x00000000030f583e: nop
  0x00000000030f583f: callq  0x00000000030161a0  ; OopMap{[176]=Oop [192]=Oop [152]=Oop [256]=Oop off=4196}
                                                ;*invokevirtual getNode
                                                ; - java.util.HashMap::containsKey@6 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {optimized virtual_call}
  0x00000000030f5844: cmp    $0x0,%rax
  0x00000000030f5848: movabs $0x174df230,%rdx   ;   {metadata(method data for {method} {0x00000000172ac2c8} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f5852: movabs $0x148,%rsi
  0x00000000030f585c: je     0x00000000030f586c
  0x00000000030f5862: movabs $0x158,%rsi
  0x00000000030f586c: mov    (%rdx,%rsi,1),%rdi
  0x00000000030f5870: lea    0x1(%rdi),%rdi
  0x00000000030f5874: mov    %rdi,(%rdx,%rsi,1)
  0x00000000030f5878: je     0x00000000030f5898  ;*ifnull
                                                ; - java.util.HashMap::containsKey@9 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000030f587e: movabs $0x174df230,%rdx   ;   {metadata(method data for {method} {0x00000000172ac2c8} &apos;containsKey&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f5888: incl   0x168(%rdx)
  0x00000000030f588e: mov    $0x1,%edx
  0x00000000030f5893: jmpq   0x00000000030f589d  ;*goto
                                                ; - java.util.HashMap::containsKey@13 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000030f5898: mov    $0x0,%edx          ;*ireturn
                                                ; - java.util.HashMap::containsKey@17 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000030f589d: cmp    $0x0,%edx
  0x00000000030f58a0: movabs $0x174dc9c0,%rdx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f58aa: movabs $0x280,%rsi
  0x00000000030f58b4: je     0x00000000030f58c4
  0x00000000030f58ba: movabs $0x290,%rsi
  0x00000000030f58c4: mov    (%rdx,%rsi,1),%rdi
  0x00000000030f58c8: lea    0x1(%rdi),%rdi
  0x00000000030f58cc: mov    %rdi,(%rdx,%rsi,1)
  0x00000000030f58d0: jne    0x00000000030f6475  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@79 (line 486)

  0x00000000030f58d6: mov    0xb0(%rsp),%rbx
  0x00000000030f58de: mov    0x98(%rsp),%rdx
  0x00000000030f58e6: mov    %rdx,%rsi
  0x00000000030f58e9: movabs $0x174dc9c0,%rdi   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f58f3: addq   $0x1,0x2b8(%rdi)
  0x00000000030f58fb: movabs $0x174e0058,%rsi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5905: mov    0xdc(%rsi),%edi
  0x00000000030f590b: add    $0x8,%edi
  0x00000000030f590e: mov    %edi,0xdc(%rsi)
  0x00000000030f5914: movabs $0x173949d0,%rsi   ;   {metadata({method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f591e: and    $0x7ffff8,%edi
  0x00000000030f5924: cmp    $0x0,%edi
  0x00000000030f5927: je     0x00000000030f6da1
  0x00000000030f592d: mov    %rdx,%r8
  0x00000000030f5930: movabs $0x10003cd88,%rdx  ;   {metadata(&apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000030f593a: mov    0x60(%r15),%rax
  0x00000000030f593e: lea    0x18(%rax),%rdi
  0x00000000030f5942: cmp    0x70(%r15),%rdi
  0x00000000030f5946: ja     0x00000000030f6db8
  0x00000000030f594c: mov    %rdi,0x60(%r15)
  0x00000000030f5950: mov    0xa8(%rdx),%rcx
  0x00000000030f5957: mov    %rcx,(%rax)
  0x00000000030f595a: mov    %rdx,%rcx
  0x00000000030f595d: shr    $0x3,%rcx
  0x00000000030f5961: mov    %ecx,0x8(%rax)
  0x00000000030f5964: xor    %rcx,%rcx
  0x00000000030f5967: mov    %ecx,0xc(%rax)
  0x00000000030f596a: xor    %rcx,%rcx
  0x00000000030f596d: mov    %rcx,0x10(%rax)    ;*new  ; - sun.misc.URLClassPath::getLoader@0 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000030f5971: mov    %rax,%rdx
  0x00000000030f5974: movabs $0x174e0058,%rsi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f597e: addq   $0x1,0x108(%rsi)
  0x00000000030f5986: movabs $0x174e0258,%rdx   ;   {metadata(method data for {method} {0x000000001739f4a8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000030f5990: mov    0xdc(%rdx),%esi
  0x00000000030f5996: add    $0x8,%esi
  0x00000000030f5999: mov    %esi,0xdc(%rdx)
  0x00000000030f599f: movabs $0x1739f4a0,%rdx   ;   {metadata({method} {0x000000001739f4a8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000030f59a9: and    $0x7ffff8,%esi
  0x00000000030f59af: cmp    $0x0,%esi
  0x00000000030f59b2: je     0x00000000030f6dc5
  0x00000000030f59b8: mov    %r8,%r10
  0x00000000030f59bb: mov    %r10d,0x10(%rax)
  0x00000000030f59bf: mov    %rax,%rdx
  0x00000000030f59c2: shr    $0x9,%rdx
  0x00000000030f59c6: movabs $0x11f87000,%rsi
  0x00000000030f59d0: movb   $0x0,(%rdx,%rsi,1)  ;*putfield this$0
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@2 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000030f59d4: mov    %rbx,%r10
  0x00000000030f59d7: mov    %r10d,0xc(%rax)
  0x00000000030f59db: mov    %rax,%rdx
  0x00000000030f59de: shr    $0x9,%rdx
  0x00000000030f59e2: movb   $0x0,(%rdx,%rsi,1)  ;*putfield val$url
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@7 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000030f59e6: mov    %rax,%rdx
  0x00000000030f59e9: movabs $0x174e0258,%rsi   ;   {metadata(method data for {method} {0x000000001739f4a8} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000030f59f3: addq   $0x1,0x108(%rsi)
  0x00000000030f59fb: movabs $0x172de480,%rdx   ;   {metadata(method data for {method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000030f5a05: mov    0xdc(%rdx),%esi
  0x00000000030f5a0b: add    $0x8,%esi
  0x00000000030f5a0e: mov    %esi,0xdc(%rdx)
  0x00000000030f5a14: movabs $0x171b0488,%rdx   ;   {metadata({method} {0x00000000171b0490} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000030f5a1e: and    $0x7ffff8,%esi
  0x00000000030f5a24: cmp    $0x0,%esi
  0x00000000030f5a27: je     0x00000000030f6ddc
  0x00000000030f5a2d: movabs $0x174e0058,%rdx   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5a37: addq   $0x1,0x118(%rdx)
  0x00000000030f5a3f: mov    %rax,%rdx          ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath::getLoader@9 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000030f5a42: nop
  0x00000000030f5a43: nop
  0x00000000030f5a44: nop
  0x00000000030f5a45: nop
  0x00000000030f5a46: nop
  0x00000000030f5a47: callq  0x0000000003016620  ; OopMap{[192]=Oop [152]=Oop [256]=Oop off=4716}
                                                ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath::getLoader@9 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {static_call}
  0x00000000030f5a4c: cmp    $0x0,%rax
  0x00000000030f5a50: jne    0x00000000030f5a6b
  0x00000000030f5a52: movabs $0x174e0058,%rdi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5a5c: orl    $0x100,0x120(%rdi)
  0x00000000030f5a66: jmpq   0x00000000030f5b2c
  0x00000000030f5a6b: movabs $0x10003cfa8,%rbx  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00000000030f5a75: mov    0x8(%rax),%edi
  0x00000000030f5a78: shl    $0x3,%rdi
  0x00000000030f5a7c: cmp    0x30(%rdi),%rbx
  0x00000000030f5a80: jne    0x00000000030f5b10
  0x00000000030f5a86: movabs $0x174e0058,%rdi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5a90: mov    0x8(%rax),%ebx
  0x00000000030f5a93: shl    $0x3,%rbx
  0x00000000030f5a97: cmp    0x130(%rdi),%rbx
  0x00000000030f5a9e: jne    0x00000000030f5aad
  0x00000000030f5aa0: addq   $0x1,0x138(%rdi)
  0x00000000030f5aa8: jmpq   0x00000000030f5b2c
  0x00000000030f5aad: cmp    0x140(%rdi),%rbx
  0x00000000030f5ab4: jne    0x00000000030f5ac3
  0x00000000030f5ab6: addq   $0x1,0x148(%rdi)
  0x00000000030f5abe: jmpq   0x00000000030f5b2c
  0x00000000030f5ac3: cmpq   $0x0,0x130(%rdi)
  0x00000000030f5ace: jne    0x00000000030f5ae7
  0x00000000030f5ad0: mov    %rbx,0x130(%rdi)
  0x00000000030f5ad7: movq   $0x1,0x138(%rdi)
  0x00000000030f5ae2: jmpq   0x00000000030f5b2c
  0x00000000030f5ae7: cmpq   $0x0,0x140(%rdi)
  0x00000000030f5af2: jne    0x00000000030f5b0b
  0x00000000030f5af4: mov    %rbx,0x140(%rdi)
  0x00000000030f5afb: movq   $0x1,0x148(%rdi)
  0x00000000030f5b06: jmpq   0x00000000030f5b2c
  0x00000000030f5b0b: jmpq   0x00000000030f5b2c
  0x00000000030f5b10: movabs $0x174e0058,%rdi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5b1a: subq   $0x1,0x128(%rdi)
  0x00000000030f5b22: jmpq   0x00000000030f6df3
  0x00000000030f5b27: jmpq   0x00000000030f5b2c
  0x00000000030f5b2c: mov    %rax,%rsi          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@12 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000030f5b2f: mov    %rsi,0xc8(%rsp)
  0x00000000030f5b37: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000030f6dfc
  0x00000000030f5b3a: mov    %rsi,%rdx
  0x00000000030f5b3d: movabs $0x174dc9c0,%rdi   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5b47: mov    0x8(%rdx),%edx
  0x00000000030f5b4a: shl    $0x3,%rdx
  0x00000000030f5b4e: cmp    0x2d0(%rdi),%rdx
  0x00000000030f5b55: jne    0x00000000030f5b64
  0x00000000030f5b57: addq   $0x1,0x2d8(%rdi)
  0x00000000030f5b5f: jmpq   0x00000000030f5bca
  0x00000000030f5b64: cmp    0x2e0(%rdi),%rdx
  0x00000000030f5b6b: jne    0x00000000030f5b7a
  0x00000000030f5b6d: addq   $0x1,0x2e8(%rdi)
  0x00000000030f5b75: jmpq   0x00000000030f5bca
  0x00000000030f5b7a: cmpq   $0x0,0x2d0(%rdi)
  0x00000000030f5b85: jne    0x00000000030f5b9e
  0x00000000030f5b87: mov    %rdx,0x2d0(%rdi)
  0x00000000030f5b8e: movq   $0x1,0x2d8(%rdi)
  0x00000000030f5b99: jmpq   0x00000000030f5bca
  0x00000000030f5b9e: cmpq   $0x0,0x2e0(%rdi)
  0x00000000030f5ba9: jne    0x00000000030f5bc2
  0x00000000030f5bab: mov    %rdx,0x2e0(%rdi)
  0x00000000030f5bb2: movq   $0x1,0x2e8(%rdi)
  0x00000000030f5bbd: jmpq   0x00000000030f5bca
  0x00000000030f5bc2: addq   $0x1,0x2c8(%rdi)
  0x00000000030f5bca: mov    %rsi,%rdx          ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)

  0x00000000030f5bcd: movabs $0xffffffffffffffff,%rax
  0x00000000030f5bd7: callq  0x00000000030163e0  ; OopMap{[192]=Oop [152]=Oop [200]=Oop [256]=Oop off=5116}
                                                ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)
                                                ;   {virtual_call}
  0x00000000030f5bdc: cmp    $0x0,%rax
  0x00000000030f5be0: movabs $0x174dc9c0,%r8    ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5bea: movabs $0x2f8,%rdx
  0x00000000030f5bf4: je     0x00000000030f5c04
  0x00000000030f5bfa: movabs $0x308,%rdx
  0x00000000030f5c04: mov    (%r8,%rdx,1),%rsi
  0x00000000030f5c08: lea    0x1(%rsi),%rsi
  0x00000000030f5c0c: mov    %rsi,(%r8,%rdx,1)
  0x00000000030f5c10: je     0x00000000030f5c44  ;*ifnull
                                                ; - sun.misc.URLClassPath::getLoader@101 (line 496)

  0x00000000030f5c16: mov    0x98(%rsp),%rdx
  0x00000000030f5c1e: movabs $0x174dc9c0,%r8    ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5c28: addq   $0x1,0x318(%r8)
  0x00000000030f5c30: mov    %rax,%r8
  0x00000000030f5c33: mov    0x98(%rsp),%rdx    ;*invokespecial push
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 497)

  0x00000000030f5c3b: nop
  0x00000000030f5c3c: nop
  0x00000000030f5c3d: nop
  0x00000000030f5c3e: nop
  0x00000000030f5c3f: callq  0x00000000030161a0  ; OopMap{[192]=Oop [152]=Oop [200]=Oop [256]=Oop off=5220}
                                                ;*invokespecial push
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 497)
                                                ;   {optimized virtual_call}
  0x00000000030f5c44: movabs $0x174dc9c0,%r8    ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5c4e: incl   0x328(%r8)         ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@110 (line 502)

  0x00000000030f5c55: mov    0x98(%rsp),%rdx
  0x00000000030f5c5d: mov    0x18(%rdx),%r8d    ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@120 (line 504)

  0x00000000030f5c61: cmp    (%r8),%rax         ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)
                                                ; implicit exception: dispatches to 0x00000000030f6e01
  0x00000000030f5c64: mov    %r8,%r9
  0x00000000030f5c67: movabs $0x174dc9c0,%rsi   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5c71: movabs $0x10001b6c0,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000030f5c7b: mov    %r10,0x360(%rsi)
  0x00000000030f5c82: addq   $0x1,0x368(%rsi)
  0x00000000030f5c8a: mov    0x10(%r8),%r8d     ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)

  0x00000000030f5c8e: mov    %rdx,%r9
  0x00000000030f5c91: movabs $0x174dc9c0,%rsi   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5c9b: addq   $0x1,0x388(%rsi)
  0x00000000030f5ca3: mov    0xc0(%rsp),%r9
  0x00000000030f5cab: mov    %rdx,%rsi
  0x00000000030f5cae: mov    %rsi,%rdx          ;*invokespecial validateLookupCache
                                                ; - sun.misc.URLClassPath::getLoader@127 (line 504)

  0x00000000030f5cb1: nop
  0x00000000030f5cb2: nop
  0x00000000030f5cb3: nop
  0x00000000030f5cb4: nop
  0x00000000030f5cb5: nop
  0x00000000030f5cb6: nop
  0x00000000030f5cb7: callq  0x00000000030161a0  ; OopMap{[192]=Oop [200]=Oop [152]=Oop [256]=Oop off=5340}
                                                ;*invokespecial validateLookupCache
                                                ; - sun.misc.URLClassPath::getLoader@127 (line 504)
                                                ;   {optimized virtual_call}
  0x00000000030f5cbc: mov    0x98(%rsp),%rdx
  0x00000000030f5cc4: mov    0x18(%rdx),%esi    ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@131 (line 505)

  0x00000000030f5cc7: cmp    (%rsi),%rax        ;*invokevirtual add
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ; implicit exception: dispatches to 0x00000000030f6e06
  0x00000000030f5cca: mov    %rsi,%r8
  0x00000000030f5ccd: movabs $0x174dc9c0,%rdi   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f5cd7: movabs $0x10001b6c0,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000030f5ce1: mov    %r10,0x3a0(%rdi)
  0x00000000030f5ce8: addq   $0x1,0x3a8(%rdi)
  0x00000000030f5cf0: movabs $0x174e08a0,%r8    ;   {metadata(method data for {method} {0x0000000017298bc0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5cfa: mov    0xdc(%r8),%edi
  0x00000000030f5d01: add    $0x8,%edi
  0x00000000030f5d04: mov    %edi,0xdc(%r8)
  0x00000000030f5d0b: movabs $0x17298bb8,%r8    ;   {metadata({method} {0x0000000017298bc0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5d15: and    $0x7ffff8,%edi
  0x00000000030f5d1b: cmp    $0x0,%edi
  0x00000000030f5d1e: je     0x00000000030f6e0b
  0x00000000030f5d24: mov    0x10(%rsi),%r8d    ;*getfield size
                                                ; - java.util.ArrayList::add@2 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5d28: inc    %r8d
  0x00000000030f5d2b: mov    %rsi,%rdi
  0x00000000030f5d2e: movabs $0x174e08a0,%rbx   ;   {metadata(method data for {method} {0x0000000017298bc0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5d38: addq   $0x1,0x108(%rbx)
  0x00000000030f5d40: movabs $0x174e0a30,%rdi   ;   {metadata(method data for {method} {0x0000000017298138} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5d4a: mov    0xdc(%rdi),%ebx
  0x00000000030f5d50: add    $0x8,%ebx
  0x00000000030f5d53: mov    %ebx,0xdc(%rdi)
  0x00000000030f5d59: movabs $0x17298130,%rdi   ;   {metadata({method} {0x0000000017298138} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5d63: and    $0x7ffff8,%ebx
  0x00000000030f5d69: cmp    $0x0,%ebx
  0x00000000030f5d6c: je     0x00000000030f6e22
  0x00000000030f5d72: mov    0x14(%rsi),%edi    ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5d75: movabs $0xd5b927d8,%r10   ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x00000000030f5d7f: cmp    %r10,%rdi
  0x00000000030f5d82: movabs $0x174e0a30,%rbx   ;   {metadata(method data for {method} {0x0000000017298138} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5d8c: movabs $0x108,%rax
  0x00000000030f5d96: jne    0x00000000030f5da6
  0x00000000030f5d9c: movabs $0x118,%rax
  0x00000000030f5da6: mov    (%rbx,%rax,1),%rcx
  0x00000000030f5daa: lea    0x1(%rcx),%rcx
  0x00000000030f5dae: mov    %rcx,(%rbx,%rax,1)
  0x00000000030f5db2: jne    0x00000000030f5e4d  ;*if_acmpne
                                                ; - java.util.ArrayList::ensureCapacityInternal@7 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5db8: movabs $0x174e0a30,%rbx   ;   {metadata(method data for {method} {0x0000000017298138} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5dc2: addq   $0x1,0x128(%rbx)
  0x00000000030f5dca: movabs $0x174e0bc0,%rbx   ;   {metadata(method data for {method} {0x00000000172843e8} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030f5dd4: mov    0xdc(%rbx),%eax
  0x00000000030f5dda: add    $0x8,%eax
  0x00000000030f5ddd: mov    %eax,0xdc(%rbx)
  0x00000000030f5de3: movabs $0x172843e0,%rbx   ;   {metadata({method} {0x00000000172843e8} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030f5ded: and    $0x7ffff8,%eax
  0x00000000030f5df3: cmp    $0x0,%eax
  0x00000000030f5df6: je     0x00000000030f6e39
  0x00000000030f5dfc: cmp    $0xa,%r8d
  0x00000000030f5e00: movabs $0x174e0bc0,%rbx   ;   {metadata(method data for {method} {0x00000000172843e8} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030f5e0a: movabs $0x108,%rax
  0x00000000030f5e14: jg     0x00000000030f5e24
  0x00000000030f5e1a: movabs $0x118,%rax
  0x00000000030f5e24: mov    (%rbx,%rax,1),%rcx
  0x00000000030f5e28: lea    0x1(%rcx),%rcx
  0x00000000030f5e2c: mov    %rcx,(%rbx,%rax,1)
  0x00000000030f5e30: jg     0x00000000030f5e4d  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5e36: movabs $0x174e0bc0,%r8    ;   {metadata(method data for {method} {0x00000000172843e8} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000030f5e40: incl   0x128(%r8)
  0x00000000030f5e47: mov    $0xa,%r8d          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5e4d: mov    %rsi,%rbx
  0x00000000030f5e50: movabs $0x174e0a30,%rax   ;   {metadata(method data for {method} {0x0000000017298138} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5e5a: addq   $0x1,0x138(%rax)
  0x00000000030f5e62: movabs $0x174e0d20,%rbx   ;   {metadata(method data for {method} {0x00000000172981e8} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5e6c: mov    0xdc(%rbx),%eax
  0x00000000030f5e72: add    $0x8,%eax
  0x00000000030f5e75: mov    %eax,0xdc(%rbx)
  0x00000000030f5e7b: movabs $0x172981e0,%rbx   ;   {metadata({method} {0x00000000172981e8} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5e85: and    $0x7ffff8,%eax
  0x00000000030f5e8b: cmp    $0x0,%eax
  0x00000000030f5e8e: je     0x00000000030f6e50
  0x00000000030f5e94: mov    0xc(%rsi),%ebx     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5e97: inc    %ebx
  0x00000000030f5e99: mov    %ebx,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5e9c: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ; implicit exception: dispatches to 0x00000000030f6e67
  0x00000000030f5e9f: mov    %r8,%rbx
  0x00000000030f5ea2: sub    %edi,%ebx
  0x00000000030f5ea4: cmp    $0x0,%ebx
  0x00000000030f5ea7: movabs $0x174e0d20,%rdi   ;   {metadata(method data for {method} {0x00000000172981e8} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5eb1: movabs $0x108,%rbx
  0x00000000030f5ebb: jle    0x00000000030f5ecb
  0x00000000030f5ec1: movabs $0x118,%rbx
  0x00000000030f5ecb: mov    (%rdi,%rbx,1),%rax
  0x00000000030f5ecf: lea    0x1(%rax),%rax
  0x00000000030f5ed3: mov    %rax,(%rdi,%rbx,1)
  0x00000000030f5ed7: jg     0x00000000030f5eea  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5edd: mov    %rsi,0xd0(%rsp)
  0x00000000030f5ee5: jmpq   0x00000000030f5f14  ;*return
                                                ; - java.util.ArrayList::ensureExplicitCapacity@25 (line 236)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5eea: mov    %rsi,%rdi
  0x00000000030f5eed: movabs $0x174e0d20,%rbx   ;   {metadata(method data for {method} {0x00000000172981e8} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5ef7: addq   $0x1,0x128(%rbx)
  0x00000000030f5eff: mov    %rsi,%rdx          ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5f02: mov    %rsi,0xd0(%rsp)
  0x00000000030f5f0a: nop
  0x00000000030f5f0b: nop
  0x00000000030f5f0c: nop
  0x00000000030f5f0d: nop
  0x00000000030f5f0e: nop
  0x00000000030f5f0f: callq  0x00000000030161a0  ; OopMap{[192]=Oop [200]=Oop [208]=Oop [152]=Oop [256]=Oop off=5940}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {optimized virtual_call}
  0x00000000030f5f14: mov    0xd0(%rsp),%rsi
  0x00000000030f5f1c: mov    0xc8(%rsp),%rdi
  0x00000000030f5f24: mov    0x14(%rsi),%edx    ;*getfield elementData
                                                ; - java.util.ArrayList::add@11 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5f27: mov    0x10(%rsi),%ebx    ;*getfield size
                                                ; - java.util.ArrayList::add@16 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5f2a: mov    %rbx,%rax
  0x00000000030f5f2d: inc    %eax
  0x00000000030f5f2f: mov    %eax,0x10(%rsi)    ;*putfield size
                                                ; - java.util.ArrayList::add@22 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f5f32: movslq %ebx,%rsi
  0x00000000030f5f35: lea    0x10(%rdx,%rsi,4),%rsi
  0x00000000030f5f3a: cmp    0xc(%rdx),%ebx     ; implicit exception: dispatches to 0x00000000030f6e6c
  0x00000000030f5f3d: jae    0x00000000030f6e76
  0x00000000030f5f43: cmp    $0x0,%rdi
  0x00000000030f5f47: jne    0x00000000030f5f62
  0x00000000030f5f49: movabs $0x174e08a0,%rbx   ;   {metadata(method data for {method} {0x0000000017298bc0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5f53: orl    $0x100,0x110(%rbx)
  0x00000000030f5f5d: jmpq   0x00000000030f6046
  0x00000000030f5f62: mov    0x8(%rdx),%edx     ; implicit exception: dispatches to 0x00000000030f6e7f
  0x00000000030f5f65: shl    $0x3,%rdx
  0x00000000030f5f69: mov    0x8(%rdi),%ebx
  0x00000000030f5f6c: shl    $0x3,%rbx
  0x00000000030f5f70: mov    0xf0(%rdx),%rdx
  0x00000000030f5f77: cmp    %rdx,%rbx
  0x00000000030f5f7a: je     0x00000000030f5fa8
  0x00000000030f5f80: mov    0xc(%rdx),%eax
  0x00000000030f5f83: cmp    (%rbx,%rax,1),%rdx
  0x00000000030f5f87: je     0x00000000030f5fa8
  0x00000000030f5f8d: cmp    $0x18,%eax
  0x00000000030f5f90: jne    0x00000000030f602f
  0x00000000030f5f96: push   %rbx
  0x00000000030f5f97: push   %rdx
  0x00000000030f5f98: callq  0x00000000030d11a0  ;   {runtime_call}
  0x00000000030f5f9d: pop    %rbx
  0x00000000030f5f9e: pop    %rdx
  0x00000000030f5f9f: cmp    $0x0,%edx
  0x00000000030f5fa2: je     0x00000000030f602f
  0x00000000030f5fa8: movabs $0x174e08a0,%rbx   ;   {metadata(method data for {method} {0x0000000017298bc0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f5fb2: mov    0x8(%rdi),%edx
  0x00000000030f5fb5: shl    $0x3,%rdx
  0x00000000030f5fb9: cmp    0x120(%rbx),%rdx
  0x00000000030f5fc0: jne    0x00000000030f5fcf
  0x00000000030f5fc2: addq   $0x1,0x128(%rbx)
  0x00000000030f5fca: jmpq   0x00000000030f6046
  0x00000000030f5fcf: cmp    0x130(%rbx),%rdx
  0x00000000030f5fd6: jne    0x00000000030f5fe5
  0x00000000030f5fd8: addq   $0x1,0x138(%rbx)
  0x00000000030f5fe0: jmpq   0x00000000030f6046
  0x00000000030f5fe5: cmpq   $0x0,0x120(%rbx)
  0x00000000030f5ff0: jne    0x00000000030f6009
  0x00000000030f5ff2: mov    %rdx,0x120(%rbx)
  0x00000000030f5ff9: movq   $0x1,0x128(%rbx)
  0x00000000030f6004: jmpq   0x00000000030f6046
  0x00000000030f6009: cmpq   $0x0,0x130(%rbx)
  0x00000000030f6014: jne    0x00000000030f602d
  0x00000000030f6016: mov    %rdx,0x130(%rbx)
  0x00000000030f601d: movq   $0x1,0x138(%rbx)
  0x00000000030f6028: jmpq   0x00000000030f6046
  0x00000000030f602d: jmp    0x00000000030f6046
  0x00000000030f602f: movabs $0x174e08a0,%rbx   ;   {metadata(method data for {method} {0x0000000017298bc0} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f6039: subq   $0x1,0x118(%rbx)
  0x00000000030f6041: jmpq   0x00000000030f6e84
  0x00000000030f6046: mov    %rdi,%r10
  0x00000000030f6049: mov    %r10d,(%rsi)
  0x00000000030f604c: shr    $0x9,%rsi
  0x00000000030f6050: movabs $0x11f87000,%rdx
  0x00000000030f605a: movb   $0x0,(%rsi,%rdx,1)  ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000030f605e: mov    0xc0(%rsp),%rax
  0x00000000030f6066: mov    0x98(%rsp),%rdx
  0x00000000030f606e: mov    0x1c(%rdx),%esi    ;*getfield lmap
                                                ; - sun.misc.URLClassPath::getLoader@141 (line 506)

  0x00000000030f6071: cmp    (%rsi),%rax        ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ; implicit exception: dispatches to 0x00000000030f6e8d
  0x00000000030f6074: mov    %rsi,%rbx
  0x00000000030f6077: movabs $0x174dc9c0,%rcx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6081: mov    0x8(%rbx),%ebx
  0x00000000030f6084: shl    $0x3,%rbx
  0x00000000030f6088: cmp    0x3d0(%rcx),%rbx
  0x00000000030f608f: jne    0x00000000030f609e
  0x00000000030f6091: addq   $0x1,0x3d8(%rcx)
  0x00000000030f6099: jmpq   0x00000000030f6104
  0x00000000030f609e: cmp    0x3e0(%rcx),%rbx
  0x00000000030f60a5: jne    0x00000000030f60b4
  0x00000000030f60a7: addq   $0x1,0x3e8(%rcx)
  0x00000000030f60af: jmpq   0x00000000030f6104
  0x00000000030f60b4: cmpq   $0x0,0x3d0(%rcx)
  0x00000000030f60bf: jne    0x00000000030f60d8
  0x00000000030f60c1: mov    %rbx,0x3d0(%rcx)
  0x00000000030f60c8: movq   $0x1,0x3d8(%rcx)
  0x00000000030f60d3: jmpq   0x00000000030f6104
  0x00000000030f60d8: cmpq   $0x0,0x3e0(%rcx)
  0x00000000030f60e3: jne    0x00000000030f60fc
  0x00000000030f60e5: mov    %rbx,0x3e0(%rcx)
  0x00000000030f60ec: movq   $0x1,0x3e8(%rcx)
  0x00000000030f60f7: jmpq   0x00000000030f6104
  0x00000000030f60fc: addq   $0x1,0x3c8(%rcx)
  0x00000000030f6104: movabs $0x174e1028,%rbx   ;   {metadata(method data for {method} {0x00000000172ac368} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f610e: mov    0xdc(%rbx),%ecx
  0x00000000030f6114: add    $0x8,%ecx
  0x00000000030f6117: mov    %ecx,0xdc(%rbx)
  0x00000000030f611d: movabs $0x172ac360,%rbx   ;   {metadata({method} {0x00000000172ac368} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f6127: and    $0x7ffff8,%ecx
  0x00000000030f612d: cmp    $0x0,%ecx
  0x00000000030f6130: je     0x00000000030f6e92
  0x00000000030f6136: movabs $0x174e1028,%rbx   ;   {metadata(method data for {method} {0x00000000172ac368} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f6140: addq   $0x1,0x108(%rbx)
  0x00000000030f6148: movabs $0x174110e0,%rbx   ;   {metadata(method data for {method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f6152: mov    0xdc(%rbx),%ecx
  0x00000000030f6158: add    $0x8,%ecx
  0x00000000030f615b: mov    %ecx,0xdc(%rbx)
  0x00000000030f6161: movabs $0x172ab870,%rbx   ;   {metadata({method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f616b: and    $0x7ffff8,%ecx
  0x00000000030f6171: cmp    $0x0,%ecx
  0x00000000030f6174: je     0x00000000030f6ea9
  0x00000000030f617a: cmp    $0x0,%rax
  0x00000000030f617e: movabs $0x174110e0,%rbx   ;   {metadata(method data for {method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f6188: movabs $0x108,%rcx
  0x00000000030f6192: jne    0x00000000030f61a2
  0x00000000030f6198: movabs $0x118,%rcx
  0x00000000030f61a2: mov    (%rbx,%rcx,1),%r8
  0x00000000030f61a6: lea    0x1(%r8),%r8
  0x00000000030f61aa: mov    %r8,(%rbx,%rcx,1)
  0x00000000030f61ae: jne    0x00000000030f61d6  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)

  0x00000000030f61b4: movabs $0x174110e0,%rbx   ;   {metadata(method data for {method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f61be: incl   0x128(%rbx)
  0x00000000030f61c4: mov    $0x0,%ebx
  0x00000000030f61c9: mov    %rsi,0xd8(%rsp)
  0x00000000030f61d1: jmpq   0x00000000030f6211  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)

  0x00000000030f61d6: mov    %rsi,0xd8(%rsp)
  0x00000000030f61de: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000030f6ec0
  0x00000000030f61e1: mov    %rax,%rbx
  0x00000000030f61e4: movabs $0x174110e0,%rcx   ;   {metadata(method data for {method} {0x00000000172ab878} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f61ee: addq   $0x1,0x160(%rcx)
  0x00000000030f61f6: mov    %rax,%rdx          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)

  0x00000000030f61f9: nop
  0x00000000030f61fa: nop
  0x00000000030f61fb: nop
  0x00000000030f61fc: nop
  0x00000000030f61fd: nop
  0x00000000030f61fe: nop
  0x00000000030f61ff: callq  0x00000000030161a0  ; OopMap{[192]=Oop [216]=Oop [200]=Oop [152]=Oop [256]=Oop off=6692}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {optimized virtual_call}
  0x00000000030f6204: mov    %rax,%r8
  0x00000000030f6207: shr    $0x10,%r8d
  0x00000000030f620b: xor    %rax,%r8
  0x00000000030f620e: mov    %r8,%rbx           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)

  0x00000000030f6211: mov    0xd8(%rsp),%rdx
  0x00000000030f6219: mov    0xc8(%rsp),%rsi
  0x00000000030f6221: mov    %rdx,%r8
  0x00000000030f6224: movabs $0x174e1028,%r9    ;   {metadata(method data for {method} {0x00000000172ac368} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f622e: mov    0x8(%r8),%r8d
  0x00000000030f6232: shl    $0x3,%r8
  0x00000000030f6236: cmp    0x120(%r9),%r8
  0x00000000030f623d: jne    0x00000000030f624c
  0x00000000030f623f: addq   $0x1,0x128(%r9)
  0x00000000030f6247: jmpq   0x00000000030f62b2
  0x00000000030f624c: cmp    0x130(%r9),%r8
  0x00000000030f6253: jne    0x00000000030f6262
  0x00000000030f6255: addq   $0x1,0x138(%r9)
  0x00000000030f625d: jmpq   0x00000000030f62b2
  0x00000000030f6262: cmpq   $0x0,0x120(%r9)
  0x00000000030f626d: jne    0x00000000030f6286
  0x00000000030f626f: mov    %r8,0x120(%r9)
  0x00000000030f6276: movq   $0x1,0x128(%r9)
  0x00000000030f6281: jmpq   0x00000000030f62b2
  0x00000000030f6286: cmpq   $0x0,0x130(%r9)
  0x00000000030f6291: jne    0x00000000030f62aa
  0x00000000030f6293: mov    %r8,0x130(%r9)
  0x00000000030f629a: movq   $0x1,0x138(%r9)
  0x00000000030f62a5: jmpq   0x00000000030f62b2
  0x00000000030f62aa: addq   $0x1,0x118(%r9)
  0x00000000030f62b2: mov    %rbx,%r8
  0x00000000030f62b5: mov    0xc0(%rsp),%r9
  0x00000000030f62bd: mov    %rsi,%rdi
  0x00000000030f62c0: mov    $0x0,%esi
  0x00000000030f62c5: mov    $0x1,%ecx          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)

  0x00000000030f62ca: nop
  0x00000000030f62cb: nop
  0x00000000030f62cc: nop
  0x00000000030f62cd: nop
  0x00000000030f62ce: nop
  0x00000000030f62cf: callq  0x00000000030161a0  ; OopMap{[152]=Oop [256]=Oop off=6900}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {optimized virtual_call}
  0x00000000030f62d4: jmpq   0x00000000030f6418  ;*pop
                                                ; - sun.misc.URLClassPath::getLoader@150 (line 506)

  0x00000000030f62d9: mov    0xc0(%rsp),%r8
  0x00000000030f62e1: mov    0x2a8(%r15),%rax
  0x00000000030f62e8: xor    %r10,%r10
  0x00000000030f62eb: mov    %r10,0x2a8(%r15)
  0x00000000030f62f2: xor    %r10,%r10
  0x00000000030f62f5: mov    %r10,0x2b0(%r15)
  0x00000000030f62fc: mov    %rax,%rdx
  0x00000000030f62ff: movabs $0x174e0058,%rsi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6309: movabs $0x100061828,%r10  ;   {metadata(&apos;java/security/PrivilegedActionException&apos;)}
  0x00000000030f6313: mov    %r10,0x160(%rsi)
  0x00000000030f631a: addq   $0x1,0x168(%rsi)
  0x00000000030f6322: mov    0x20(%rax),%eax    ;*getfield exception
                                                ; - java.security.PrivilegedActionException::getException@1 (line 86)
                                                ; - sun.misc.URLClassPath::getLoader@18 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000030f6325: cmp    $0x0,%rax
  0x00000000030f6329: jne    0x00000000030f6344
  0x00000000030f632b: movabs $0x174e0058,%rsi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6335: orl    $0x100,0x180(%rsi)
  0x00000000030f633f: jmpq   0x00000000030f6405
  0x00000000030f6344: movabs $0x10005fbb0,%rdi  ;   {metadata(&apos;java/io/IOException&apos;)}
  0x00000000030f634e: mov    0x8(%rax),%esi
  0x00000000030f6351: shl    $0x3,%rsi
  0x00000000030f6355: cmp    0x40(%rsi),%rdi
  0x00000000030f6359: jne    0x00000000030f63e9
  0x00000000030f635f: movabs $0x174e0058,%rsi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6369: mov    0x8(%rax),%edi
  0x00000000030f636c: shl    $0x3,%rdi
  0x00000000030f6370: cmp    0x190(%rsi),%rdi
  0x00000000030f6377: jne    0x00000000030f6386
  0x00000000030f6379: addq   $0x1,0x198(%rsi)
  0x00000000030f6381: jmpq   0x00000000030f6405
  0x00000000030f6386: cmp    0x1a0(%rsi),%rdi
  0x00000000030f638d: jne    0x00000000030f639c
  0x00000000030f638f: addq   $0x1,0x1a8(%rsi)
  0x00000000030f6397: jmpq   0x00000000030f6405
  0x00000000030f639c: cmpq   $0x0,0x190(%rsi)
  0x00000000030f63a7: jne    0x00000000030f63c0
  0x00000000030f63a9: mov    %rdi,0x190(%rsi)
  0x00000000030f63b0: movq   $0x1,0x198(%rsi)
  0x00000000030f63bb: jmpq   0x00000000030f6405
  0x00000000030f63c0: cmpq   $0x0,0x1a0(%rsi)
  0x00000000030f63cb: jne    0x00000000030f63e4
  0x00000000030f63cd: mov    %rdi,0x1a0(%rsi)
  0x00000000030f63d4: movq   $0x1,0x1a8(%rsi)
  0x00000000030f63df: jmpq   0x00000000030f6405
  0x00000000030f63e4: jmpq   0x00000000030f6405
  0x00000000030f63e9: movabs $0x174e0058,%rsi   ;   {metadata(method data for {method} {0x00000000173949d8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f63f3: subq   $0x1,0x188(%rsi)
  0x00000000030f63fb: jmpq   0x00000000030f6ec5
  0x00000000030f6400: jmpq   0x00000000030f6405  ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@21 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000030f6405: cmp    (%rax),%rax        ; OopMap{[152]=Oop r8=Oop [192]=Oop [256]=Oop rax=Oop off=7208}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ; implicit exception: dispatches to 0x00000000030f6ece
  0x00000000030f6408: movabs $0x30f6408,%rdx    ;   {section_word}
  0x00000000030f6412: callq  0x000000000303ffe0  ;   {runtime_call}
  0x00000000030f6417: nop                       ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000030f6418: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6422: mov    0xe0(%rax),%edx
  0x00000000030f6428: add    $0x8,%edx
  0x00000000030f642b: mov    %edx,0xe0(%rax)
  0x00000000030f6431: movabs $0x17394918,%rax   ;   {metadata({method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f643b: and    $0xfff8,%edx
  0x00000000030f6441: cmp    $0x0,%edx
  0x00000000030f6444: je     0x00000000030f6ed3  ; OopMap{[152]=Oop [256]=Oop off=7274}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)

  0x00000000030f644a: test   %eax,-0x2906350(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030f6450: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f645a: incl   0x3f8(%rax)
  0x00000000030f6460: mov    0x94(%rsp),%r8d
  0x00000000030f6468: mov    0x98(%rsp),%rdx
  0x00000000030f6470: jmpq   0x00000000030f4958  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)

  0x00000000030f6475: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f647f: mov    0xe0(%rax),%edx
  0x00000000030f6485: add    $0x8,%edx
  0x00000000030f6488: mov    %edx,0xe0(%rax)
  0x00000000030f648e: movabs $0x17394918,%rax   ;   {metadata({method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6498: and    $0xfff8,%edx
  0x00000000030f649e: cmp    $0x0,%edx
  0x00000000030f64a1: je     0x00000000030f6eea  ; OopMap{[152]=Oop [256]=Oop off=7367}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)

  0x00000000030f64a7: test   %eax,-0x29063ad(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030f64ad: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f64b7: incl   0x2a0(%rax)
  0x00000000030f64bd: mov    0x94(%rsp),%r8d
  0x00000000030f64c5: mov    0x98(%rsp),%rdx
  0x00000000030f64cd: jmpq   0x00000000030f4958  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)

  0x00000000030f64d2: mov    0x2a8(%r15),%rax
  0x00000000030f64d9: xor    %r10,%r10
  0x00000000030f64dc: mov    %r10,0x2a8(%r15)
  0x00000000030f64e3: xor    %r10,%r10
  0x00000000030f64e6: mov    %r10,0x2b0(%r15)
  0x00000000030f64ed: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f64f7: mov    0xe0(%rax),%edx
  0x00000000030f64fd: add    $0x8,%edx
  0x00000000030f6500: mov    %edx,0xe0(%rax)
  0x00000000030f6506: movabs $0x17394918,%rax   ;   {metadata({method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6510: and    $0xfff8,%edx
  0x00000000030f6516: cmp    $0x0,%edx
  0x00000000030f6519: je     0x00000000030f6f01  ; OopMap{[152]=Oop [256]=Oop off=7487}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)

  0x00000000030f651f: test   %eax,-0x2906425(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030f6525: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f652f: incl   0x340(%rax)
  0x00000000030f6535: mov    0x94(%rsp),%r8d
  0x00000000030f653d: mov    0x98(%rsp),%rdx
  0x00000000030f6545: jmpq   0x00000000030f4958  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)

  0x00000000030f654a: movabs $0x174dc9c0,%rax   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6554: incl   0x410(%rax)        ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@157 (line 508)

  0x00000000030f655a: mov    0x94(%rsp),%r8d
  0x00000000030f6562: mov    %rsi,%rax
  0x00000000030f6565: movabs $0x174dc9c0,%rdx   ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f656f: movabs $0x10001b6c0,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000030f6579: mov    %r10,0x508(%rdx)
  0x00000000030f6580: addq   $0x1,0x510(%rdx)
  0x00000000030f6588: movabs $0x174e1890,%rax   ;   {metadata(method data for {method} {0x0000000017298a68} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f6592: mov    0xdc(%rax),%edx
  0x00000000030f6598: add    $0x8,%edx
  0x00000000030f659b: mov    %edx,0xdc(%rax)
  0x00000000030f65a1: movabs $0x17298a60,%rax   ;   {metadata({method} {0x0000000017298a68} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f65ab: and    $0x7ffff8,%edx
  0x00000000030f65b1: cmp    $0x0,%edx
  0x00000000030f65b4: je     0x00000000030f6f18
  0x00000000030f65ba: mov    %rsi,%rax
  0x00000000030f65bd: movabs $0x174e1890,%rdx   ;   {metadata(method data for {method} {0x0000000017298a68} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f65c7: addq   $0x1,0x108(%rdx)
  0x00000000030f65cf: movabs $0x174e1a20,%rax   ;   {metadata(method data for {method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f65d9: mov    0xdc(%rax),%edx
  0x00000000030f65df: add    $0x8,%edx
  0x00000000030f65e2: mov    %edx,0xdc(%rax)
  0x00000000030f65e8: movabs $0x17299340,%rax   ;   {metadata({method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f65f2: and    $0x7ffff8,%edx
  0x00000000030f65f8: cmp    $0x0,%edx
  0x00000000030f65fb: je     0x00000000030f6f2f
  0x00000000030f6601: cmp    %edi,%r8d
  0x00000000030f6604: movabs $0x174e1a20,%rax   ;   {metadata(method data for {method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f660e: movabs $0x108,%rdx
  0x00000000030f6618: jl     0x00000000030f6628
  0x00000000030f661e: movabs $0x118,%rdx
  0x00000000030f6628: mov    (%rax,%rdx,1),%rdi
  0x00000000030f662c: lea    0x1(%rdi),%rdi
  0x00000000030f6630: mov    %rdi,(%rax,%rdx,1)
  0x00000000030f6634: jge    0x00000000030f689f  ;*if_icmplt
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000030f663a: mov    %rsi,%rax
  0x00000000030f663d: movabs $0x174e1890,%rdx   ;   {metadata(method data for {method} {0x0000000017298a68} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f6647: movabs $0x10001b6c0,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000030f6651: mov    %r10,0x120(%rdx)
  0x00000000030f6658: addq   $0x1,0x128(%rdx)
  0x00000000030f6660: movabs $0x174e1f28,%rax   ;   {metadata(method data for {method} {0x00000000172989c8} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f666a: mov    0xdc(%rax),%edx
  0x00000000030f6670: add    $0x8,%edx
  0x00000000030f6673: mov    %edx,0xdc(%rax)
  0x00000000030f6679: movabs $0x172989c0,%rax   ;   {metadata({method} {0x00000000172989c8} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f6683: and    $0x7ffff8,%edx
  0x00000000030f6689: cmp    $0x0,%edx
  0x00000000030f668c: je     0x00000000030f6f46
  0x00000000030f6692: mov    0x14(%rsi),%eax    ;*getfield elementData
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000030f6695: movslq %r8d,%rdx
  0x00000000030f6698: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000000030f6f5d
  0x00000000030f669c: jae    0x00000000030f6f67
  0x00000000030f66a2: mov    0x10(%rax,%rdx,4),%eax  ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000030f66a6: cmp    $0x0,%rax
  0x00000000030f66aa: jne    0x00000000030f66c6
  0x00000000030f66ac: movabs $0x174dc9c0,%r8    ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f66b6: orl    $0x100,0x528(%r8)
  0x00000000030f66c1: jmpq   0x00000000030f6788
  0x00000000030f66c6: movabs $0x10003cfa8,%rsi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00000000030f66d0: mov    0x8(%rax),%r8d
  0x00000000030f66d4: shl    $0x3,%r8
  0x00000000030f66d8: cmp    0x30(%r8),%rsi
  0x00000000030f66dc: jne    0x00000000030f676c
  0x00000000030f66e2: movabs $0x174dc9c0,%r8    ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f66ec: mov    0x8(%rax),%esi
  0x00000000030f66ef: shl    $0x3,%rsi
  0x00000000030f66f3: cmp    0x538(%r8),%rsi
  0x00000000030f66fa: jne    0x00000000030f6709
  0x00000000030f66fc: addq   $0x1,0x540(%r8)
  0x00000000030f6704: jmpq   0x00000000030f6788
  0x00000000030f6709: cmp    0x548(%r8),%rsi
  0x00000000030f6710: jne    0x00000000030f671f
  0x00000000030f6712: addq   $0x1,0x550(%r8)
  0x00000000030f671a: jmpq   0x00000000030f6788
  0x00000000030f671f: cmpq   $0x0,0x538(%r8)
  0x00000000030f672a: jne    0x00000000030f6743
  0x00000000030f672c: mov    %rsi,0x538(%r8)
  0x00000000030f6733: movq   $0x1,0x540(%r8)
  0x00000000030f673e: jmpq   0x00000000030f6788
  0x00000000030f6743: cmpq   $0x0,0x548(%r8)
  0x00000000030f674e: jne    0x00000000030f6767
  0x00000000030f6750: mov    %rsi,0x548(%r8)
  0x00000000030f6757: movq   $0x1,0x550(%r8)
  0x00000000030f6762: jmpq   0x00000000030f6788
  0x00000000030f6767: jmpq   0x00000000030f6788
  0x00000000030f676c: movabs $0x174dc9c0,%r8    ;   {metadata(method data for {method} {0x0000000017394920} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f6776: subq   $0x1,0x530(%r8)
  0x00000000030f677e: jmpq   0x00000000030f6f70
  0x00000000030f6783: jmpq   0x00000000030f6788
  0x00000000030f6788: mov    %rax,%rdx          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 511)

  0x00000000030f678b: lea    0xf8(%rsp),%rax
  0x00000000030f6793: mov    0x8(%rax),%rsi
  0x00000000030f6797: mov    (%rsi),%r8
  0x00000000030f679a: and    $0x7,%r8
  0x00000000030f679e: cmp    $0x5,%r8
  0x00000000030f67a2: je     0x00000000030f67bf
  0x00000000030f67a8: mov    (%rax),%r8
  0x00000000030f67ab: test   %r8,%r8
  0x00000000030f67ae: je     0x00000000030f67bf
  0x00000000030f67b4: lock cmpxchg %r8,(%rsi)
  0x00000000030f67b9: jne    0x00000000030f6f79
  0x00000000030f67bf: mov    %rdx,%rax
  0x00000000030f67c2: add    $0x150,%rsp
  0x00000000030f67c9: pop    %rbp
  0x00000000030f67ca: test   %eax,-0x29066d0(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f67d0: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@196 (line 511)

  0x00000000030f67d1: lea    0x108(%rsp),%rax
  0x00000000030f67d9: mov    0x8(%rax),%r8
  0x00000000030f67dd: mov    (%r8),%rdx
  0x00000000030f67e0: and    $0x7,%rdx
  0x00000000030f67e4: cmp    $0x5,%rdx
  0x00000000030f67e8: je     0x00000000030f6805
  0x00000000030f67ee: mov    (%rax),%rdx
  0x00000000030f67f1: test   %rdx,%rdx
  0x00000000030f67f4: je     0x00000000030f6805
  0x00000000030f67fa: lock cmpxchg %rdx,(%r8)
  0x00000000030f67ff: jne    0x00000000030f6f8f  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@41 (line 477)

  0x00000000030f6805: lea    0xf8(%rsp),%rax
  0x00000000030f680d: mov    0x8(%rax),%r8
  0x00000000030f6811: mov    (%r8),%rdx
  0x00000000030f6814: and    $0x7,%rdx
  0x00000000030f6818: cmp    $0x5,%rdx
  0x00000000030f681c: je     0x00000000030f6839
  0x00000000030f6822: mov    (%rax),%rdx
  0x00000000030f6825: test   %rdx,%rdx
  0x00000000030f6828: je     0x00000000030f6839
  0x00000000030f682e: lock cmpxchg %rdx,(%r8)
  0x00000000030f6833: jne    0x00000000030f6fa5
  0x00000000030f6839: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030f6843: add    $0x150,%rsp
  0x00000000030f684a: pop    %rbp
  0x00000000030f684b: test   %eax,-0x2906751(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f6851: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@42 (line 477)

  0x00000000030f6852: lea    0xf8(%rsp),%rax
  0x00000000030f685a: mov    0x8(%rax),%r8
  0x00000000030f685e: mov    (%r8),%rdx
  0x00000000030f6861: and    $0x7,%rdx
  0x00000000030f6865: cmp    $0x5,%rdx
  0x00000000030f6869: je     0x00000000030f6886
  0x00000000030f686f: mov    (%rax),%rdx
  0x00000000030f6872: test   %rdx,%rdx
  0x00000000030f6875: je     0x00000000030f6886
  0x00000000030f687b: lock cmpxchg %rdx,(%r8)
  0x00000000030f6880: jne    0x00000000030f6fbb
  0x00000000030f6886: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030f6890: add    $0x150,%rsp
  0x00000000030f6897: pop    %rbp
  0x00000000030f6898: test   %eax,-0x290679e(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f689e: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@8 (line 468)

  0x00000000030f689f: nop
  0x00000000030f68a0: jmpq   0x00000000030f6fe0  ;   {no_reloc}
  0x00000000030f68a5: add    %al,(%rax)
  0x00000000030f68a7: add    %al,(%rax)
  0x00000000030f68a9: add    %ch,%cl
  0x00000000030f68ab: cmp    (%rdi),%eax
  0x00000000030f68ad: add    %al,(%rax)         ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000030f68af: mov    %rsi,%rdx
  0x00000000030f68b2: movabs $0x174e1a20,%rdi   ;   {metadata(method data for {method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f68bc: addq   $0x1,0x128(%rdi)
  0x00000000030f68c4: mov    %r8,%rdi
  0x00000000030f68c7: mov    %rdi,%r8
  0x00000000030f68ca: mov    %rsi,%rdx          ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000030f68cd: mov    %rsi,0xe8(%rsp)
  0x00000000030f68d5: mov    %rax,0xe0(%rsp)
  0x00000000030f68dd: nop
  0x00000000030f68de: nop
  0x00000000030f68df: callq  0x00000000030161a0  ; OopMap{[232]=Oop [224]=Oop [256]=Oop off=8452}
                                                ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {optimized virtual_call}
  0x00000000030f68e4: mov    0xe0(%rsp),%r8
  0x00000000030f68ec: movabs $0x174e1a20,%rdx   ;   {metadata(method data for {method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f68f6: addq   $0x1,0x138(%rdx)
  0x00000000030f68fe: mov    %rax,%r8
  0x00000000030f6901: mov    0xe0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000030f6909: nop
  0x00000000030f690a: nop
  0x00000000030f690b: nop
  0x00000000030f690c: nop
  0x00000000030f690d: nop
  0x00000000030f690e: nop
  0x00000000030f690f: callq  0x00000000030161a0  ; OopMap{[232]=Oop [224]=Oop [256]=Oop off=8500}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {optimized virtual_call}
  0x00000000030f6914: mov    0xe0(%rsp),%rax
  0x00000000030f691c: jmpq   0x00000000030f7114  ;*athrow
                                                ; - java.util.ArrayList::rangeCheck@20 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000030f6921: mov    %rdi,0x88(%rsp)
  0x00000000030f6929: mov    %rsi,0xa0(%rsp)
  0x00000000030f6931: nopl   0x0(%rax)
  0x00000000030f6938: jmpq   0x00000000030f7006  ;   {no_reloc}
  0x00000000030f693d: add    %al,(%rax)
  0x00000000030f693f: add    %al,(%rax)
  0x00000000030f6941: add    %ch,%cl
  0x00000000030f6943: leaveq 
  0x00000000030f6944: (bad)  
  0x00000000030f6945: add    %al,(%rax)         ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6947: mov    %rax,%rdx
  0x00000000030f694a: movabs $0x174de160,%rsi   ;   {metadata(method data for {method} {0x00000000172777b8} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000030f6954: addq   $0x1,0x158(%rsi)
  0x00000000030f695c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f695f: mov    %rax,0xf0(%rsp)
  0x00000000030f6967: callq  0x00000000030161a0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=8588}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x00000000030f696c: mov    0xf0(%rsp),%rax    ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop rax=Oop off=8596}
                                                ;*athrow
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6974: movabs $0x30f6974,%rdx    ;   {section_word}
  0x00000000030f697e: callq  0x000000000303ffe0  ;   {runtime_call}
  0x00000000030f6983: nop                       ;*athrow
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6984: mov    0x2a8(%r15),%rax
  0x00000000030f698b: xor    %r10,%r10
  0x00000000030f698e: mov    %r10,0x2a8(%r15)
  0x00000000030f6995: xor    %r10,%r10
  0x00000000030f6998: mov    %r10,0x2b0(%r15)
  0x00000000030f699f: mov    %rax,%rdx
  0x00000000030f69a2: lea    0x138(%rsp),%rax
  0x00000000030f69aa: mov    0x8(%rax),%rdi
  0x00000000030f69ae: mov    (%rdi),%rsi
  0x00000000030f69b1: and    $0x7,%rsi
  0x00000000030f69b5: cmp    $0x5,%rsi
  0x00000000030f69b9: je     0x00000000030f69d6
  0x00000000030f69bf: mov    (%rax),%rsi
  0x00000000030f69c2: test   %rsi,%rsi
  0x00000000030f69c5: je     0x00000000030f69d6
  0x00000000030f69cb: lock cmpxchg %rsi,(%rdi)
  0x00000000030f69d0: jne    0x00000000030f701d  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f69d6: mov    %rdx,%rax          ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop rax=Oop off=8697}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f69d9: movabs $0x30f69d9,%rdx    ;   {section_word}
  0x00000000030f69e3: callq  0x000000000303ffe0  ;   {runtime_call}
  0x00000000030f69e8: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f69e9: mov    0x2a8(%r15),%rax
  0x00000000030f69f0: xor    %r10,%r10
  0x00000000030f69f3: mov    %r10,0x2a8(%r15)
  0x00000000030f69fa: xor    %r10,%r10
  0x00000000030f69fd: mov    %r10,0x2b0(%r15)
  0x00000000030f6a04: mov    %rax,%rdx
  0x00000000030f6a07: lea    0x128(%rsp),%rax
  0x00000000030f6a0f: mov    0x8(%rax),%rdi
  0x00000000030f6a13: mov    (%rdi),%rsi
  0x00000000030f6a16: and    $0x7,%rsi
  0x00000000030f6a1a: cmp    $0x5,%rsi
  0x00000000030f6a1e: je     0x00000000030f6a3b
  0x00000000030f6a24: mov    (%rax),%rsi
  0x00000000030f6a27: test   %rsi,%rsi
  0x00000000030f6a2a: je     0x00000000030f6a3b
  0x00000000030f6a30: lock cmpxchg %rsi,(%rdi)
  0x00000000030f6a35: jne    0x00000000030f7033  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6a3b: mov    %rdx,%rax          ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=8798}
                                                ;*invokevirtual peek
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6a3e: movabs $0x30f6a3e,%rdx    ;   {section_word}
  0x00000000030f6a48: callq  0x000000000303ffe0  ;   {runtime_call}
  0x00000000030f6a4d: nop                       ;*invokevirtual peek
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6a4e: mov    0x2a8(%r15),%rax
  0x00000000030f6a55: xor    %r10,%r10
  0x00000000030f6a58: mov    %r10,0x2a8(%r15)
  0x00000000030f6a5f: xor    %r10,%r10
  0x00000000030f6a62: mov    %r10,0x2b0(%r15)
  0x00000000030f6a69: mov    %rax,%rdx
  0x00000000030f6a6c: lea    0x128(%rsp),%rax
  0x00000000030f6a74: mov    0x8(%rax),%rbx
  0x00000000030f6a78: mov    (%rbx),%rsi
  0x00000000030f6a7b: and    $0x7,%rsi
  0x00000000030f6a7f: cmp    $0x5,%rsi
  0x00000000030f6a83: je     0x00000000030f6aa0
  0x00000000030f6a89: mov    (%rax),%rsi
  0x00000000030f6a8c: test   %rsi,%rsi
  0x00000000030f6a8f: je     0x00000000030f6aa0
  0x00000000030f6a95: lock cmpxchg %rsi,(%rbx)
  0x00000000030f6a9a: jne    0x00000000030f7049  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6aa0: mov    %rdx,%rax          ; OopMap{[160]=Oop [152]=Oop rdi=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=8899}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6aa3: movabs $0x30f6aa3,%rdx    ;   {section_word}
  0x00000000030f6aad: callq  0x000000000303ffe0  ;   {runtime_call}
  0x00000000030f6ab2: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6ab3: mov    0x2a8(%r15),%rax
  0x00000000030f6aba: xor    %r10,%r10
  0x00000000030f6abd: mov    %r10,0x2a8(%r15)
  0x00000000030f6ac4: xor    %r10,%r10
  0x00000000030f6ac7: mov    %r10,0x2b0(%r15)
  0x00000000030f6ace: mov    %rax,%rdx
  0x00000000030f6ad1: lea    0x118(%rsp),%rax
  0x00000000030f6ad9: mov    0x8(%rax),%rdi
  0x00000000030f6add: mov    (%rdi),%rsi
  0x00000000030f6ae0: and    $0x7,%rsi
  0x00000000030f6ae4: cmp    $0x5,%rsi
  0x00000000030f6ae8: je     0x00000000030f6b05
  0x00000000030f6aee: mov    (%rax),%rsi
  0x00000000030f6af1: test   %rsi,%rsi
  0x00000000030f6af4: je     0x00000000030f6b05
  0x00000000030f6afa: lock cmpxchg %rsi,(%rdi)
  0x00000000030f6aff: jne    0x00000000030f705f  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6b05: mov    %rdx,%rax          ; OopMap{[160]=Oop [152]=Oop [256]=Oop [272]=Oop rax=Oop off=9000}
                                                ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6b08: movabs $0x30f6b08,%rdx    ;   {section_word}
  0x00000000030f6b12: callq  0x000000000303ffe0  ;   {runtime_call}
  0x00000000030f6b17: nop                       ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000030f6b18: mov    0x94(%rsp),%r8d
  0x00000000030f6b20: mov    0x98(%rsp),%rsi
  0x00000000030f6b28: mov    0x2a8(%r15),%rax
  0x00000000030f6b2f: xor    %r10,%r10
  0x00000000030f6b32: mov    %r10,0x2a8(%r15)
  0x00000000030f6b39: xor    %r10,%r10
  0x00000000030f6b3c: mov    %r10,0x2b0(%r15)
  0x00000000030f6b43: mov    %rax,%rdx
  0x00000000030f6b46: lea    0x118(%rsp),%rax
  0x00000000030f6b4e: mov    0x8(%rax),%rcx
  0x00000000030f6b52: mov    (%rcx),%rbx
  0x00000000030f6b55: and    $0x7,%rbx
  0x00000000030f6b59: cmp    $0x5,%rbx
  0x00000000030f6b5d: je     0x00000000030f6b7a
  0x00000000030f6b63: mov    (%rax),%rbx
  0x00000000030f6b66: test   %rbx,%rbx
  0x00000000030f6b69: je     0x00000000030f6b7a
  0x00000000030f6b6f: lock cmpxchg %rbx,(%rcx)
  0x00000000030f6b74: jne    0x00000000030f7075  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f6b7a: mov    %rdx,%rax          ; OopMap{rdi=Oop rsi=Oop [152]=Oop [256]=Oop [272]=Oop rax=Oop off=9117}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f6b7d: movabs $0x30f6b7d,%rdx    ;   {section_word}
  0x00000000030f6b87: callq  0x000000000303ffe0  ;   {runtime_call}
  0x00000000030f6b8c: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000030f6b8d: mov    0x2a8(%r15),%rax
  0x00000000030f6b94: xor    %r10,%r10
  0x00000000030f6b97: mov    %r10,0x2a8(%r15)
  0x00000000030f6b9e: xor    %r10,%r10
  0x00000000030f6ba1: mov    %r10,0x2b0(%r15)
  0x00000000030f6ba8: mov    %rax,%rsi
  0x00000000030f6bab: lea    0x108(%rsp),%rax
  0x00000000030f6bb3: mov    0x8(%rax),%rbx
  0x00000000030f6bb7: mov    (%rbx),%rdi
  0x00000000030f6bba: and    $0x7,%rdi
  0x00000000030f6bbe: cmp    $0x5,%rdi
  0x00000000030f6bc2: je     0x00000000030f6bdf
  0x00000000030f6bc8: mov    (%rax),%rdi
  0x00000000030f6bcb: test   %rdi,%rdi
  0x00000000030f6bce: je     0x00000000030f6bdf
  0x00000000030f6bd4: lock cmpxchg %rdi,(%rbx)
  0x00000000030f6bd9: jne    0x00000000030f708b  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@62 (line 481)

  0x00000000030f6bdf: mov    %rsi,%rax
  0x00000000030f6be2: jmpq   0x00000000030f7114
  0x00000000030f6be7: mov    %rdx,0x8(%rsp)
  0x00000000030f6bec: mov    %rsi,(%rsp)
  0x00000000030f6bf0: callq  0x00000000030d1520  ; OopMap{rdx=Oop [152]=Oop [256]=Oop off=9237}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 467)
                                                ;   {runtime_call}
  0x00000000030f6bf5: jmpq   0x00000000030f48e8
  0x00000000030f6bfa: mov    %rax,0x8(%rsp)
  0x00000000030f6bff: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6c07: callq  0x00000000030d3220  ; OopMap{rdx=Oop [152]=Oop [256]=Oop off=9260}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 467)
                                                ;   {runtime_call}
  0x00000000030f6c0c: jmpq   0x00000000030f491a
  0x00000000030f6c11: callq  0x0000000003041280  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9270}
                                                ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)
                                                ;   {runtime_call}
  0x00000000030f6c16: callq  0x0000000003041280  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9275}
                                                ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)
                                                ;   {runtime_call}
  0x00000000030f6c1b: mov    %rsi,0x8(%rsp)
  0x00000000030f6c20: mov    %rdi,(%rsp)
  0x00000000030f6c24: callq  0x00000000030d1520  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [256]=Oop [272]=Oop off=9289}
                                                ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)
                                                ;   {runtime_call}
  0x00000000030f6c29: jmpq   0x00000000030f4a90
  0x00000000030f6c2e: callq  0x0000000003041280  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop off=9299}
                                                ;*invokevirtual empty
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x00000000030f6c33: mov    %rax,0x8(%rsp)
  0x00000000030f6c38: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6c40: callq  0x00000000030d3220  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop off=9317}
                                                ;*synchronization entry
                                                ; - java.util.Stack::empty@-1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x00000000030f6c45: jmpq   0x00000000030f4aee
  0x00000000030f6c4a: mov    %rdi,0x8(%rsp)
  0x00000000030f6c4f: mov    %rbx,(%rsp)
  0x00000000030f6c53: callq  0x00000000030d1520  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop [288]=Oop off=9336}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x00000000030f6c58: jmpq   0x00000000030f4c47
  0x00000000030f6c5d: lea    0x118(%rsp),%rax
  0x00000000030f6c65: mov    %rax,(%rsp)
  0x00000000030f6c69: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6c6e: jmpq   0x00000000030f4c7e
  0x00000000030f6c73: callq  0x0000000003041280  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop off=9368}
                                                ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f6c78: mov    %rdi,0x8(%rsp)
  0x00000000030f6c7d: mov    %rbx,(%rsp)
  0x00000000030f6c81: callq  0x00000000030d1520  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop [288]=Oop off=9382}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f6c86: jmpq   0x00000000030f4e04
  0x00000000030f6c8b: mov    %rax,0x8(%rsp)
  0x00000000030f6c90: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6c98: callq  0x00000000030d3220  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop [288]=Oop off=9405}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f6c9d: jmpq   0x00000000030f4e36
  0x00000000030f6ca2: mov    %rdi,0x8(%rsp)
  0x00000000030f6ca7: mov    %rbx,(%rsp)
  0x00000000030f6cab: callq  0x00000000030d1520  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=9424}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f6cb0: jmpq   0x00000000030f4f8f
  0x00000000030f6cb5: lea    0x128(%rsp),%rax
  0x00000000030f6cbd: mov    %rax,(%rsp)
  0x00000000030f6cc1: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6cc6: jmpq   0x00000000030f4fc6
  0x00000000030f6ccb: mov    %rdi,0x8(%rsp)
  0x00000000030f6cd0: mov    %rcx,(%rsp)
  0x00000000030f6cd4: callq  0x00000000030d1520  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=9465}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f6cd9: jmpq   0x00000000030f50b8
  0x00000000030f6cde: mov    %rax,0x8(%rsp)
  0x00000000030f6ce3: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6ceb: callq  0x00000000030d3220  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=9488}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f6cf0: jmpq   0x00000000030f50ea
  0x00000000030f6cf5: mov    %rdi,0x8(%rsp)
  0x00000000030f6cfa: mov    %rcx,(%rsp)
  0x00000000030f6cfe: callq  0x00000000030d1520  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop [320]=Oop off=9507}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f6d03: jmpq   0x00000000030f5246
  0x00000000030f6d08: lea    0x138(%rsp),%rax
  0x00000000030f6d10: mov    %rax,(%rsp)
  0x00000000030f6d14: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6d19: jmpq   0x00000000030f527d
  0x00000000030f6d1e: lea    0x128(%rsp),%rax
  0x00000000030f6d26: mov    %rax,(%rsp)
  0x00000000030f6d2a: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6d2f: jmpq   0x00000000030f53a8
  0x00000000030f6d34: lea    0x118(%rsp),%rax
  0x00000000030f6d3c: mov    %rax,(%rsp)
  0x00000000030f6d40: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6d45: jmpq   0x00000000030f5490
  0x00000000030f6d4a: mov    %rax,(%rsp)
  0x00000000030f6d4e: callq  0x00000000030d0d40  ; OopMap{[160]=Oop [152]=Oop [256]=Oop [272]=Oop off=9587}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 479)
                                                ;   {runtime_call}
  0x00000000030f6d53: lea    0x108(%rsp),%rax
  0x00000000030f6d5b: mov    %rax,(%rsp)
  0x00000000030f6d5f: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6d64: jmpq   0x00000000030f55ae
  0x00000000030f6d69: callq  0x0000000003041280  ; OopMap{[176]=Oop rax=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9614}
                                                ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {runtime_call}
  0x00000000030f6d6e: mov    %rdi,0x8(%rsp)
  0x00000000030f6d73: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6d7b: callq  0x00000000030d3220  ; OopMap{[176]=Oop rax=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9632}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::containsKey@-1 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {runtime_call}
  0x00000000030f6d80: jmpq   0x00000000030f56bc
  0x00000000030f6d85: mov    %rdi,0x8(%rsp)
  0x00000000030f6d8a: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6d92: callq  0x00000000030d3220  ; OopMap{[176]=Oop rax=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9655}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {runtime_call}
  0x00000000030f6d97: jmpq   0x00000000030f5700
  0x00000000030f6d9c: callq  0x0000000003041280  ; OopMap{[176]=Oop rax=Oop [192]=Oop [152]=Oop [184]=Oop [256]=Oop off=9665}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::containsKey@2 (line 595)
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {runtime_call}
  0x00000000030f6da1: mov    %rsi,0x8(%rsp)
  0x00000000030f6da6: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6dae: callq  0x00000000030d3220  ; OopMap{[192]=Oop rdx=Oop [152]=Oop rbx=Oop [256]=Oop off=9683}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000030f6db3: jmpq   0x00000000030f592d
  0x00000000030f6db8: mov    %rdx,%rdx
  0x00000000030f6dbb: callq  0x0000000003040940  ; OopMap{[192]=Oop rbx=Oop r8=Oop [152]=Oop [256]=Oop off=9696}
                                                ;*new  ; - sun.misc.URLClassPath::getLoader@0 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000030f6dc0: jmpq   0x00000000030f5971
  0x00000000030f6dc5: mov    %rdx,0x8(%rsp)
  0x00000000030f6dca: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6dd2: callq  0x00000000030d3220  ; OopMap{[192]=Oop rbx=Oop r8=Oop [152]=Oop rax=Oop [256]=Oop off=9719}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@-1 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000030f6dd7: jmpq   0x00000000030f59b8
  0x00000000030f6ddc: mov    %rdx,0x8(%rsp)
  0x00000000030f6de1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6de9: callq  0x00000000030d3220  ; OopMap{[192]=Oop r8=Oop [152]=Oop rax=Oop [256]=Oop off=9742}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@11 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000030f6dee: jmpq   0x00000000030f5a2d
  0x00000000030f6df3: mov    %rax,(%rsp)
  0x00000000030f6df7: callq  0x00000000030d0d40  ; OopMap{[192]=Oop [152]=Oop [256]=Oop off=9756}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@12 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000030f6dfc: callq  0x0000000003041280  ; OopMap{[192]=Oop [152]=Oop rsi=Oop [200]=Oop [256]=Oop off=9761}
                                                ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)
                                                ;   {runtime_call}
  0x00000000030f6e01: callq  0x0000000003041280  ; OopMap{[192]=Oop [200]=Oop rdx=Oop [152]=Oop r8=Oop [256]=Oop off=9766}
                                                ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)
                                                ;   {runtime_call}
  0x00000000030f6e06: callq  0x0000000003041280  ; OopMap{[192]=Oop [200]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9771}
                                                ;*invokevirtual add
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e0b: mov    %r8,0x8(%rsp)
  0x00000000030f6e10: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6e18: callq  0x00000000030d3220  ; OopMap{[192]=Oop [200]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9789}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e1d: jmpq   0x00000000030f5d24
  0x00000000030f6e22: mov    %rdi,0x8(%rsp)
  0x00000000030f6e27: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6e2f: callq  0x00000000030d3220  ; OopMap{[192]=Oop [200]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9812}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e34: jmpq   0x00000000030f5d72
  0x00000000030f6e39: mov    %rbx,0x8(%rsp)
  0x00000000030f6e3e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6e46: callq  0x00000000030d3220  ; OopMap{[192]=Oop [200]=Oop rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop off=9835}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e4b: jmpq   0x00000000030f5dfc
  0x00000000030f6e50: mov    %rbx,0x8(%rsp)
  0x00000000030f6e55: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6e5d: callq  0x00000000030d3220  ; OopMap{[192]=Oop [200]=Oop rdx=Oop [152]=Oop rsi=Oop rdi=Oop [256]=Oop off=9858}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e62: jmpq   0x00000000030f5e94
  0x00000000030f6e67: callq  0x0000000003041280  ; OopMap{[192]=Oop [200]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9868}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e6c: callq  0x0000000003041280  ; OopMap{[192]=Oop [152]=Oop rdi=Oop [200]=Oop rdx=Oop [256]=Oop off=9873}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e71: callq  0x0000000003041280  ; OopMap{[192]=Oop [152]=Oop rdi=Oop [200]=Oop rdx=Oop [256]=Oop off=9878}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e76: mov    %rbx,(%rsp)
  0x00000000030f6e7a: callq  0x0000000003041940  ; OopMap{[192]=Oop [152]=Oop rdi=Oop [200]=Oop rdx=Oop [256]=Oop off=9887}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e7f: callq  0x0000000003041280  ; OopMap{[192]=Oop [152]=Oop rdi=Oop [200]=Oop [256]=Oop off=9892}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e84: mov    %rdi,(%rsp)
  0x00000000030f6e88: callq  0x00000000030d0b00  ; OopMap{[192]=Oop [152]=Oop rdi=Oop [200]=Oop [256]=Oop off=9901}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000030f6e8d: callq  0x0000000003041280  ; OopMap{rdi=Oop [200]=Oop rax=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9906}
                                                ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {runtime_call}
  0x00000000030f6e92: mov    %rbx,0x8(%rsp)
  0x00000000030f6e97: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6e9f: callq  0x00000000030d3220  ; OopMap{rdi=Oop [200]=Oop rax=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9924}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {runtime_call}
  0x00000000030f6ea4: jmpq   0x00000000030f6136
  0x00000000030f6ea9: mov    %rbx,0x8(%rsp)
  0x00000000030f6eae: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6eb6: callq  0x00000000030d3220  ; OopMap{rdi=Oop [200]=Oop rax=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [256]=Oop off=9947}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {runtime_call}
  0x00000000030f6ebb: jmpq   0x00000000030f617a
  0x00000000030f6ec0: callq  0x0000000003041280  ; OopMap{rax=Oop [192]=Oop [200]=Oop [152]=Oop [216]=Oop [256]=Oop off=9957}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {runtime_call}
  0x00000000030f6ec5: mov    %rax,(%rsp)
  0x00000000030f6ec9: callq  0x00000000030d0d40  ; OopMap{[152]=Oop r8=Oop [192]=Oop [256]=Oop off=9966}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@21 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000030f6ece: callq  0x0000000003041280  ; OopMap{[152]=Oop r8=Oop [192]=Oop rax=Oop [256]=Oop off=9971}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000030f6ed3: mov    %rax,0x8(%rsp)
  0x00000000030f6ed8: movq   $0x97,(%rsp)
  0x00000000030f6ee0: callq  0x00000000030d3220  ; OopMap{[152]=Oop [256]=Oop off=9989}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)
                                                ;   {runtime_call}
  0x00000000030f6ee5: jmpq   0x00000000030f644a
  0x00000000030f6eea: mov    %rax,0x8(%rsp)
  0x00000000030f6eef: movq   $0x52,(%rsp)
  0x00000000030f6ef7: callq  0x00000000030d3220  ; OopMap{[152]=Oop [256]=Oop off=10012}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)
                                                ;   {runtime_call}
  0x00000000030f6efc: jmpq   0x00000000030f64a7
  0x00000000030f6f01: mov    %rax,0x8(%rsp)
  0x00000000030f6f06: movq   $0x73,(%rsp)
  0x00000000030f6f0e: callq  0x00000000030d3220  ; OopMap{[152]=Oop [256]=Oop off=10035}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)
                                                ;   {runtime_call}
  0x00000000030f6f13: jmpq   0x00000000030f651f
  0x00000000030f6f18: mov    %rax,0x8(%rsp)
  0x00000000030f6f1d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6f25: callq  0x00000000030d3220  ; OopMap{rsi=Oop [256]=Oop off=10058}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6f2a: jmpq   0x00000000030f65ba
  0x00000000030f6f2f: mov    %rax,0x8(%rsp)
  0x00000000030f6f34: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6f3c: callq  0x00000000030d3220  ; OopMap{rsi=Oop [256]=Oop off=10081}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6f41: jmpq   0x00000000030f6601
  0x00000000030f6f46: mov    %rax,0x8(%rsp)
  0x00000000030f6f4b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f6f53: callq  0x00000000030d3220  ; OopMap{rsi=Oop [256]=Oop off=10104}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6f58: jmpq   0x00000000030f6692
  0x00000000030f6f5d: callq  0x0000000003041280  ; OopMap{rax=Oop [256]=Oop off=10114}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6f62: callq  0x0000000003041280  ; OopMap{rax=Oop [256]=Oop off=10119}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6f67: mov    %r8,(%rsp)
  0x00000000030f6f6b: callq  0x0000000003041940  ; OopMap{rax=Oop [256]=Oop off=10128}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6f70: mov    %rax,(%rsp)
  0x00000000030f6f74: callq  0x00000000030d0d40  ; OopMap{[256]=Oop off=10137}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6f79: lea    0xf8(%rsp),%rax
  0x00000000030f6f81: mov    %rax,(%rsp)
  0x00000000030f6f85: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6f8a: jmpq   0x00000000030f67bf
  0x00000000030f6f8f: lea    0x108(%rsp),%rax
  0x00000000030f6f97: mov    %rax,(%rsp)
  0x00000000030f6f9b: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6fa0: jmpq   0x00000000030f6805
  0x00000000030f6fa5: lea    0xf8(%rsp),%rax
  0x00000000030f6fad: mov    %rax,(%rsp)
  0x00000000030f6fb1: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6fb6: jmpq   0x00000000030f6839
  0x00000000030f6fbb: lea    0xf8(%rsp),%rax
  0x00000000030f6fc3: mov    %rax,(%rsp)
  0x00000000030f6fc7: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f6fcc: jmpq   0x00000000030f6886
  0x00000000030f6fd1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030f6fdb: mov    $0xa050f00,%eax
  0x00000000030f6fe0: callq  0x00000000030d2160  ; OopMap{rsi=Oop [256]=Oop off=10245}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6fe5: jmpq   0x00000000030f68a0
  0x00000000030f6fea: mov    %rdx,%rdx
  0x00000000030f6fed: callq  0x0000000003040d60  ; OopMap{rsi=Oop [256]=Oop off=10258}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000030f6ff2: jmpq   0x00000000030f68af
  0x00000000030f6ff7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030f7001: mov    $0xa050f00,%eax
  0x00000000030f7006: callq  0x00000000030d2160  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=10283}
                                                ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f700b: jmpq   0x00000000030f6938
  0x00000000030f7010: mov    %rdx,%rdx
  0x00000000030f7013: callq  0x0000000003040d60  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=10296}
                                                ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000030f7018: jmpq   0x00000000030f6947
  0x00000000030f701d: lea    0x138(%rsp),%rax
  0x00000000030f7025: mov    %rax,(%rsp)
  0x00000000030f7029: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f702e: jmpq   0x00000000030f69d6
  0x00000000030f7033: lea    0x128(%rsp),%rax
  0x00000000030f703b: mov    %rax,(%rsp)
  0x00000000030f703f: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f7044: jmpq   0x00000000030f6a3b
  0x00000000030f7049: lea    0x128(%rsp),%rax
  0x00000000030f7051: mov    %rax,(%rsp)
  0x00000000030f7055: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f705a: jmpq   0x00000000030f6aa0
  0x00000000030f705f: lea    0x118(%rsp),%rax
  0x00000000030f7067: mov    %rax,(%rsp)
  0x00000000030f706b: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f7070: jmpq   0x00000000030f6b05
  0x00000000030f7075: lea    0x118(%rsp),%rax
  0x00000000030f707d: mov    %rax,(%rsp)
  0x00000000030f7081: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f7086: jmpq   0x00000000030f6b7a
  0x00000000030f708b: lea    0x108(%rsp),%rax
  0x00000000030f7093: mov    %rax,(%rsp)
  0x00000000030f7097: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f709c: jmpq   0x00000000030f6bdf
  0x00000000030f70a1: mov    0x90(%rsp),%ebx
  0x00000000030f70a8: jmpq   0x00000000030f69e9
  0x00000000030f70ad: mov    0x90(%rsp),%ebx
  0x00000000030f70b4: jmpq   0x00000000030f69e9
  0x00000000030f70b9: mov    0x90(%rsp),%ebx
  0x00000000030f70c0: jmpq   0x00000000030f69e9
  0x00000000030f70c5: mov    0x90(%rsp),%ebx
  0x00000000030f70cc: jmpq   0x00000000030f69e9
  0x00000000030f70d1: mov    0x90(%rsp),%ebx
  0x00000000030f70d8: jmpq   0x00000000030f69e9
  0x00000000030f70dd: mov    0x90(%rsp),%ebx
  0x00000000030f70e4: jmpq   0x00000000030f69e9
  0x00000000030f70e9: nop
  0x00000000030f70ea: nop
  0x00000000030f70eb: mov    0x2a8(%r15),%rax
  0x00000000030f70f2: movabs $0x0,%r10
  0x00000000030f70fc: mov    %r10,0x2a8(%r15)
  0x00000000030f7103: movabs $0x0,%r10
  0x00000000030f710d: mov    %r10,0x2b0(%r15)
  0x00000000030f7114: mov    %rax,%rbx
  0x00000000030f7117: lea    0xf8(%rsp),%rax
  0x00000000030f711f: mov    0x8(%rax),%rsi
  0x00000000030f7123: mov    (%rsi),%rdi
  0x00000000030f7126: and    $0x7,%rdi
  0x00000000030f712a: cmp    $0x5,%rdi
  0x00000000030f712e: je     0x00000000030f714b
  0x00000000030f7134: mov    (%rax),%rdi
  0x00000000030f7137: test   %rdi,%rdi
  0x00000000030f713a: je     0x00000000030f714b
  0x00000000030f7140: lock cmpxchg %rdi,(%rsi)
  0x00000000030f7145: jne    0x00000000030f715b
  0x00000000030f714b: mov    %rbx,%rax
  0x00000000030f714e: add    $0x150,%rsp
  0x00000000030f7155: pop    %rbp
  0x00000000030f7156: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030f715b: lea    0xf8(%rsp),%rax
  0x00000000030f7163: mov    %rax,(%rsp)
  0x00000000030f7167: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f716c: jmp    0x00000000030f714b
  0x00000000030f716e: hlt    
  0x00000000030f716f: hlt    
  0x00000000030f7170: hlt    
  0x00000000030f7171: hlt    
  0x00000000030f7172: hlt    
  0x00000000030f7173: hlt    
  0x00000000030f7174: hlt    
  0x00000000030f7175: hlt    
  0x00000000030f7176: hlt    
  0x00000000030f7177: hlt    
  0x00000000030f7178: hlt    
  0x00000000030f7179: hlt    
  0x00000000030f717a: hlt    
  0x00000000030f717b: hlt    
  0x00000000030f717c: hlt    
  0x00000000030f717d: hlt    
  0x00000000030f717e: hlt    
  0x00000000030f717f: hlt    
[Stub Code]
  0x00000000030f7180: nop                       ;   {no_reloc}
  0x00000000030f7181: nop
  0x00000000030f7182: nop
  0x00000000030f7183: nop
  0x00000000030f7184: nop
  0x00000000030f7185: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f718f: jmpq   0x00000000030f718f  ;   {runtime_call}
  0x00000000030f7194: nop
  0x00000000030f7195: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f719f: jmpq   0x00000000030f719f  ;   {runtime_call}
  0x00000000030f71a4: nop
  0x00000000030f71a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f71af: jmpq   0x00000000030f71af  ;   {runtime_call}
  0x00000000030f71b4: nop
  0x00000000030f71b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f71bf: jmpq   0x00000000030f71bf  ;   {runtime_call}
  0x00000000030f71c4: nop
  0x00000000030f71c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f71cf: jmpq   0x00000000030f71cf  ;   {runtime_call}
  0x00000000030f71d4: nop
  0x00000000030f71d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f71df: jmpq   0x00000000030f71df  ;   {runtime_call}
  0x00000000030f71e4: nop
  0x00000000030f71e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f71ef: jmpq   0x00000000030f71ef  ;   {runtime_call}
  0x00000000030f71f4: nop
  0x00000000030f71f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f71ff: jmpq   0x00000000030f71ff  ;   {runtime_call}
  0x00000000030f7204: nop
  0x00000000030f7205: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f720f: jmpq   0x00000000030f720f  ;   {runtime_call}
  0x00000000030f7214: nop
  0x00000000030f7215: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f721f: jmpq   0x00000000030f721f  ;   {runtime_call}
  0x00000000030f7224: nop
  0x00000000030f7225: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f722f: jmpq   0x00000000030f722f  ;   {runtime_call}
  0x00000000030f7234: nop
  0x00000000030f7235: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f723f: jmpq   0x00000000030f723f  ;   {runtime_call}
  0x00000000030f7244: nop
  0x00000000030f7245: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f724f: jmpq   0x00000000030f724f  ;   {runtime_call}
  0x00000000030f7254: nop
  0x00000000030f7255: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f725f: jmpq   0x00000000030f725f  ;   {runtime_call}
  0x00000000030f7264: nop
  0x00000000030f7265: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f726f: jmpq   0x00000000030f726f  ;   {runtime_call}
[Exception Handler]
  0x00000000030f7274: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030f7279: mov    %rsp,-0x28(%rsp)
  0x00000000030f727e: sub    $0x80,%rsp
  0x00000000030f7285: mov    %rax,0x78(%rsp)
  0x00000000030f728a: mov    %rcx,0x70(%rsp)
  0x00000000030f728f: mov    %rdx,0x68(%rsp)
  0x00000000030f7294: mov    %rbx,0x60(%rsp)
  0x00000000030f7299: mov    %rbp,0x50(%rsp)
  0x00000000030f729e: mov    %rsi,0x48(%rsp)
  0x00000000030f72a3: mov    %rdi,0x40(%rsp)
  0x00000000030f72a8: mov    %r8,0x38(%rsp)
  0x00000000030f72ad: mov    %r9,0x30(%rsp)
  0x00000000030f72b2: mov    %r10,0x28(%rsp)
  0x00000000030f72b7: mov    %r11,0x20(%rsp)
  0x00000000030f72bc: mov    %r12,0x18(%rsp)
  0x00000000030f72c1: mov    %r13,0x10(%rsp)
  0x00000000030f72c6: mov    %r14,0x8(%rsp)
  0x00000000030f72cb: mov    %r15,(%rsp)
  0x00000000030f72cf: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030f72d9: movabs $0x30f7279,%rdx    ;   {internal_word}
  0x00000000030f72e3: mov    %rsp,%r8
  0x00000000030f72e6: and    $0xfffffffffffffff0,%rsp
  0x00000000030f72ea: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030f72ef: hlt    
[Deopt Handler Code]
  0x00000000030f72f0: movabs $0x30f72f0,%r10    ;   {section_word}
  0x00000000030f72fa: push   %r10
  0x00000000030f72fc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030f7301: hlt    
  0x00000000030f7302: hlt    
  0x00000000030f7303: hlt    
  0x00000000030f7304: hlt    
  0x00000000030f7305: hlt    
  0x00000000030f7306: hlt    
  0x00000000030f7307: hlt    
<nmethod compile_id='59' compiler='C1' level='3' entry='0x00000000030f47e0' size='18560' address='0x00000000030f43d0' relocation_offset='288' insts_offset='1040' stub_offset='11696' scopes_data_offset='12280' scopes_pcs_offset='14536' dependencies_offset='17800' handler_table_offset='17816' nul_chk_table_offset='18408' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='197' count='313' backedge_count='45' iicount='313' stamp='19.355'/>
<writer thread='1104'/>
<task_queued compile_id='67' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='768' iicount='768' level='3' stamp='19.355' comment='tiered' hot_count='768'/>
<task_queued compile_id='68' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='5632' iicount='5632' stamp='19.356' comment='tiered' hot_count='5632'/>
<task_queued compile_id='69' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='597' iicount='597' level='3' stamp='19.356' comment='tiered' hot_count='597'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030f8c90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00000000030f8f00: mov    0x8(%rdx),%r10d
  0x00000000030f8f04: shl    $0x3,%r10
  0x00000000030f8f08: cmp    %rax,%r10
  0x00000000030f8f0b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030f8f11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030f8f1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030f8f20: mov    %eax,-0x6000(%rsp)
  0x00000000030f8f27: push   %rbp
  0x00000000030f8f28: sub    $0xa0,%rsp
  0x00000000030f8f2f: mov    %rdx,0x48(%rsp)
  0x00000000030f8f34: mov    %r8d,0x40(%rsp)
  0x00000000030f8f39: mov    %r9,0x50(%rsp)
  0x00000000030f8f3e: movabs $0x174e11e0,%rbx   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f8f48: mov    0xdc(%rbx),%eax
  0x00000000030f8f4e: add    $0x8,%eax
  0x00000000030f8f51: mov    %eax,0xdc(%rbx)
  0x00000000030f8f57: movabs $0x172ac540,%rbx   ;   {metadata({method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f8f61: and    $0x1ff8,%eax
  0x00000000030f8f67: cmp    $0x0,%eax
  0x00000000030f8f6a: je     0x00000000030f9fad  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 627)

  0x00000000030f8f70: mov    0x24(%rdx),%ebx    ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 627)

  0x00000000030f8f73: cmp    $0x0,%rbx
  0x00000000030f8f77: movabs $0x174e11e0,%rax   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f8f81: movabs $0x108,%r11
  0x00000000030f8f8b: je     0x00000000030f8f9b
  0x00000000030f8f91: movabs $0x118,%r11
  0x00000000030f8f9b: mov    (%rax,%r11,1),%r13
  0x00000000030f8f9f: lea    0x1(%r13),%r13
  0x00000000030f8fa3: mov    %r13,(%rax,%r11,1)
  0x00000000030f8fa7: je     0x00000000030f8ffb  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 627)

  0x00000000030f8fad: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ; implicit exception: dispatches to 0x00000000030f9fc4
  0x00000000030f8fb0: cmp    $0x0,%eax
  0x00000000030f8fb3: movabs $0x174e11e0,%r11   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f8fbd: movabs $0x128,%r13
  0x00000000030f8fc7: jne    0x00000000030f8fd7
  0x00000000030f8fcd: movabs $0x138,%r13
  0x00000000030f8fd7: mov    (%r11,%r13,1),%r14
  0x00000000030f8fdb: lea    0x1(%r14),%r14
  0x00000000030f8fdf: mov    %r14,(%r11,%r13,1)
  0x00000000030f8fe3: je     0x00000000030f8ffb  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 627)

  0x00000000030f8fe9: mov    %ecx,0x60(%rsp)
  0x00000000030f8fed: mov    %esi,0x44(%rsp)
  0x00000000030f8ff1: mov    %rdi,0x58(%rsp)
  0x00000000030f8ff6: jmpq   0x00000000030f90b1  ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x00000000030f8ffb: mov    %ecx,0x60(%rsp)
  0x00000000030f8fff: mov    %esi,0x44(%rsp)
  0x00000000030f9003: mov    %rdi,0x58(%rsp)
  0x00000000030f9008: mov    %rdx,%rbx
  0x00000000030f900b: movabs $0x174e11e0,%rax   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9015: mov    0x8(%rbx),%ebx
  0x00000000030f9018: shl    $0x3,%rbx
  0x00000000030f901c: cmp    0x150(%rax),%rbx
  0x00000000030f9023: jne    0x00000000030f9032
  0x00000000030f9025: addq   $0x1,0x158(%rax)
  0x00000000030f902d: jmpq   0x00000000030f9098
  0x00000000030f9032: cmp    0x160(%rax),%rbx
  0x00000000030f9039: jne    0x00000000030f9048
  0x00000000030f903b: addq   $0x1,0x168(%rax)
  0x00000000030f9043: jmpq   0x00000000030f9098
  0x00000000030f9048: cmpq   $0x0,0x150(%rax)
  0x00000000030f9053: jne    0x00000000030f906c
  0x00000000030f9055: mov    %rbx,0x150(%rax)
  0x00000000030f905c: movq   $0x1,0x158(%rax)
  0x00000000030f9067: jmpq   0x00000000030f9098
  0x00000000030f906c: cmpq   $0x0,0x160(%rax)
  0x00000000030f9077: jne    0x00000000030f9090
  0x00000000030f9079: mov    %rbx,0x160(%rax)
  0x00000000030f9080: movq   $0x1,0x168(%rax)
  0x00000000030f908b: jmpq   0x00000000030f9098
  0x00000000030f9090: addq   $0x1,0x148(%rax)
  0x00000000030f9098: mov    %rdx,%rbx
  0x00000000030f909b: mov    %rbx,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x00000000030f909e: nop
  0x00000000030f909f: callq  0x00000000030161a0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop off=420}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)
                                                ;   {optimized virtual_call}
  0x00000000030f90a4: mov    %rax,%r8           ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x00000000030f90a7: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ; implicit exception: dispatches to 0x00000000030f9fc9
  0x00000000030f90ab: mov    %r9,%rax
  0x00000000030f90ae: mov    %r8,%rbx           ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x00000000030f90b1: dec    %eax
  0x00000000030f90b3: and    0x40(%rsp),%eax
  0x00000000030f90b7: movslq %eax,%r8
  0x00000000030f90ba: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00000000030f9fce
  0x00000000030f90bd: jae    0x00000000030f9fd8
  0x00000000030f90c3: mov    0x10(%rbx,%r8,4),%esi  ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)

  0x00000000030f90c8: cmp    $0x0,%rsi
  0x00000000030f90cc: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f90d6: movabs $0x178,%r9
  0x00000000030f90e0: jne    0x00000000030f90f0
  0x00000000030f90e6: movabs $0x188,%r9
  0x00000000030f90f0: mov    (%r8,%r9,1),%rdi
  0x00000000030f90f4: lea    0x1(%rdi),%rdi
  0x00000000030f90f8: mov    %rdi,(%r8,%r9,1)
  0x00000000030f90fc: jne    0x00000000030f9320  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 629)

  0x00000000030f9102: mov    %eax,0x64(%rsp)
  0x00000000030f9106: mov    %rbx,0x68(%rsp)
  0x00000000030f910b: mov    0x48(%rsp),%rdx
  0x00000000030f9110: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f911a: mov    0x8(%rdx),%edx
  0x00000000030f911d: shl    $0x3,%rdx
  0x00000000030f9121: cmp    0x1a0(%r8),%rdx
  0x00000000030f9128: jne    0x00000000030f9137
  0x00000000030f912a: addq   $0x1,0x1a8(%r8)
  0x00000000030f9132: jmpq   0x00000000030f919d
  0x00000000030f9137: cmp    0x1b0(%r8),%rdx
  0x00000000030f913e: jne    0x00000000030f914d
  0x00000000030f9140: addq   $0x1,0x1b8(%r8)
  0x00000000030f9148: jmpq   0x00000000030f919d
  0x00000000030f914d: cmpq   $0x0,0x1a0(%r8)
  0x00000000030f9158: jne    0x00000000030f9171
  0x00000000030f915a: mov    %rdx,0x1a0(%r8)
  0x00000000030f9161: movq   $0x1,0x1a8(%r8)
  0x00000000030f916c: jmpq   0x00000000030f919d
  0x00000000030f9171: cmpq   $0x0,0x1b0(%r8)
  0x00000000030f917c: jne    0x00000000030f9195
  0x00000000030f917e: mov    %rdx,0x1b0(%r8)
  0x00000000030f9185: movq   $0x1,0x1b8(%r8)
  0x00000000030f9190: jmpq   0x00000000030f919d
  0x00000000030f9195: addq   $0x1,0x198(%r8)
  0x00000000030f919d: mov    0x40(%rsp),%r8d
  0x00000000030f91a2: mov    0x50(%rsp),%r9
  0x00000000030f91a7: mov    0x58(%rsp),%rdi
  0x00000000030f91ac: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000000030f91b6: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 630)

  0x00000000030f91bb: nop
  0x00000000030f91bc: nop
  0x00000000030f91bd: movabs $0xffffffffffffffff,%rax
  0x00000000030f91c7: callq  0x00000000030163e0  ; OopMap{[72]=Oop [104]=Oop off=716}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 630)
                                                ;   {virtual_call}
  0x00000000030f91cc: mov    0x64(%rsp),%r8d
  0x00000000030f91d1: movslq %r8d,%rdx
  0x00000000030f91d4: mov    0x68(%rsp),%rbx
  0x00000000030f91d9: lea    0x10(%rbx,%rdx,4),%rdx
  0x00000000030f91de: cmp    0xc(%rbx),%r8d
  0x00000000030f91e2: jae    0x00000000030f9fe1
  0x00000000030f91e8: cmp    $0x0,%rax
  0x00000000030f91ec: jne    0x00000000030f9207
  0x00000000030f91ee: movabs $0x174e11e0,%rsi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f91f8: orl    $0x100,0x1c0(%rsi)
  0x00000000030f9202: jmpq   0x00000000030f92f1
  0x00000000030f9207: mov    0x8(%rbx),%r8d     ; implicit exception: dispatches to 0x00000000030f9fea
  0x00000000030f920b: shl    $0x3,%r8
  0x00000000030f920f: mov    0x8(%rax),%esi
  0x00000000030f9212: shl    $0x3,%rsi
  0x00000000030f9216: mov    0xf0(%r8),%r8
  0x00000000030f921d: cmp    %r8,%rsi
  0x00000000030f9220: je     0x00000000030f9252
  0x00000000030f9226: mov    0xc(%r8),%edi
  0x00000000030f922a: cmp    (%rsi,%rdi,1),%r8
  0x00000000030f922e: je     0x00000000030f9252
  0x00000000030f9234: cmp    $0x18,%edi
  0x00000000030f9237: jne    0x00000000030f92da
  0x00000000030f923d: push   %rsi
  0x00000000030f923e: push   %r8
  0x00000000030f9240: callq  0x00000000030d11a0  ;   {runtime_call}
  0x00000000030f9245: pop    %rsi
  0x00000000030f9246: pop    %r8
  0x00000000030f9248: cmp    $0x0,%r8d
  0x00000000030f924c: je     0x00000000030f92da
  0x00000000030f9252: movabs $0x174e11e0,%rsi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f925c: mov    0x8(%rax),%r8d
  0x00000000030f9260: shl    $0x3,%r8
  0x00000000030f9264: cmp    0x1d0(%rsi),%r8
  0x00000000030f926b: jne    0x00000000030f927a
  0x00000000030f926d: addq   $0x1,0x1d8(%rsi)
  0x00000000030f9275: jmpq   0x00000000030f92f1
  0x00000000030f927a: cmp    0x1e0(%rsi),%r8
  0x00000000030f9281: jne    0x00000000030f9290
  0x00000000030f9283: addq   $0x1,0x1e8(%rsi)
  0x00000000030f928b: jmpq   0x00000000030f92f1
  0x00000000030f9290: cmpq   $0x0,0x1d0(%rsi)
  0x00000000030f929b: jne    0x00000000030f92b4
  0x00000000030f929d: mov    %r8,0x1d0(%rsi)
  0x00000000030f92a4: movq   $0x1,0x1d8(%rsi)
  0x00000000030f92af: jmpq   0x00000000030f92f1
  0x00000000030f92b4: cmpq   $0x0,0x1e0(%rsi)
  0x00000000030f92bf: jne    0x00000000030f92d8
  0x00000000030f92c1: mov    %r8,0x1e0(%rsi)
  0x00000000030f92c8: movq   $0x1,0x1e8(%rsi)
  0x00000000030f92d3: jmpq   0x00000000030f92f1
  0x00000000030f92d8: jmp    0x00000000030f92f1
  0x00000000030f92da: movabs $0x174e11e0,%rsi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f92e4: subq   $0x1,0x1c8(%rsi)
  0x00000000030f92ec: jmpq   0x00000000030f9fef
  0x00000000030f92f1: mov    %rax,%r10
  0x00000000030f92f4: mov    %r10d,(%rdx)
  0x00000000030f92f7: shr    $0x9,%rdx
  0x00000000030f92fb: movabs $0x11f87000,%r8
  0x00000000030f9305: movb   $0x0,(%rdx,%r8,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)

  0x00000000030f930a: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9314: incl   0x1f8(%r8)
  0x00000000030f931b: jmpq   0x00000000030f9c80  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 630)

  0x00000000030f9320: mov    0xc(%rsi),%r8d     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ; implicit exception: dispatches to 0x00000000030f9ff8
  0x00000000030f9324: cmp    0x40(%rsp),%r8d
  0x00000000030f9329: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9333: movabs $0x210,%rdx
  0x00000000030f933d: jne    0x00000000030f934d
  0x00000000030f9343: movabs $0x220,%rdx
  0x00000000030f934d: mov    (%r8,%rdx,1),%rdi
  0x00000000030f9351: lea    0x1(%rdi),%rdi
  0x00000000030f9355: mov    %rdi,(%r8,%rdx,1)
  0x00000000030f9359: je     0x00000000030f9369  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 633)

  0x00000000030f935f: mov    %rbx,0x68(%rsp)
  0x00000000030f9364: jmpq   0x00000000030f94e2  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x00000000030f9369: mov    0x50(%rsp),%r9
  0x00000000030f936e: mov    0x10(%rsi),%r8d    ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 633)

  0x00000000030f9372: cmp    %r9,%r8
  0x00000000030f9375: movabs $0x174e11e0,%rdx   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f937f: movabs $0x230,%rdi
  0x00000000030f9389: je     0x00000000030f9399
  0x00000000030f938f: movabs $0x240,%rdi
  0x00000000030f9399: mov    (%rdx,%rdi,1),%rax
  0x00000000030f939d: lea    0x1(%rax),%rax
  0x00000000030f93a1: mov    %rax,(%rdx,%rdi,1)
  0x00000000030f93a5: je     0x00000000030f9c32  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 633)

  0x00000000030f93ab: cmp    $0x0,%r9
  0x00000000030f93af: movabs $0x174e11e0,%rdx   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f93b9: movabs $0x250,%rdi
  0x00000000030f93c3: je     0x00000000030f93d3
  0x00000000030f93c9: movabs $0x260,%rdi
  0x00000000030f93d3: mov    (%rdx,%rdi,1),%rax
  0x00000000030f93d7: lea    0x1(%rax),%rax
  0x00000000030f93db: mov    %rax,(%rdx,%rdi,1)
  0x00000000030f93df: jne    0x00000000030f93ef  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 633)

  0x00000000030f93e5: mov    %rbx,0x68(%rsp)
  0x00000000030f93ea: jmpq   0x00000000030f94e2  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x00000000030f93ef: mov    %rsi,0x70(%rsp)
  0x00000000030f93f4: mov    %rbx,0x68(%rsp)
  0x00000000030f93f9: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000000030f9ffd
  0x00000000030f93fc: mov    %r9,%rdx
  0x00000000030f93ff: movabs $0x174e11e0,%rdi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9409: mov    0x8(%rdx),%edx
  0x00000000030f940c: shl    $0x3,%rdx
  0x00000000030f9410: cmp    0x278(%rdi),%rdx
  0x00000000030f9417: jne    0x00000000030f9426
  0x00000000030f9419: addq   $0x1,0x280(%rdi)
  0x00000000030f9421: jmpq   0x00000000030f948c
  0x00000000030f9426: cmp    0x288(%rdi),%rdx
  0x00000000030f942d: jne    0x00000000030f943c
  0x00000000030f942f: addq   $0x1,0x290(%rdi)
  0x00000000030f9437: jmpq   0x00000000030f948c
  0x00000000030f943c: cmpq   $0x0,0x278(%rdi)
  0x00000000030f9447: jne    0x00000000030f9460
  0x00000000030f9449: mov    %rdx,0x278(%rdi)
  0x00000000030f9450: movq   $0x1,0x280(%rdi)
  0x00000000030f945b: jmpq   0x00000000030f948c
  0x00000000030f9460: cmpq   $0x0,0x288(%rdi)
  0x00000000030f946b: jne    0x00000000030f9484
  0x00000000030f946d: mov    %rdx,0x288(%rdi)
  0x00000000030f9474: movq   $0x1,0x290(%rdi)
  0x00000000030f947f: jmpq   0x00000000030f948c
  0x00000000030f9484: addq   $0x1,0x270(%rdi)
  0x00000000030f948c: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)

  0x00000000030f948f: nop
  0x00000000030f9490: nop
  0x00000000030f9491: nop
  0x00000000030f9492: nop
  0x00000000030f9493: nop
  0x00000000030f9494: nop
  0x00000000030f9495: movabs $0xffffffffffffffff,%rax
  0x00000000030f949f: callq  0x00000000030163e0  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop off=1444}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {virtual_call}
  0x00000000030f94a4: cmp    $0x0,%eax
  0x00000000030f94a7: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f94b1: movabs $0x2a0,%r9
  0x00000000030f94bb: je     0x00000000030f94cb
  0x00000000030f94c1: movabs $0x2b0,%r9
  0x00000000030f94cb: mov    (%r8,%r9,1),%rdi
  0x00000000030f94cf: lea    0x1(%rdi),%rdi
  0x00000000030f94d3: mov    %rdi,(%r8,%r9,1)
  0x00000000030f94d7: mov    0x70(%rsp),%rsi
  0x00000000030f94dc: jne    0x00000000030f9c32  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 634)

  0x00000000030f94e2: cmp    $0x0,%rsi
  0x00000000030f94e6: jne    0x00000000030f9501
  0x00000000030f94e8: movabs $0x174e11e0,%rdi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f94f2: orl    $0x100,0x2d0(%rdi)
  0x00000000030f94fc: jmpq   0x00000000030f95c2
  0x00000000030f9501: movabs $0x100038e90,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000000030f950b: mov    0x8(%rsi),%r9d
  0x00000000030f950f: shl    $0x3,%r9
  0x00000000030f9513: cmp    %r9,%rcx
  0x00000000030f9516: jne    0x00000000030f95a6
  0x00000000030f951c: movabs $0x174e11e0,%rdi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9526: mov    0x8(%rsi),%ecx
  0x00000000030f9529: shl    $0x3,%rcx
  0x00000000030f952d: cmp    0x2e0(%rdi),%rcx
  0x00000000030f9534: jne    0x00000000030f9543
  0x00000000030f9536: addq   $0x1,0x2e8(%rdi)
  0x00000000030f953e: jmpq   0x00000000030f95c7
  0x00000000030f9543: cmp    0x2f0(%rdi),%rcx
  0x00000000030f954a: jne    0x00000000030f9559
  0x00000000030f954c: addq   $0x1,0x2f8(%rdi)
  0x00000000030f9554: jmpq   0x00000000030f95c7
  0x00000000030f9559: cmpq   $0x0,0x2e0(%rdi)
  0x00000000030f9564: jne    0x00000000030f957d
  0x00000000030f9566: mov    %rcx,0x2e0(%rdi)
  0x00000000030f956d: movq   $0x1,0x2e8(%rdi)
  0x00000000030f9578: jmpq   0x00000000030f95c7
  0x00000000030f957d: cmpq   $0x0,0x2f0(%rdi)
  0x00000000030f9588: jne    0x00000000030f95a1
  0x00000000030f958a: mov    %rcx,0x2f0(%rdi)
  0x00000000030f9591: movq   $0x1,0x2f8(%rdi)
  0x00000000030f959c: jmpq   0x00000000030f95c7
  0x00000000030f95a1: jmpq   0x00000000030f95c7
  0x00000000030f95a6: movabs $0x174e11e0,%rdi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f95b0: subq   $0x1,0x2d8(%rdi)
  0x00000000030f95b8: jmpq   0x00000000030f95c2
  0x00000000030f95bd: jmpq   0x00000000030f95c7
  0x00000000030f95c2: xor    %r8,%r8
  0x00000000030f95c5: jmp    0x00000000030f95d1
  0x00000000030f95c7: movabs $0x1,%r8           ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 636)

  0x00000000030f95d1: cmp    $0x0,%r8d
  0x00000000030f95d5: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f95df: movabs $0x308,%r9
  0x00000000030f95e9: je     0x00000000030f95f9
  0x00000000030f95ef: movabs $0x318,%r9
  0x00000000030f95f9: mov    (%r8,%r9,1),%rdi
  0x00000000030f95fd: lea    0x1(%rdi),%rdi
  0x00000000030f9601: mov    %rdi,(%r8,%r9,1)
  0x00000000030f9605: je     0x00000000030f97ba  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 636)

  0x00000000030f960b: cmp    $0x0,%rsi
  0x00000000030f960f: jne    0x00000000030f962b
  0x00000000030f9611: movabs $0x174e11e0,%r9    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f961b: orl    $0x100,0x320(%r9)
  0x00000000030f9626: jmpq   0x00000000030f96ec
  0x00000000030f962b: movabs $0x100038e90,%rdi  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000000030f9635: mov    0x8(%rsi),%r8d
  0x00000000030f9639: shl    $0x3,%r8
  0x00000000030f963d: cmp    %r8,%rdi
  0x00000000030f9640: jne    0x00000000030f96d0
  0x00000000030f9646: movabs $0x174e11e0,%r9    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9650: mov    0x8(%rsi),%edi
  0x00000000030f9653: shl    $0x3,%rdi
  0x00000000030f9657: cmp    0x330(%r9),%rdi
  0x00000000030f965e: jne    0x00000000030f966d
  0x00000000030f9660: addq   $0x1,0x338(%r9)
  0x00000000030f9668: jmpq   0x00000000030f96ec
  0x00000000030f966d: cmp    0x340(%r9),%rdi
  0x00000000030f9674: jne    0x00000000030f9683
  0x00000000030f9676: addq   $0x1,0x348(%r9)
  0x00000000030f967e: jmpq   0x00000000030f96ec
  0x00000000030f9683: cmpq   $0x0,0x330(%r9)
  0x00000000030f968e: jne    0x00000000030f96a7
  0x00000000030f9690: mov    %rdi,0x330(%r9)
  0x00000000030f9697: movq   $0x1,0x338(%r9)
  0x00000000030f96a2: jmpq   0x00000000030f96ec
  0x00000000030f96a7: cmpq   $0x0,0x340(%r9)
  0x00000000030f96b2: jne    0x00000000030f96cb
  0x00000000030f96b4: mov    %rdi,0x340(%r9)
  0x00000000030f96bb: movq   $0x1,0x348(%r9)
  0x00000000030f96c6: jmpq   0x00000000030f96ec
  0x00000000030f96cb: jmpq   0x00000000030f96ec
  0x00000000030f96d0: movabs $0x174e11e0,%r9    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f96da: subq   $0x1,0x328(%r9)
  0x00000000030f96e2: jmpq   0x00000000030fa002
  0x00000000030f96e7: jmpq   0x00000000030f96ec
  0x00000000030f96ec: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 637)

  0x00000000030f96ef: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000030fa00b
  0x00000000030f96f2: mov    %rdx,%r8
  0x00000000030f96f5: movabs $0x174e11e0,%r9    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f96ff: mov    0x8(%r8),%r8d
  0x00000000030f9703: shl    $0x3,%r8
  0x00000000030f9707: cmp    0x360(%r9),%r8
  0x00000000030f970e: jne    0x00000000030f971d
  0x00000000030f9710: addq   $0x1,0x368(%r9)
  0x00000000030f9718: jmpq   0x00000000030f9783
  0x00000000030f971d: cmp    0x370(%r9),%r8
  0x00000000030f9724: jne    0x00000000030f9733
  0x00000000030f9726: addq   $0x1,0x378(%r9)
  0x00000000030f972e: jmpq   0x00000000030f9783
  0x00000000030f9733: cmpq   $0x0,0x360(%r9)
  0x00000000030f973e: jne    0x00000000030f9757
  0x00000000030f9740: mov    %r8,0x360(%r9)
  0x00000000030f9747: movq   $0x1,0x368(%r9)
  0x00000000030f9752: jmpq   0x00000000030f9783
  0x00000000030f9757: cmpq   $0x0,0x370(%r9)
  0x00000000030f9762: jne    0x00000000030f977b
  0x00000000030f9764: mov    %r8,0x370(%r9)
  0x00000000030f976b: movq   $0x1,0x378(%r9)
  0x00000000030f9776: jmpq   0x00000000030f9783
  0x00000000030f977b: addq   $0x1,0x358(%r9)
  0x00000000030f9783: mov    0x48(%rsp),%r8
  0x00000000030f9788: mov    0x68(%rsp),%r9
  0x00000000030f978d: mov    0x40(%rsp),%edi
  0x00000000030f9791: mov    0x50(%rsp),%rsi
  0x00000000030f9796: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)

  0x00000000030f979b: nop
  0x00000000030f979c: nop
  0x00000000030f979d: nop
  0x00000000030f979e: nop
  0x00000000030f979f: callq  0x00000000030161a0  ; OopMap{[72]=Oop [88]=Oop off=2212}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {optimized virtual_call}
  0x00000000030f97a4: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f97ae: incl   0x388(%r8)
  0x00000000030f97b5: jmpq   0x00000000030f9c46  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 637)

  0x00000000030f97ba: mov    $0x0,%edi          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 640)

  0x00000000030f97bf: nop
  0x00000000030f97c0: mov    %edi,0x78(%rsp)
  0x00000000030f97c4: mov    0x50(%rsp),%r9
  0x00000000030f97c9: mov    0x40(%rsp),%r8d
  0x00000000030f97ce: mov    0x18(%rsi),%ebx    ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 640)
                                                ; implicit exception: dispatches to 0x00000000030fa010
  0x00000000030f97d1: mov    %rbx,0x80(%rsp)
  0x00000000030f97d9: cmp    $0x0,%rbx
  0x00000000030f97dd: movabs $0x174e11e0,%rdx   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f97e7: movabs $0x3a0,%rax
  0x00000000030f97f1: jne    0x00000000030f9801
  0x00000000030f97f7: movabs $0x3b0,%rax
  0x00000000030f9801: mov    (%rdx,%rax,1),%rcx
  0x00000000030f9805: lea    0x1(%rcx),%rcx
  0x00000000030f9809: mov    %rcx,(%rdx,%rax,1)
  0x00000000030f980d: je     0x00000000030f9a39  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 640)

  0x00000000030f9813: mov    0xc(%rbx),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ; implicit exception: dispatches to 0x00000000030fa015
  0x00000000030f9816: cmp    %r8d,%edx
  0x00000000030f9819: movabs $0x174e11e0,%rdx   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9823: movabs $0x458,%rsi
  0x00000000030f982d: jne    0x00000000030f983d
  0x00000000030f9833: movabs $0x468,%rsi
  0x00000000030f983d: mov    (%rdx,%rsi,1),%rax
  0x00000000030f9841: lea    0x1(%rax),%rax
  0x00000000030f9845: mov    %rax,(%rdx,%rsi,1)
  0x00000000030f9849: jne    0x00000000030f99ad  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 646)

  0x00000000030f984f: mov    0x10(%rbx),%edx    ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 646)

  0x00000000030f9852: cmp    %r9,%rdx
  0x00000000030f9855: movabs $0x174e11e0,%rsi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f985f: movabs $0x478,%rax
  0x00000000030f9869: je     0x00000000030f9879
  0x00000000030f986f: movabs $0x488,%rax
  0x00000000030f9879: mov    (%rsi,%rax,1),%rcx
  0x00000000030f987d: lea    0x1(%rcx),%rcx
  0x00000000030f9881: mov    %rcx,(%rsi,%rax,1)
  0x00000000030f9885: je     0x00000000030f9a0e  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 646)

  0x00000000030f988b: cmp    $0x0,%r9
  0x00000000030f988f: movabs $0x174e11e0,%rsi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9899: movabs $0x498,%rax
  0x00000000030f98a3: je     0x00000000030f98b3
  0x00000000030f98a9: movabs $0x4a8,%rax
  0x00000000030f98b3: mov    (%rsi,%rax,1),%rcx
  0x00000000030f98b7: lea    0x1(%rcx),%rcx
  0x00000000030f98bb: mov    %rcx,(%rsi,%rax,1)
  0x00000000030f98bf: je     0x00000000030f99ad  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 646)

  0x00000000030f98c5: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000000030fa01a
  0x00000000030f98c8: mov    %r9,%rsi
  0x00000000030f98cb: movabs $0x174e11e0,%rax   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f98d5: mov    0x8(%rsi),%esi
  0x00000000030f98d8: shl    $0x3,%rsi
  0x00000000030f98dc: cmp    0x4c0(%rax),%rsi
  0x00000000030f98e3: jne    0x00000000030f98f2
  0x00000000030f98e5: addq   $0x1,0x4c8(%rax)
  0x00000000030f98ed: jmpq   0x00000000030f9958
  0x00000000030f98f2: cmp    0x4d0(%rax),%rsi
  0x00000000030f98f9: jne    0x00000000030f9908
  0x00000000030f98fb: addq   $0x1,0x4d8(%rax)
  0x00000000030f9903: jmpq   0x00000000030f9958
  0x00000000030f9908: cmpq   $0x0,0x4c0(%rax)
  0x00000000030f9913: jne    0x00000000030f992c
  0x00000000030f9915: mov    %rsi,0x4c0(%rax)
  0x00000000030f991c: movq   $0x1,0x4c8(%rax)
  0x00000000030f9927: jmpq   0x00000000030f9958
  0x00000000030f992c: cmpq   $0x0,0x4d0(%rax)
  0x00000000030f9937: jne    0x00000000030f9950
  0x00000000030f9939: mov    %rsi,0x4d0(%rax)
  0x00000000030f9940: movq   $0x1,0x4d8(%rax)
  0x00000000030f994b: jmpq   0x00000000030f9958
  0x00000000030f9950: addq   $0x1,0x4b8(%rax)
  0x00000000030f9958: mov    %rdx,%r8
  0x00000000030f995b: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)

  0x00000000030f995e: nop
  0x00000000030f995f: nop
  0x00000000030f9960: nop
  0x00000000030f9961: nop
  0x00000000030f9962: nop
  0x00000000030f9963: nop
  0x00000000030f9964: nop
  0x00000000030f9965: movabs $0xffffffffffffffff,%rax
  0x00000000030f996f: callq  0x00000000030163e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2676}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {virtual_call}
  0x00000000030f9974: cmp    $0x0,%eax
  0x00000000030f9977: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9981: movabs $0x4e8,%r9
  0x00000000030f998b: je     0x00000000030f999b
  0x00000000030f9991: movabs $0x4f8,%r9
  0x00000000030f999b: mov    (%r8,%r9,1),%rdi
  0x00000000030f999f: lea    0x1(%rdi),%rdi
  0x00000000030f99a3: mov    %rdi,(%r8,%r9,1)
  0x00000000030f99a7: jne    0x00000000030f9a1b  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 647)

  0x00000000030f99ad: mov    0x78(%rsp),%edi
  0x00000000030f99b1: inc    %edi
  0x00000000030f99b3: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f99bd: mov    0xe0(%r8),%r9d
  0x00000000030f99c4: add    $0x8,%r9d
  0x00000000030f99c8: mov    %r9d,0xe0(%r8)
  0x00000000030f99cf: movabs $0x172ac540,%r8    ;   {metadata({method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f99d9: and    $0xfff8,%r9d
  0x00000000030f99e0: cmp    $0x0,%r9d
  0x00000000030f99e4: je     0x00000000030fa01f  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2794}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x00000000030f99ea: test   %eax,-0x29098f0(%rip)        # 0x00000000007f0100
                                                ;   {poll}
  0x00000000030f99f0: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f99fa: incl   0x520(%r8)
  0x00000000030f9a01: mov    0x80(%rsp),%rsi
  0x00000000030f9a09: jmpq   0x00000000030f97c0  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x00000000030f9a0e: mov    0x80(%rsp),%rax
  0x00000000030f9a16: jmpq   0x00000000030f9c46  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x00000000030f9a1b: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9a25: incl   0x508(%r8)
  0x00000000030f9a2c: mov    0x80(%rsp),%rax
  0x00000000030f9a34: jmpq   0x00000000030f9c46  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 648)

  0x00000000030f9a39: mov    %rsi,0x88(%rsp)
  0x00000000030f9a41: mov    0x48(%rsp),%rdx
  0x00000000030f9a46: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9a50: mov    0x8(%rdx),%edx
  0x00000000030f9a53: shl    $0x3,%rdx
  0x00000000030f9a57: cmp    0x3c8(%r8),%rdx
  0x00000000030f9a5e: jne    0x00000000030f9a6d
  0x00000000030f9a60: addq   $0x1,0x3d0(%r8)
  0x00000000030f9a68: jmpq   0x00000000030f9ad3
  0x00000000030f9a6d: cmp    0x3d8(%r8),%rdx
  0x00000000030f9a74: jne    0x00000000030f9a83
  0x00000000030f9a76: addq   $0x1,0x3e0(%r8)
  0x00000000030f9a7e: jmpq   0x00000000030f9ad3
  0x00000000030f9a83: cmpq   $0x0,0x3c8(%r8)
  0x00000000030f9a8e: jne    0x00000000030f9aa7
  0x00000000030f9a90: mov    %rdx,0x3c8(%r8)
  0x00000000030f9a97: movq   $0x1,0x3d0(%r8)
  0x00000000030f9aa2: jmpq   0x00000000030f9ad3
  0x00000000030f9aa7: cmpq   $0x0,0x3d8(%r8)
  0x00000000030f9ab2: jne    0x00000000030f9acb
  0x00000000030f9ab4: mov    %rdx,0x3d8(%r8)
  0x00000000030f9abb: movq   $0x1,0x3e0(%r8)
  0x00000000030f9ac6: jmpq   0x00000000030f9ad3
  0x00000000030f9acb: addq   $0x1,0x3c0(%r8)
  0x00000000030f9ad3: mov    0x40(%rsp),%r8d
  0x00000000030f9ad8: mov    0x58(%rsp),%rdi
  0x00000000030f9add: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000000030f9ae7: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 641)

  0x00000000030f9aec: nop
  0x00000000030f9aed: movabs $0xffffffffffffffff,%rax
  0x00000000030f9af7: callq  0x00000000030163e0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=3068}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 641)
                                                ;   {virtual_call}
  0x00000000030f9afc: mov    0x88(%rsp),%rsi
  0x00000000030f9b04: mov    %rax,%r10
  0x00000000030f9b07: mov    %r10d,0x18(%rsi)
  0x00000000030f9b0b: shr    $0x9,%rsi
  0x00000000030f9b0f: movabs $0x11f87000,%r8
  0x00000000030f9b19: movb   $0x0,(%rsi,%r8,1)  ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 641)

  0x00000000030f9b1e: mov    0x78(%rsp),%edi
  0x00000000030f9b22: cmp    $0x7,%edi
  0x00000000030f9b25: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9b2f: movabs $0x3f0,%r9
  0x00000000030f9b39: jl     0x00000000030f9b49
  0x00000000030f9b3f: movabs $0x400,%r9
  0x00000000030f9b49: mov    (%r8,%r9,1),%rdx
  0x00000000030f9b4d: lea    0x1(%rdx),%rdx
  0x00000000030f9b51: mov    %rdx,(%r8,%r9,1)
  0x00000000030f9b55: jge    0x00000000030f9b68  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 642)

  0x00000000030f9b5b: mov    0x80(%rsp),%rax
  0x00000000030f9b63: jmpq   0x00000000030f9c46  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x00000000030f9b68: mov    0x68(%rsp),%rbx
  0x00000000030f9b6d: mov    0x40(%rsp),%r9d
  0x00000000030f9b72: mov    0x48(%rsp),%rdx
  0x00000000030f9b77: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9b81: mov    0x8(%rdx),%edx
  0x00000000030f9b84: shl    $0x3,%rdx
  0x00000000030f9b88: cmp    0x418(%r8),%rdx
  0x00000000030f9b8f: jne    0x00000000030f9b9e
  0x00000000030f9b91: addq   $0x1,0x420(%r8)
  0x00000000030f9b99: jmpq   0x00000000030f9c04
  0x00000000030f9b9e: cmp    0x428(%r8),%rdx
  0x00000000030f9ba5: jne    0x00000000030f9bb4
  0x00000000030f9ba7: addq   $0x1,0x430(%r8)
  0x00000000030f9baf: jmpq   0x00000000030f9c04
  0x00000000030f9bb4: cmpq   $0x0,0x418(%r8)
  0x00000000030f9bbf: jne    0x00000000030f9bd8
  0x00000000030f9bc1: mov    %rdx,0x418(%r8)
  0x00000000030f9bc8: movq   $0x1,0x420(%r8)
  0x00000000030f9bd3: jmpq   0x00000000030f9c04
  0x00000000030f9bd8: cmpq   $0x0,0x428(%r8)
  0x00000000030f9be3: jne    0x00000000030f9bfc
  0x00000000030f9be5: mov    %rdx,0x428(%r8)
  0x00000000030f9bec: movq   $0x1,0x430(%r8)
  0x00000000030f9bf7: jmpq   0x00000000030f9c04
  0x00000000030f9bfc: addq   $0x1,0x410(%r8)
  0x00000000030f9c04: mov    %rbx,%r8
  0x00000000030f9c07: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 643)

  0x00000000030f9c0c: nop
  0x00000000030f9c0d: nop
  0x00000000030f9c0e: nop
  0x00000000030f9c0f: callq  0x00000000030161a0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=3348}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 643)
                                                ;   {optimized virtual_call}
  0x00000000030f9c14: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9c1e: incl   0x440(%r8)
  0x00000000030f9c25: mov    0x80(%rsp),%rax
  0x00000000030f9c2d: jmpq   0x00000000030f9c46  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 643)

  0x00000000030f9c32: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9c3c: incl   0x2c0(%r8)
  0x00000000030f9c43: mov    %rsi,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 635)

  0x00000000030f9c46: cmp    $0x0,%rax
  0x00000000030f9c4a: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9c54: movabs $0x538,%rdx
  0x00000000030f9c5e: je     0x00000000030f9c6e
  0x00000000030f9c64: movabs $0x548,%rdx
  0x00000000030f9c6e: mov    (%r8,%rdx,1),%rsi
  0x00000000030f9c72: lea    0x1(%rsi),%rsi
  0x00000000030f9c76: mov    %rsi,(%r8,%rdx,1)
  0x00000000030f9c7a: jne    0x00000000030f9ce0  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 652)

  0x00000000030f9c80: mov    0x48(%rsp),%rdx
  0x00000000030f9c85: mov    0x18(%rdx),%r8d    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 660)

  0x00000000030f9c89: inc    %r8d
  0x00000000030f9c8c: mov    %r8d,0x18(%rdx)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 660)

  0x00000000030f9c90: mov    0x14(%rdx),%r8d    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 661)

  0x00000000030f9c94: inc    %r8d
  0x00000000030f9c97: mov    %r8d,0x14(%rdx)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 661)

  0x00000000030f9c9b: mov    0x1c(%rdx),%esi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 661)

  0x00000000030f9c9e: cmp    %esi,%r8d
  0x00000000030f9ca1: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9cab: movabs $0x5c8,%rsi
  0x00000000030f9cb5: jle    0x00000000030f9cc5
  0x00000000030f9cbb: movabs $0x5d8,%rsi
  0x00000000030f9cc5: mov    (%r8,%rsi,1),%rdi
  0x00000000030f9cc9: lea    0x1(%rdi),%rdi
  0x00000000030f9ccd: mov    %rdi,(%r8,%rsi,1)
  0x00000000030f9cd1: jg     0x00000000030f9e43  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 661)

  0x00000000030f9cd7: mov    0x60(%rsp),%ecx
  0x00000000030f9cdb: jmpq   0x00000000030f9eed  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 663)

  0x00000000030f9ce0: mov    0x44(%rsp),%esi
  0x00000000030f9ce4: mov    0x48(%rsp),%rdx
  0x00000000030f9ce9: mov    0x14(%rax),%edi    ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 653)
                                                ; implicit exception: dispatches to 0x00000000030fa036
  0x00000000030f9cec: cmp    $0x0,%esi
  0x00000000030f9cef: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9cf9: movabs $0x558,%rsi
  0x00000000030f9d03: je     0x00000000030f9d13
  0x00000000030f9d09: movabs $0x568,%rsi
  0x00000000030f9d13: mov    (%r8,%rsi,1),%rbx
  0x00000000030f9d17: lea    0x1(%rbx),%rbx
  0x00000000030f9d1b: mov    %rbx,(%r8,%rsi,1)
  0x00000000030f9d1f: je     0x00000000030f9d5f  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 654)

  0x00000000030f9d25: cmp    $0x0,%rdi
  0x00000000030f9d29: movabs $0x174e11e0,%r8    ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9d33: movabs $0x578,%rsi
  0x00000000030f9d3d: jne    0x00000000030f9d4d
  0x00000000030f9d43: movabs $0x588,%rsi
  0x00000000030f9d4d: mov    (%r8,%rsi,1),%rbx
  0x00000000030f9d51: lea    0x1(%rbx),%rbx
  0x00000000030f9d55: mov    %rbx,(%r8,%rsi,1)
  0x00000000030f9d59: jne    0x00000000030f9d81  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 654)

  0x00000000030f9d5f: mov    0x58(%rsp),%r8
  0x00000000030f9d64: mov    %r8,%r10
  0x00000000030f9d67: mov    %r10d,0x14(%rax)
  0x00000000030f9d6b: mov    %rax,%r8
  0x00000000030f9d6e: shr    $0x9,%r8
  0x00000000030f9d72: movabs $0x11f87000,%rsi
  0x00000000030f9d7c: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 655)

  0x00000000030f9d81: mov    %rdi,0x90(%rsp)
  0x00000000030f9d89: mov    %rdx,%r8
  0x00000000030f9d8c: movabs $0x174e11e0,%rsi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9d96: mov    0x8(%r8),%r8d
  0x00000000030f9d9a: shl    $0x3,%r8
  0x00000000030f9d9e: cmp    0x5a0(%rsi),%r8
  0x00000000030f9da5: jne    0x00000000030f9db4
  0x00000000030f9da7: addq   $0x1,0x5a8(%rsi)
  0x00000000030f9daf: jmpq   0x00000000030f9e1a
  0x00000000030f9db4: cmp    0x5b0(%rsi),%r8
  0x00000000030f9dbb: jne    0x00000000030f9dca
  0x00000000030f9dbd: addq   $0x1,0x5b8(%rsi)
  0x00000000030f9dc5: jmpq   0x00000000030f9e1a
  0x00000000030f9dca: cmpq   $0x0,0x5a0(%rsi)
  0x00000000030f9dd5: jne    0x00000000030f9dee
  0x00000000030f9dd7: mov    %r8,0x5a0(%rsi)
  0x00000000030f9dde: movq   $0x1,0x5a8(%rsi)
  0x00000000030f9de9: jmpq   0x00000000030f9e1a
  0x00000000030f9dee: cmpq   $0x0,0x5b0(%rsi)
  0x00000000030f9df9: jne    0x00000000030f9e12
  0x00000000030f9dfb: mov    %r8,0x5b0(%rsi)
  0x00000000030f9e02: movq   $0x1,0x5b8(%rsi)
  0x00000000030f9e0d: jmpq   0x00000000030f9e1a
  0x00000000030f9e12: addq   $0x1,0x598(%rsi)
  0x00000000030f9e1a: mov    %rax,%r8           ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 656)

  0x00000000030f9e1d: movabs $0xffffffffffffffff,%rax
  0x00000000030f9e27: callq  0x00000000030163e0  ; OopMap{[144]=Oop off=3884}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 656)
                                                ;   {virtual_call}
  0x00000000030f9e2c: mov    0x90(%rsp),%rax
  0x00000000030f9e34: add    $0xa0,%rsp
  0x00000000030f9e3b: pop    %rbp
  0x00000000030f9e3c: test   %eax,-0x2909d42(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f9e42: retq                      ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 657)

  0x00000000030f9e43: mov    %rdx,%rsi
  0x00000000030f9e46: movabs $0x174e11e0,%rdi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9e50: mov    0x8(%rsi),%esi
  0x00000000030f9e53: shl    $0x3,%rsi
  0x00000000030f9e57: cmp    0x5f0(%rdi),%rsi
  0x00000000030f9e5e: jne    0x00000000030f9e6d
  0x00000000030f9e60: addq   $0x1,0x5f8(%rdi)
  0x00000000030f9e68: jmpq   0x00000000030f9ed3
  0x00000000030f9e6d: cmp    0x600(%rdi),%rsi
  0x00000000030f9e74: jne    0x00000000030f9e83
  0x00000000030f9e76: addq   $0x1,0x608(%rdi)
  0x00000000030f9e7e: jmpq   0x00000000030f9ed3
  0x00000000030f9e83: cmpq   $0x0,0x5f0(%rdi)
  0x00000000030f9e8e: jne    0x00000000030f9ea7
  0x00000000030f9e90: mov    %rsi,0x5f0(%rdi)
  0x00000000030f9e97: movq   $0x1,0x5f8(%rdi)
  0x00000000030f9ea2: jmpq   0x00000000030f9ed3
  0x00000000030f9ea7: cmpq   $0x0,0x600(%rdi)
  0x00000000030f9eb2: jne    0x00000000030f9ecb
  0x00000000030f9eb4: mov    %rsi,0x600(%rdi)
  0x00000000030f9ebb: movq   $0x1,0x608(%rdi)
  0x00000000030f9ec6: jmpq   0x00000000030f9ed3
  0x00000000030f9ecb: addq   $0x1,0x5e8(%rdi)
  0x00000000030f9ed3: mov    %rdx,%rsi
  0x00000000030f9ed6: mov    %rsi,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 662)

  0x00000000030f9ed9: nop
  0x00000000030f9eda: nop
  0x00000000030f9edb: nop
  0x00000000030f9edc: nop
  0x00000000030f9edd: nop
  0x00000000030f9ede: nop
  0x00000000030f9edf: callq  0x00000000030161a0  ; OopMap{[72]=Oop off=4068}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 662)
                                                ;   {optimized virtual_call}
  0x00000000030f9ee4: mov    0x60(%rsp),%ecx
  0x00000000030f9ee8: mov    0x48(%rsp),%rdx
  0x00000000030f9eed: mov    %rdx,%r8
  0x00000000030f9ef0: movabs $0x174e11e0,%rsi   ;   {metadata(method data for {method} {0x00000000172ac548} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000030f9efa: mov    0x8(%r8),%r8d
  0x00000000030f9efe: shl    $0x3,%r8
  0x00000000030f9f02: cmp    0x620(%rsi),%r8
  0x00000000030f9f09: jne    0x00000000030f9f18
  0x00000000030f9f0b: addq   $0x1,0x628(%rsi)
  0x00000000030f9f13: jmpq   0x00000000030f9f7e
  0x00000000030f9f18: cmp    0x630(%rsi),%r8
  0x00000000030f9f1f: jne    0x00000000030f9f2e
  0x00000000030f9f21: addq   $0x1,0x638(%rsi)
  0x00000000030f9f29: jmpq   0x00000000030f9f7e
  0x00000000030f9f2e: cmpq   $0x0,0x620(%rsi)
  0x00000000030f9f39: jne    0x00000000030f9f52
  0x00000000030f9f3b: mov    %r8,0x620(%rsi)
  0x00000000030f9f42: movq   $0x1,0x628(%rsi)
  0x00000000030f9f4d: jmpq   0x00000000030f9f7e
  0x00000000030f9f52: cmpq   $0x0,0x630(%rsi)
  0x00000000030f9f5d: jne    0x00000000030f9f76
  0x00000000030f9f5f: mov    %r8,0x630(%rsi)
  0x00000000030f9f66: movq   $0x1,0x638(%rsi)
  0x00000000030f9f71: jmpq   0x00000000030f9f7e
  0x00000000030f9f76: addq   $0x1,0x618(%rsi)
  0x00000000030f9f7e: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 663)

  0x00000000030f9f81: nop
  0x00000000030f9f82: nop
  0x00000000030f9f83: nop
  0x00000000030f9f84: nop
  0x00000000030f9f85: movabs $0xffffffffffffffff,%rax
  0x00000000030f9f8f: callq  0x00000000030163e0  ; OopMap{off=4244}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 663)
                                                ;   {virtual_call}
  0x00000000030f9f94: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030f9f9e: add    $0xa0,%rsp
  0x00000000030f9fa5: pop    %rbp
  0x00000000030f9fa6: test   %eax,-0x2909eac(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f9fac: retq   
  0x00000000030f9fad: mov    %rbx,0x8(%rsp)
  0x00000000030f9fb2: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f9fba: callq  0x00000000030d3220  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop off=4287}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 627)
                                                ;   {runtime_call}
  0x00000000030f9fbf: jmpq   0x00000000030f8f70
  0x00000000030f9fc4: callq  0x0000000003041280  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop off=4297}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ;   {runtime_call}
  0x00000000030f9fc9: callq  0x0000000003041280  ; OopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop off=4302}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ;   {runtime_call}
  0x00000000030f9fce: callq  0x0000000003041280  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4307}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00000000030f9fd3: callq  0x0000000003041280  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4312}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00000000030f9fd8: mov    %rax,(%rsp)
  0x00000000030f9fdc: callq  0x0000000003041940  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4321}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00000000030f9fe1: mov    %r8,(%rsp)
  0x00000000030f9fe5: callq  0x0000000003041940  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=4330}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00000000030f9fea: callq  0x0000000003041280  ; OopMap{[72]=Oop rax=Oop off=4335}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00000000030f9fef: mov    %rax,(%rsp)
  0x00000000030f9ff3: callq  0x00000000030d0b00  ; OopMap{[72]=Oop rax=Oop off=4344}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00000000030f9ff8: callq  0x0000000003041280  ; OopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop off=4349}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ;   {runtime_call}
  0x00000000030f9ffd: callq  0x0000000003041280  ; OopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop off=4354}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {runtime_call}
  0x00000000030fa002: mov    %rsi,(%rsp)
  0x00000000030fa006: callq  0x00000000030d0d40  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop off=4363}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 637)
                                                ;   {runtime_call}
  0x00000000030fa00b: callq  0x0000000003041280  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop off=4368}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {runtime_call}
  0x00000000030fa010: callq  0x0000000003041280  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop off=4373}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 640)
                                                ;   {runtime_call}
  0x00000000030fa015: callq  0x0000000003041280  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop off=4378}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ;   {runtime_call}
  0x00000000030fa01a: callq  0x0000000003041280  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop off=4383}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {runtime_call}
  0x00000000030fa01f: mov    %r8,0x8(%rsp)
  0x00000000030fa024: movq   $0xdb,(%rsp)
  0x00000000030fa02c: callq  0x00000000030d3220  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=4401}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)
                                                ;   {runtime_call}
  0x00000000030fa031: jmpq   0x00000000030f99ea
  0x00000000030fa036: callq  0x0000000003041280  ; OopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop off=4411}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 653)
                                                ;   {runtime_call}
  0x00000000030fa03b: nop
  0x00000000030fa03c: nop
  0x00000000030fa03d: mov    0x2a8(%r15),%rax
  0x00000000030fa044: movabs $0x0,%r10
  0x00000000030fa04e: mov    %r10,0x2a8(%r15)
  0x00000000030fa055: movabs $0x0,%r10
  0x00000000030fa05f: mov    %r10,0x2b0(%r15)
  0x00000000030fa066: add    $0xa0,%rsp
  0x00000000030fa06d: pop    %rbp
  0x00000000030fa06e: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030fa073: hlt    
  0x00000000030fa074: hlt    
  0x00000000030fa075: hlt    
  0x00000000030fa076: hlt    
  0x00000000030fa077: hlt    
  0x00000000030fa078: hlt    
  0x00000000030fa079: hlt    
  0x00000000030fa07a: hlt    
  0x00000000030fa07b: hlt    
  0x00000000030fa07c: hlt    
  0x00000000030fa07d: hlt    
  0x00000000030fa07e: hlt    
  0x00000000030fa07f: hlt    
[Stub Code]
  0x00000000030fa080: nop                       ;   {no_reloc}
  0x00000000030fa081: nop
  0x00000000030fa082: nop
  0x00000000030fa083: nop
  0x00000000030fa084: nop
  0x00000000030fa085: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa08f: jmpq   0x00000000030fa08f  ;   {runtime_call}
  0x00000000030fa094: nop
  0x00000000030fa095: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa09f: jmpq   0x00000000030fa09f  ;   {runtime_call}
  0x00000000030fa0a4: nop
  0x00000000030fa0a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa0af: jmpq   0x00000000030fa0af  ;   {runtime_call}
  0x00000000030fa0b4: nop
  0x00000000030fa0b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa0bf: jmpq   0x00000000030fa0bf  ;   {runtime_call}
  0x00000000030fa0c4: nop
  0x00000000030fa0c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa0cf: jmpq   0x00000000030fa0cf  ;   {runtime_call}
  0x00000000030fa0d4: nop
  0x00000000030fa0d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa0df: jmpq   0x00000000030fa0df  ;   {runtime_call}
  0x00000000030fa0e4: nop
  0x00000000030fa0e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa0ef: jmpq   0x00000000030fa0ef  ;   {runtime_call}
  0x00000000030fa0f4: nop
  0x00000000030fa0f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa0ff: jmpq   0x00000000030fa0ff  ;   {runtime_call}
  0x00000000030fa104: nop
  0x00000000030fa105: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa10f: jmpq   0x00000000030fa10f  ;   {runtime_call}
  0x00000000030fa114: nop
  0x00000000030fa115: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030fa11f: jmpq   0x00000000030fa11f  ;   {runtime_call}
[Exception Handler]
  0x00000000030fa124: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030fa129: mov    %rsp,-0x28(%rsp)
  0x00000000030fa12e: sub    $0x80,%rsp
  0x00000000030fa135: mov    %rax,0x78(%rsp)
  0x00000000030fa13a: mov    %rcx,0x70(%rsp)
  0x00000000030fa13f: mov    %rdx,0x68(%rsp)
  0x00000000030fa144: mov    %rbx,0x60(%rsp)
  0x00000000030fa149: mov    %rbp,0x50(%rsp)
  0x00000000030fa14e: mov    %rsi,0x48(%rsp)
  0x00000000030fa153: mov    %rdi,0x40(%rsp)
  0x00000000030fa158: mov    %r8,0x38(%rsp)
  0x00000000030fa15d: mov    %r9,0x30(%rsp)
  0x00000000030fa162: mov    %r10,0x28(%rsp)
  0x00000000030fa167: mov    %r11,0x20(%rsp)
  0x00000000030fa16c: mov    %r12,0x18(%rsp)
  0x00000000030fa171: mov    %r13,0x10(%rsp)
  0x00000000030fa176: mov    %r14,0x8(%rsp)
  0x00000000030fa17b: mov    %r15,(%rsp)
  0x00000000030fa17f: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030fa189: movabs $0x30fa129,%rdx    ;   {internal_word}
  0x00000000030fa193: mov    %rsp,%r8
  0x00000000030fa196: and    $0xfffffffffffffff0,%rsp
  0x00000000030fa19a: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030fa19f: hlt    
[Deopt Handler Code]
  0x00000000030fa1a0: movabs $0x30fa1a0,%r10    ;   {section_word}
  0x00000000030fa1aa: push   %r10
  0x00000000030fa1ac: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030fa1b1: hlt    
  0x00000000030fa1b2: hlt    
  0x00000000030fa1b3: hlt    
  0x00000000030fa1b4: hlt    
  0x00000000030fa1b5: hlt    
  0x00000000030fa1b6: hlt    
  0x00000000030fa1b7: hlt    
<nmethod compile_id='66' compiler='C1' level='3' entry='0x00000000030f8f00' size='8080' address='0x00000000030f8c90' relocation_offset='288' insts_offset='624' stub_offset='5104' scopes_data_offset='5424' scopes_pcs_offset='6432' dependencies_offset='7968' nul_chk_table_offset='7976' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='985' backedge_count='87' iicount='985' stamp='20.766'/>
<writer thread='22584'/>
Decoding compiled method 0x00000000030f1810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001721fab8} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x00000000030f1960: mov    0x8(%rdx),%r10d
  0x00000000030f1964: shl    $0x3,%r10
  0x00000000030f1968: cmp    %r10,%rax
  0x00000000030f196b: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030f1971: data16 xchg %ax,%ax
  0x00000000030f1974: nopl   0x0(%rax,%rax,1)
  0x00000000030f197c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030f1980: mov    %eax,-0x6000(%rsp)
  0x00000000030f1987: push   %rbp
  0x00000000030f1988: sub    $0x80,%rsp
  0x00000000030f198f: mov    %r8d,0x30(%rsp)
  0x00000000030f1994: mov    %rdx,%rbp
  0x00000000030f1997: mov    (%rdx),%rax
  0x00000000030f199a: mov    %rax,%r10
  0x00000000030f199d: and    $0x7,%r10
  0x00000000030f19a1: cmp    $0x5,%r10
  0x00000000030f19a5: jne    0x00000000030f1c3e
  0x00000000030f19ab: mov    $0x20001abc,%r11d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000030f19b1: movabs $0x0,%r10
  0x00000000030f19bb: lea    (%r10,%r11,8),%r10
  0x00000000030f19bf: mov    0xa8(%r10),%r10
  0x00000000030f19c6: mov    %r10,%r11
  0x00000000030f19c9: or     %r15,%r11
  0x00000000030f19cc: mov    %r11,%r8
  0x00000000030f19cf: xor    %rax,%r8
  0x00000000030f19d2: test   $0xffffffffffffff87,%r8
  0x00000000030f19d9: jne    0x00000000030f1ca1  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)

  0x00000000030f19df: mov    0x10(%rbp),%r8d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f19e3: mov    %r12d,0x14(%rbp)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 382)

  0x00000000030f19e7: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ; implicit exception: dispatches to 0x00000000030f1dbd
  0x00000000030f19eb: mov    0xc(%rbp),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f19ef: mov    %r10d,%ebx
  0x00000000030f19f2: sub    %r9d,%ebx
  0x00000000030f19f5: mov    %r8,%rcx           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f19f8: inc    %ebx
  0x00000000030f19fa: mov    %r10d,%r11d
  0x00000000030f19fd: inc    %r11d              ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1a00: test   %ebx,%ebx
  0x00000000030f1a02: jg     0x00000000030f1a4f  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1a04: mov    %r11d,0xc(%rbp)    ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1a08: test   %rcx,%rcx
  0x00000000030f1a0b: je     0x00000000030f1c11
  0x00000000030f1a11: mov    0xc(%rcx),%r11d
  0x00000000030f1a15: cmp    %r11d,%r10d
  0x00000000030f1a18: jae    0x00000000030f1c21
  0x00000000030f1a1e: mov    0x30(%rsp),%r8d
  0x00000000030f1a23: mov    %r8w,0x10(%rcx,%r10,2)
  0x00000000030f1a29: mov    $0x7,%r10d
  0x00000000030f1a2f: and    0x0(%rbp),%r10
  0x00000000030f1a33: cmp    $0x5,%r10
  0x00000000030f1a37: jne    0x00000000030f1ccc  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 384)

  0x00000000030f1a3d: mov    %rbp,%rax
  0x00000000030f1a40: add    $0x80,%rsp
  0x00000000030f1a47: pop    %rbp
  0x00000000030f1a48: test   %eax,-0x2901a4e(%rip)        # 0x00000000007f0000
                                                ;   {poll_return}
  0x00000000030f1a4e: retq   
  0x00000000030f1a4f: mov    %r9d,%ebx
  0x00000000030f1a52: shl    %ebx               ;*imul
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@6 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1a54: mov    %ebx,%edi
  0x00000000030f1a56: sub    %r10d,%edi
  0x00000000030f1a59: inc    %edi
  0x00000000030f1a5b: test   %edi,%edi
  0x00000000030f1a5d: jge    0x00000000030f1b65  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1a63: test   %r11d,%r11d
  0x00000000030f1a66: jge    0x00000000030f1a77  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1a68: test   %r11d,%r11d
  0x00000000030f1a6b: jl     0x00000000030f1db0  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@23 (line 133)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1a71: mov    $0x7fffffff,%r11d  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@37 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1a77: movslq %r11d,%r10
  0x00000000030f1a7a: shl    %r10
  0x00000000030f1a7d: add    $0x17,%r10
  0x00000000030f1a81: mov    %r10,%rdi
  0x00000000030f1a84: and    $0xfffffffffffffff8,%rdi
  0x00000000030f1a88: cmp    $0x80000,%r11d
  0x00000000030f1a8f: ja     0x00000000030f1bbe
  0x00000000030f1a95: mov    0x60(%r15),%rbx
  0x00000000030f1a99: mov    %rbx,%rdx
  0x00000000030f1a9c: add    %rdi,%rdx
  0x00000000030f1a9f: cmp    0x70(%r15),%rdx
  0x00000000030f1aa3: jae    0x00000000030f1bbe
  0x00000000030f1aa9: mov    %rdx,0x60(%r15)
  0x00000000030f1aad: prefetchw 0xc0(%rdx)
  0x00000000030f1ab4: movq   $0x1,(%rbx)
  0x00000000030f1abb: prefetchw 0x100(%rdx)
  0x00000000030f1ac2: movl   $0x20000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x00000000030f1ac9: mov    %r11d,0xc(%rbx)
  0x00000000030f1acd: prefetchw 0x140(%rdx)
  0x00000000030f1ad4: prefetchw 0x180(%rdx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1adb: cmp    %r11d,%r9d
  0x00000000030f1ade: mov    %r11d,%esi
  0x00000000030f1ae1: cmovl  %r9d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1ae5: mov    %rbx,%r13
  0x00000000030f1ae8: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1aec: mov    %r8,%rdx           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1aef: shr    $0x3,%r10
  0x00000000030f1af3: mov    %r10,%rcx
  0x00000000030f1af6: add    $0xfffffffffffffffe,%rcx
  0x00000000030f1afa: cmp    %esi,%r9d
  0x00000000030f1afd: jb     0x00000000030f1d74
  0x00000000030f1b03: cmp    %esi,%r11d
  0x00000000030f1b06: jb     0x00000000030f1d74
  0x00000000030f1b0c: test   %esi,%esi
  0x00000000030f1b0e: jle    0x00000000030f1d9e
  0x00000000030f1b14: lea    0x10(%r8),%r9
  0x00000000030f1b18: cmp    %r11d,%esi
  0x00000000030f1b1b: jl     0x00000000030f1b78
  0x00000000030f1b1d: add    $0xfffffffffffffff0,%rdi
  0x00000000030f1b21: shr    $0x3,%rdi
  0x00000000030f1b25: mov    %r9,%rcx
  0x00000000030f1b28: mov    %r13,%rdx
  0x00000000030f1b2b: mov    %rdi,%r8
  0x00000000030f1b2e: movabs $0x3022ac0,%r10
  0x00000000030f1b38: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1b3b: mov    0xc(%rbp),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1b3f: mov    %rbx,%r11
  0x00000000030f1b42: mov    %r11d,0x10(%rbp)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1b46: mov    %r10d,%r11d
  0x00000000030f1b49: inc    %r11d              ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1b4c: mov    %rbp,%r8
  0x00000000030f1b4f: shr    $0x9,%r8
  0x00000000030f1b53: mov    $0x11f87000,%r9d
  0x00000000030f1b59: mov    %r12b,(%r9,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@46 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1b5d: mov    %rbx,%rcx
  0x00000000030f1b60: jmpq   0x00000000030f1a04
  0x00000000030f1b65: add    $0x2,%ebx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@8 (line 129)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1b68: test   %ebx,%ebx
  0x00000000030f1b6a: jl     0x00000000030f1a68  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@19 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1b70: mov    %ebx,%r11d
  0x00000000030f1b73: jmpq   0x00000000030f1a77
  0x00000000030f1b78: movslq %esi,%r8
  0x00000000030f1b7b: mov    %r8,%r11
  0x00000000030f1b7e: shl    %r11
  0x00000000030f1b81: add    $0x10,%r11
  0x00000000030f1b85: mov    %r11,%rcx
  0x00000000030f1b88: and    $0xfffffffffffffff9,%rcx
  0x00000000030f1b8c: mov    %rbx,%rdi
  0x00000000030f1b8f: add    %rcx,%rdi
  0x00000000030f1b92: shr    $0x3,%r11
  0x00000000030f1b96: sub    %r11,%r10
  0x00000000030f1b99: mov    %r10,%rcx
  0x00000000030f1b9c: xor    %rax,%rax
  0x00000000030f1b9f: shl    $0x3,%rcx
  0x00000000030f1ba3: rep rex.W stos %al,%es:(%rdi)
  0x00000000030f1ba6: mov    %r9,%rcx
  0x00000000030f1ba9: mov    %r13,%rdx
  0x00000000030f1bac: movabs $0x30227c0,%r10
  0x00000000030f1bb6: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1bb9: jmpq   0x00000000030f1b3b
  0x00000000030f1bbe: mov    %r9d,0x60(%rsp)
  0x00000000030f1bc3: mov    %r8d,0x34(%rsp)
  0x00000000030f1bc8: mov    %rdi,0x38(%rsp)
  0x00000000030f1bcd: mov    %r10,0x28(%rsp)
  0x00000000030f1bd2: mov    %r11d,0x20(%rsp)   ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1bd7: movabs $0x100000208,%rdx  ;   {metadata({type array char})}
  0x00000000030f1be1: mov    %r11d,%r8d
  0x00000000030f1be4: mov    %rcx,0x58(%rsp)
  0x00000000030f1be9: xchg   %ax,%ax
  0x00000000030f1beb: callq  0x000000000303fc20  ; OopMap{rbp=Oop [52]=NarrowOop [88]=Oop off=656}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030f1bf0: mov    0x20(%rsp),%r11d
  0x00000000030f1bf5: mov    0x28(%rsp),%r10
  0x00000000030f1bfa: mov    0x38(%rsp),%rdi
  0x00000000030f1bff: mov    0x34(%rsp),%r8d
  0x00000000030f1c04: mov    0x60(%rsp),%r9d
  0x00000000030f1c09: mov    %rax,%rbx
  0x00000000030f1c0c: jmpq   0x00000000030f1adb
  0x00000000030f1c11: mov    $0xfffffff6,%edx
  0x00000000030f1c16: mov    %r10d,0x24(%rsp)
  0x00000000030f1c1b: callq  0x00000000030157a0  ; OopMap{rbp=Oop off=704}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030f1c20: int3   
  0x00000000030f1c21: mov    $0xffffffe4,%edx
  0x00000000030f1c26: mov    %rcx,0x38(%rsp)
  0x00000000030f1c2b: mov    %r10d,0x34(%rsp)
  0x00000000030f1c30: data16 xchg %ax,%ax
  0x00000000030f1c33: callq  0x00000000030157a0  ; OopMap{rbp=Oop [56]=Oop off=728}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030f1c38: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1c39: lock cmpxchg %r10,(%rdx)
  0x00000000030f1c3e: lea    0x70(%rsp),%rbx
  0x00000000030f1c43: mov    (%rdx),%rax
  0x00000000030f1c46: test   $0x2,%rax
  0x00000000030f1c4c: jne    0x00000000030f1c72
  0x00000000030f1c4e: or     $0x1,%rax
  0x00000000030f1c52: mov    %rax,(%rbx)
  0x00000000030f1c55: lock cmpxchg %rbx,(%rdx)
  0x00000000030f1c5a: je     0x00000000030f1c8b
  0x00000000030f1c60: sub    %rsp,%rax
  0x00000000030f1c63: and    $0xfffffffffffff007,%rax
  0x00000000030f1c6a: mov    %rax,(%rbx)
  0x00000000030f1c6d: jmpq   0x00000000030f1c8b
  0x00000000030f1c72: movq   $0x3,(%rbx)
  0x00000000030f1c79: mov    %rax,%rbx
  0x00000000030f1c7c: mov    0x16(%rbx),%rax
  0x00000000030f1c80: test   %rax,%rax
  0x00000000030f1c83: jne    0x00000000030f1c8b
  0x00000000030f1c85: lock cmpxchg %r15,0x16(%rbx)
  0x00000000030f1c8b: je     0x00000000030f19df
  0x00000000030f1c91: lea    0x70(%rsp),%r8
  0x00000000030f1c96: nop
  0x00000000030f1c97: callq  0x0000000003042c60  ; OopMap{rbp=Oop off=828}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)
                                                ;   {runtime_call}
  0x00000000030f1c9c: jmpq   0x00000000030f19df
  0x00000000030f1ca1: test   $0x7,%r8
  0x00000000030f1ca8: jne    0x00000000030f1c39
  0x00000000030f1caa: test   $0x300,%r8
  0x00000000030f1cb1: jne    0x00000000030f1cc0
  0x00000000030f1cb3: and    $0x37f,%rax
  0x00000000030f1cba: mov    %rax,%r11
  0x00000000030f1cbd: or     %r15,%r11
  0x00000000030f1cc0: lock cmpxchg %r11,(%rdx)
  0x00000000030f1cc5: jne    0x00000000030f1c91
  0x00000000030f1cc7: jmpq   0x00000000030f19df
  0x00000000030f1ccc: lea    0x70(%rsp),%rax
  0x00000000030f1cd1: cmpq   $0x0,(%rax)
  0x00000000030f1cd8: je     0x00000000030f1d54
  0x00000000030f1cde: mov    0x0(%rbp),%r10
  0x00000000030f1ce2: test   $0x2,%r10
  0x00000000030f1ce9: je     0x00000000030f1d4b
  0x00000000030f1ceb: mov    0x16(%r10),%rax
  0x00000000030f1cef: xor    %r15,%rax
  0x00000000030f1cf2: or     0x26(%r10),%rax
  0x00000000030f1cf6: jne    0x00000000030f1d54
  0x00000000030f1cf8: mov    0x36(%r10),%rax
  0x00000000030f1cfc: or     0x3e(%r10),%rax
  0x00000000030f1d00: jne    0x00000000030f1d0c
  0x00000000030f1d02: movq   $0x0,0x16(%r10)
  0x00000000030f1d0a: jmp    0x00000000030f1d54
  0x00000000030f1d0c: cmpq   $0x0,0x46(%r10)
  0x00000000030f1d14: je     0x00000000030f1d3f
  0x00000000030f1d16: movq   $0x0,0x16(%r10)
  0x00000000030f1d1e: lock addl $0x0,(%rsp)
  0x00000000030f1d23: cmpq   $0x0,0x46(%r10)
  0x00000000030f1d2b: jne    0x00000000030f1d44
  0x00000000030f1d2d: movabs $0x0,%rax
  0x00000000030f1d37: lock cmpxchg %r15,0x16(%r10)
  0x00000000030f1d3d: jne    0x00000000030f1d44
  0x00000000030f1d3f: or     $0x1,%eax
  0x00000000030f1d42: jmp    0x00000000030f1d54
  0x00000000030f1d44: test   $0x0,%eax
  0x00000000030f1d49: jmp    0x00000000030f1d54
  0x00000000030f1d4b: mov    (%rax),%r10
  0x00000000030f1d4e: lock cmpxchg %r10,0x0(%rbp)
  0x00000000030f1d54: je     0x00000000030f1a3d
  0x00000000030f1d5a: mov    %rbp,%rcx
  0x00000000030f1d5d: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)

  0x00000000030f1d62: movabs $0x5ab38cc0,%r10
  0x00000000030f1d6c: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 384)

  0x00000000030f1d6f: jmpq   0x00000000030f1a3d
  0x00000000030f1d74: mov    %r13,%rdi
  0x00000000030f1d77: xor    %rax,%rax
  0x00000000030f1d7a: shl    $0x3,%rcx
  0x00000000030f1d7e: rep rex.W stos %al,%es:(%rdi)
  0x00000000030f1d81: xor    %r8d,%r8d
  0x00000000030f1d84: mov    %rbx,%r9
  0x00000000030f1d87: xor    %edi,%edi
  0x00000000030f1d89: mov    %rbx,0x48(%rsp)
  0x00000000030f1d8e: nop
  0x00000000030f1d8f: callq  0x0000000003042e60  ; OopMap{rbp=Oop [72]=Oop off=1076}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030f1d94: mov    0x48(%rsp),%rbx
  0x00000000030f1d99: jmpq   0x00000000030f1b3b
  0x00000000030f1d9e: mov    %r13,%rdi
  0x00000000030f1da1: xor    %rax,%rax
  0x00000000030f1da4: shl    $0x3,%rcx
  0x00000000030f1da8: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1dab: jmpq   0x00000000030f1b3b  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@13 (line 130)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1db0: mov    $0x8d,%edx
  0x00000000030f1db5: xchg   %ax,%ax
  0x00000000030f1db7: callq  0x00000000030157a0  ; OopMap{rbp=Oop off=1116}
                                                ;*new  ; - java.lang.AbstractStringBuilder::expandCapacity@26 (line 134)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030f1dbc: int3   
  0x00000000030f1dbd: mov    $0xfffffff6,%edx
  0x00000000030f1dc2: nop
  0x00000000030f1dc3: callq  0x00000000030157a0  ; OopMap{rbp=Oop off=1128}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)
                                                ;   {runtime_call}
  0x00000000030f1dc8: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1dc9: mov    %rax,%rbx
  0x00000000030f1dcc: jmp    0x00000000030f1dd1  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1dce: mov    %rax,%rbx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@43 (line 137)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1dd1: mov    $0x7,%r10d
  0x00000000030f1dd7: and    0x0(%rbp),%r10
  0x00000000030f1ddb: cmp    $0x5,%r10
  0x00000000030f1ddf: jne    0x00000000030f1df1
  0x00000000030f1de1: mov    %rbx,%rdx
  0x00000000030f1de4: add    $0x80,%rsp
  0x00000000030f1deb: pop    %rbp
  0x00000000030f1dec: jmpq   0x0000000003042d60  ;   {runtime_call}
  0x00000000030f1df1: lea    0x70(%rsp),%rax
  0x00000000030f1df6: cmpq   $0x0,(%rax)
  0x00000000030f1dfd: je     0x00000000030f1e79
  0x00000000030f1e03: mov    0x0(%rbp),%r10
  0x00000000030f1e07: test   $0x2,%r10
  0x00000000030f1e0e: je     0x00000000030f1e70
  0x00000000030f1e10: mov    0x16(%r10),%rax
  0x00000000030f1e14: xor    %r15,%rax
  0x00000000030f1e17: or     0x26(%r10),%rax
  0x00000000030f1e1b: jne    0x00000000030f1e79
  0x00000000030f1e1d: mov    0x36(%r10),%rax
  0x00000000030f1e21: or     0x3e(%r10),%rax
  0x00000000030f1e25: jne    0x00000000030f1e31
  0x00000000030f1e27: movq   $0x0,0x16(%r10)
  0x00000000030f1e2f: jmp    0x00000000030f1e79
  0x00000000030f1e31: cmpq   $0x0,0x46(%r10)
  0x00000000030f1e39: je     0x00000000030f1e64
  0x00000000030f1e3b: movq   $0x0,0x16(%r10)
  0x00000000030f1e43: lock addl $0x0,(%rsp)
  0x00000000030f1e48: cmpq   $0x0,0x46(%r10)
  0x00000000030f1e50: jne    0x00000000030f1e69
  0x00000000030f1e52: movabs $0x0,%rax
  0x00000000030f1e5c: lock cmpxchg %r15,0x16(%r10)
  0x00000000030f1e62: jne    0x00000000030f1e69
  0x00000000030f1e64: or     $0x1,%eax
  0x00000000030f1e67: jmp    0x00000000030f1e79
  0x00000000030f1e69: test   $0x0,%eax
  0x00000000030f1e6e: jmp    0x00000000030f1e79
  0x00000000030f1e70: mov    (%rax),%r10
  0x00000000030f1e73: lock cmpxchg %r10,0x0(%rbp)
  0x00000000030f1e79: je     0x00000000030f1de1
  0x00000000030f1e7f: mov    %rbp,%rcx
  0x00000000030f1e82: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 382)

  0x00000000030f1e87: movabs $0x5ab38cc0,%r10
  0x00000000030f1e91: callq  *%r10
  0x00000000030f1e94: jmpq   0x00000000030f1de1  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::expandCapacity@18 (line 132)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                ; - java.lang.StringBuffer::append@7 (line 383)

  0x00000000030f1e99: hlt    
  0x00000000030f1e9a: hlt    
  0x00000000030f1e9b: hlt    
  0x00000000030f1e9c: hlt    
  0x00000000030f1e9d: hlt    
  0x00000000030f1e9e: hlt    
  0x00000000030f1e9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000030f1ea0: jmpq   0x000000000303fee0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000030f1ea5: callq  0x00000000030f1eaa
  0x00000000030f1eaa: subq   $0x5,(%rsp)
  0x00000000030f1eaf: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030f1eb4: hlt    
  0x00000000030f1eb5: hlt    
  0x00000000030f1eb6: hlt    
  0x00000000030f1eb7: hlt    
<nmethod compile_id='68' compiler='C2' level='4' entry='0x00000000030f1960' size='2920' address='0x00000000030f1810' relocation_offset='288' insts_offset='336' stub_offset='1680' scopes_data_offset='1760' scopes_pcs_offset='2096' dependencies_offset='2848' handler_table_offset='2856' nul_chk_table_offset='2904' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='9544' iicount='9544' stamp='21.419'/>
<make_not_entrant thread='22584' compile_id='16' compiler='C1' level='3' stamp='21.419'/>
<writer thread='9344'/>
Decoding compiled method 0x00000000030f0e50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000017223fb0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x80]  (sp of caller)
  0x00000000030f0fe0: mov    0x8(%rdx),%r10d
  0x00000000030f0fe4: shl    $0x3,%r10
  0x00000000030f0fe8: cmp    %rax,%r10
  0x00000000030f0feb: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030f0ff1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030f0ffc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030f1000: mov    %eax,-0x6000(%rsp)
  0x00000000030f1007: push   %rbp
  0x00000000030f1008: sub    $0x70,%rsp
  0x00000000030f100c: mov    %rdx,0x48(%rsp)
  0x00000000030f1011: movabs $0x173f6758,%rsi   ;   {metadata(method data for {method} {0x0000000017223fb0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f101b: mov    0xdc(%rsi),%edi
  0x00000000030f1021: add    $0x8,%edi
  0x00000000030f1024: mov    %edi,0xdc(%rsi)
  0x00000000030f102a: movabs $0x17223fa8,%rsi   ;   {metadata({method} {0x0000000017223fb0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f1034: and    $0x1ff8,%edi
  0x00000000030f103a: cmp    $0x0,%edi
  0x00000000030f103d: je     0x00000000030f1388  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 418)

  0x00000000030f1043: cmp    $0x0,%r8
  0x00000000030f1047: movabs $0x173f6758,%rsi   ;   {metadata(method data for {method} {0x0000000017223fb0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f1051: movabs $0x108,%rdi
  0x00000000030f105b: jne    0x00000000030f106b
  0x00000000030f1061: movabs $0x118,%rdi
  0x00000000030f106b: mov    (%rsi,%rdi,1),%rbx
  0x00000000030f106f: lea    0x1(%rbx),%rbx
  0x00000000030f1073: mov    %rbx,(%rsi,%rdi,1)
  0x00000000030f1077: je     0x00000000030f1362  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 418)

  0x00000000030f107d: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ; implicit exception: dispatches to 0x00000000030f139f
  0x00000000030f1080: mov    %r8,%rsi
  0x00000000030f1083: movabs $0x173f6758,%rdi   ;   {metadata(method data for {method} {0x0000000017223fb0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f108d: mov    0x8(%rsi),%esi
  0x00000000030f1090: shl    $0x3,%rsi
  0x00000000030f1094: cmp    0x140(%rdi),%rsi
  0x00000000030f109b: jne    0x00000000030f10aa
  0x00000000030f109d: addq   $0x1,0x148(%rdi)
  0x00000000030f10a5: jmpq   0x00000000030f1110
  0x00000000030f10aa: cmp    0x150(%rdi),%rsi
  0x00000000030f10b1: jne    0x00000000030f10c0
  0x00000000030f10b3: addq   $0x1,0x158(%rdi)
  0x00000000030f10bb: jmpq   0x00000000030f1110
  0x00000000030f10c0: cmpq   $0x0,0x140(%rdi)
  0x00000000030f10cb: jne    0x00000000030f10e4
  0x00000000030f10cd: mov    %rsi,0x140(%rdi)
  0x00000000030f10d4: movq   $0x1,0x148(%rdi)
  0x00000000030f10df: jmpq   0x00000000030f1110
  0x00000000030f10e4: cmpq   $0x0,0x150(%rdi)
  0x00000000030f10ef: jne    0x00000000030f1108
  0x00000000030f10f1: mov    %rsi,0x150(%rdi)
  0x00000000030f10f8: movq   $0x1,0x158(%rdi)
  0x00000000030f1103: jmpq   0x00000000030f1110
  0x00000000030f1108: addq   $0x1,0x138(%rdi)
  0x00000000030f1110: movabs $0x172dd740,%rsi   ;   {metadata(method data for {method} {0x00000000171b3bf0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030f111a: mov    0xdc(%rsi),%edi
  0x00000000030f1120: add    $0x8,%edi
  0x00000000030f1123: mov    %edi,0xdc(%rsi)
  0x00000000030f1129: movabs $0x171b3be8,%rsi   ;   {metadata({method} {0x00000000171b3bf0} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000030f1133: and    $0x7ffff8,%edi
  0x00000000030f1139: cmp    $0x0,%edi
  0x00000000030f113c: je     0x00000000030f13a4
  0x00000000030f1142: mov    0xc(%r8),%esi      ;*getfield value
                                                ; - java.lang.String::length@1 (line 611)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)

  0x00000000030f1146: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ; implicit exception: dispatches to 0x00000000030f13bb
  0x00000000030f1149: mov    %esi,0x58(%rsp)
  0x00000000030f114d: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 421)

  0x00000000030f1150: add    %esi,%edi
  0x00000000030f1152: mov    %rdx,%rbx
  0x00000000030f1155: movabs $0x173f6758,%rax   ;   {metadata(method data for {method} {0x0000000017223fb0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f115f: addq   $0x1,0x168(%rax)
  0x00000000030f1167: movabs $0x173aafd0,%rbx   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f1171: mov    0xdc(%rbx),%eax
  0x00000000030f1177: add    $0x8,%eax
  0x00000000030f117a: mov    %eax,0xdc(%rbx)
  0x00000000030f1180: movabs $0x172236f8,%rbx   ;   {metadata({method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f118a: and    $0x7ffff8,%eax
  0x00000000030f1190: cmp    $0x0,%eax
  0x00000000030f1193: je     0x00000000030f13c0
  0x00000000030f1199: mov    0x10(%rdx),%ebx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x00000000030f119c: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ; implicit exception: dispatches to 0x00000000030f13d7
  0x00000000030f119f: mov    %rdi,%rax
  0x00000000030f11a2: sub    %ebx,%eax
  0x00000000030f11a4: cmp    $0x0,%eax
  0x00000000030f11a7: movabs $0x173aafd0,%rbx   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f11b1: movabs $0x108,%rax
  0x00000000030f11bb: jle    0x00000000030f11cb
  0x00000000030f11c1: movabs $0x118,%rax
  0x00000000030f11cb: mov    (%rbx,%rax,1),%rcx
  0x00000000030f11cf: lea    0x1(%rcx),%rcx
  0x00000000030f11d3: mov    %rcx,(%rbx,%rax,1)
  0x00000000030f11d7: mov    %r8,0x50(%rsp)
  0x00000000030f11dc: jle    0x00000000030f1284  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x00000000030f11e2: mov    %rdx,%rbx
  0x00000000030f11e5: movabs $0x173aafd0,%rax   ;   {metadata(method data for {method} {0x0000000017223700} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f11ef: mov    0x8(%rbx),%ebx
  0x00000000030f11f2: shl    $0x3,%rbx
  0x00000000030f11f6: cmp    0x130(%rax),%rbx
  0x00000000030f11fd: jne    0x00000000030f120c
  0x00000000030f11ff: addq   $0x1,0x138(%rax)
  0x00000000030f1207: jmpq   0x00000000030f1272
  0x00000000030f120c: cmp    0x140(%rax),%rbx
  0x00000000030f1213: jne    0x00000000030f1222
  0x00000000030f1215: addq   $0x1,0x148(%rax)
  0x00000000030f121d: jmpq   0x00000000030f1272
  0x00000000030f1222: cmpq   $0x0,0x130(%rax)
  0x00000000030f122d: jne    0x00000000030f1246
  0x00000000030f122f: mov    %rbx,0x130(%rax)
  0x00000000030f1236: movq   $0x1,0x138(%rax)
  0x00000000030f1241: jmpq   0x00000000030f1272
  0x00000000030f1246: cmpq   $0x0,0x140(%rax)
  0x00000000030f1251: jne    0x00000000030f126a
  0x00000000030f1253: mov    %rbx,0x140(%rax)
  0x00000000030f125a: movq   $0x1,0x148(%rax)
  0x00000000030f1265: jmpq   0x00000000030f1272
  0x00000000030f126a: addq   $0x1,0x128(%rax)
  0x00000000030f1272: mov    %rdi,%r8
  0x00000000030f1275: mov    %rdx,%rdi
  0x00000000030f1278: mov    %rdi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)

  0x00000000030f127b: nop
  0x00000000030f127c: nop
  0x00000000030f127d: nop
  0x00000000030f127e: nop
  0x00000000030f127f: callq  0x00000000030161a0  ; OopMap{[72]=Oop [80]=Oop off=676}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {optimized virtual_call}
  0x00000000030f1284: mov    0x58(%rsp),%esi
  0x00000000030f1288: mov    0x50(%rsp),%rbx
  0x00000000030f128d: mov    0x48(%rsp),%rdx
  0x00000000030f1292: mov    0x10(%rdx),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 422)

  0x00000000030f1295: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 422)

  0x00000000030f1298: mov    %rbx,%r8
  0x00000000030f129b: movabs $0x173f6758,%r9    ;   {metadata(method data for {method} {0x0000000017223fb0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f12a5: mov    0x8(%r8),%r8d
  0x00000000030f12a9: shl    $0x3,%r8
  0x00000000030f12ad: cmp    0x180(%r9),%r8
  0x00000000030f12b4: jne    0x00000000030f12c3
  0x00000000030f12b6: addq   $0x1,0x188(%r9)
  0x00000000030f12be: jmpq   0x00000000030f1329
  0x00000000030f12c3: cmp    0x190(%r9),%r8
  0x00000000030f12ca: jne    0x00000000030f12d9
  0x00000000030f12cc: addq   $0x1,0x198(%r9)
  0x00000000030f12d4: jmpq   0x00000000030f1329
  0x00000000030f12d9: cmpq   $0x0,0x180(%r9)
  0x00000000030f12e4: jne    0x00000000030f12fd
  0x00000000030f12e6: mov    %r8,0x180(%r9)
  0x00000000030f12ed: movq   $0x1,0x188(%r9)
  0x00000000030f12f8: jmpq   0x00000000030f1329
  0x00000000030f12fd: cmpq   $0x0,0x190(%r9)
  0x00000000030f1308: jne    0x00000000030f1321
  0x00000000030f130a: mov    %r8,0x190(%r9)
  0x00000000030f1311: movq   $0x1,0x198(%r9)
  0x00000000030f131c: jmpq   0x00000000030f1329
  0x00000000030f1321: addq   $0x1,0x178(%r9)
  0x00000000030f1329: mov    $0x0,%r8d
  0x00000000030f132f: mov    %rsi,%r9
  0x00000000030f1332: mov    %rax,%rsi
  0x00000000030f1335: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 422)

  0x00000000030f1338: nop
  0x00000000030f1339: nop
  0x00000000030f133a: nop
  0x00000000030f133b: nop
  0x00000000030f133c: nop
  0x00000000030f133d: nop
  0x00000000030f133e: nop
  0x00000000030f133f: callq  0x00000000030161a0  ; OopMap{[72]=Oop off=868}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 422)
                                                ;   {optimized virtual_call}
  0x00000000030f1344: mov    0x48(%rsp),%rdx
  0x00000000030f1349: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 423)

  0x00000000030f134c: add    0x58(%rsp),%eax
  0x00000000030f1350: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 423)

  0x00000000030f1353: mov    %rdx,%rax
  0x00000000030f1356: add    $0x70,%rsp
  0x00000000030f135a: pop    %rbp
  0x00000000030f135b: test   %eax,-0x2901261(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f1361: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 424)

  0x00000000030f1362: mov    %rdx,%rsi
  0x00000000030f1365: movabs $0x173f6758,%rdi   ;   {metadata(method data for {method} {0x0000000017223fb0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000030f136f: addq   $0x1,0x128(%rdi)
  0x00000000030f1377: callq  0x00000000030161a0  ; OopMap{off=924}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 419)
                                                ;   {optimized virtual_call}
  0x00000000030f137c: add    $0x70,%rsp
  0x00000000030f1380: pop    %rbp
  0x00000000030f1381: test   %eax,-0x2901287(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f1387: retq   
  0x00000000030f1388: mov    %rsi,0x8(%rsp)
  0x00000000030f138d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f1395: callq  0x00000000030d3220  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=954}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 418)
                                                ;   {runtime_call}
  0x00000000030f139a: jmpq   0x00000000030f1043
  0x00000000030f139f: callq  0x0000000003041280  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=964}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x00000000030f13a4: mov    %rsi,0x8(%rsp)
  0x00000000030f13a9: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f13b1: callq  0x00000000030d3220  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=982}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 611)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x00000000030f13b6: jmpq   0x00000000030f1142
  0x00000000030f13bb: callq  0x0000000003041280  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=992}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 611)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 420)
                                                ;   {runtime_call}
  0x00000000030f13c0: mov    %rbx,0x8(%rsp)
  0x00000000030f13c5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f13cd: callq  0x00000000030d3220  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1010}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {runtime_call}
  0x00000000030f13d2: jmpq   0x00000000030f1199
  0x00000000030f13d7: callq  0x0000000003041280  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1020}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 421)
                                                ;   {runtime_call}
  0x00000000030f13dc: nop
  0x00000000030f13dd: nop
  0x00000000030f13de: mov    0x2a8(%r15),%rax
  0x00000000030f13e5: movabs $0x0,%r10
  0x00000000030f13ef: mov    %r10,0x2a8(%r15)
  0x00000000030f13f6: movabs $0x0,%r10
  0x00000000030f1400: mov    %r10,0x2b0(%r15)
  0x00000000030f1407: add    $0x70,%rsp
  0x00000000030f140b: pop    %rbp
  0x00000000030f140c: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030f1411: hlt    
  0x00000000030f1412: hlt    
  0x00000000030f1413: hlt    
  0x00000000030f1414: hlt    
  0x00000000030f1415: hlt    
  0x00000000030f1416: hlt    
  0x00000000030f1417: hlt    
  0x00000000030f1418: hlt    
  0x00000000030f1419: hlt    
  0x00000000030f141a: hlt    
  0x00000000030f141b: hlt    
  0x00000000030f141c: hlt    
  0x00000000030f141d: hlt    
  0x00000000030f141e: hlt    
  0x00000000030f141f: hlt    
[Stub Code]
  0x00000000030f1420: nop                       ;   {no_reloc}
  0x00000000030f1421: nop
  0x00000000030f1422: nop
  0x00000000030f1423: nop
  0x00000000030f1424: nop
  0x00000000030f1425: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f142f: jmpq   0x00000000030f142f  ;   {runtime_call}
  0x00000000030f1434: nop
  0x00000000030f1435: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f143f: jmpq   0x00000000030f143f  ;   {runtime_call}
  0x00000000030f1444: nop
  0x00000000030f1445: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f144f: jmpq   0x00000000030f144f  ;   {runtime_call}
[Exception Handler]
  0x00000000030f1454: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030f1459: mov    %rsp,-0x28(%rsp)
  0x00000000030f145e: sub    $0x80,%rsp
  0x00000000030f1465: mov    %rax,0x78(%rsp)
  0x00000000030f146a: mov    %rcx,0x70(%rsp)
  0x00000000030f146f: mov    %rdx,0x68(%rsp)
  0x00000000030f1474: mov    %rbx,0x60(%rsp)
  0x00000000030f1479: mov    %rbp,0x50(%rsp)
  0x00000000030f147e: mov    %rsi,0x48(%rsp)
  0x00000000030f1483: mov    %rdi,0x40(%rsp)
  0x00000000030f1488: mov    %r8,0x38(%rsp)
  0x00000000030f148d: mov    %r9,0x30(%rsp)
  0x00000000030f1492: mov    %r10,0x28(%rsp)
  0x00000000030f1497: mov    %r11,0x20(%rsp)
  0x00000000030f149c: mov    %r12,0x18(%rsp)
  0x00000000030f14a1: mov    %r13,0x10(%rsp)
  0x00000000030f14a6: mov    %r14,0x8(%rsp)
  0x00000000030f14ab: mov    %r15,(%rsp)
  0x00000000030f14af: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030f14b9: movabs $0x30f1459,%rdx    ;   {internal_word}
  0x00000000030f14c3: mov    %rsp,%r8
  0x00000000030f14c6: and    $0xfffffffffffffff0,%rsp
  0x00000000030f14ca: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030f14cf: hlt    
[Deopt Handler Code]
  0x00000000030f14d0: movabs $0x30f14d0,%r10    ;   {section_word}
  0x00000000030f14da: push   %r10
  0x00000000030f14dc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030f14e1: hlt    
  0x00000000030f14e2: hlt    
  0x00000000030f14e3: hlt    
  0x00000000030f14e4: hlt    
  0x00000000030f14e5: hlt    
  0x00000000030f14e6: hlt    
  0x00000000030f14e7: hlt    
<nmethod compile_id='61' compiler='C1' level='3' entry='0x00000000030f0fe0' size='2440' address='0x00000000030f0e50' relocation_offset='288' insts_offset='400' stub_offset='1488' scopes_data_offset='1720' scopes_pcs_offset='1968' dependencies_offset='2400' nul_chk_table_offset='2408' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1078' iicount='1078' stamp='21.833'/>
Decoding compiled method 0x00000000030f34d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rdx:rdx   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    r8:r8     = &apos;[I&apos;
  # parm1:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x00000000030f36a0: mov    0x8(%rdx),%r10d
  0x00000000030f36a4: shl    $0x3,%r10
  0x00000000030f36a8: cmp    %rax,%r10
  0x00000000030f36ab: jne    0x0000000003015f60  ;   {runtime_call}
  0x00000000030f36b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000030f36bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000030f36c0: mov    %eax,-0x6000(%rsp)
  0x00000000030f36c7: push   %rbp
  0x00000000030f36c8: sub    $0xa0,%rsp
  0x00000000030f36cf: lea    0x88(%rsp),%rsi
  0x00000000030f36d7: mov    %rdx,0x8(%rsi)
  0x00000000030f36db: mov    (%rdx),%rax
  0x00000000030f36de: mov    %rax,%rdi
  0x00000000030f36e1: and    $0x7,%rdi
  0x00000000030f36e5: cmp    $0x5,%rdi
  0x00000000030f36e9: jne    0x00000000030f3770
  0x00000000030f36ef: mov    0x8(%rdx),%edi
  0x00000000030f36f2: shl    $0x3,%rdi
  0x00000000030f36f6: mov    0xa8(%rdi),%rdi
  0x00000000030f36fd: or     %r15,%rdi
  0x00000000030f3700: xor    %rax,%rdi
  0x00000000030f3703: and    $0xffffffffffffff87,%rdi
  0x00000000030f3707: je     0x00000000030f3798
  0x00000000030f370d: test   $0x7,%rdi
  0x00000000030f3714: jne    0x00000000030f375d
  0x00000000030f3716: test   $0x300,%rdi
  0x00000000030f371d: jne    0x00000000030f373c
  0x00000000030f371f: and    $0x37f,%rax
  0x00000000030f3726: mov    %rax,%rdi
  0x00000000030f3729: or     %r15,%rdi
  0x00000000030f372c: lock cmpxchg %rdi,(%rdx)
  0x00000000030f3731: jne    0x00000000030f3c9e
  0x00000000030f3737: jmpq   0x00000000030f3798
  0x00000000030f373c: mov    0x8(%rdx),%edi
  0x00000000030f373f: shl    $0x3,%rdi
  0x00000000030f3743: mov    0xa8(%rdi),%rdi
  0x00000000030f374a: or     %r15,%rdi
  0x00000000030f374d: lock cmpxchg %rdi,(%rdx)
  0x00000000030f3752: jne    0x00000000030f3c9e
  0x00000000030f3758: jmpq   0x00000000030f3798
  0x00000000030f375d: mov    0x8(%rdx),%edi
  0x00000000030f3760: shl    $0x3,%rdi
  0x00000000030f3764: mov    0xa8(%rdi),%rdi
  0x00000000030f376b: lock cmpxchg %rdi,(%rdx)
  0x00000000030f3770: mov    (%rdx),%rax
  0x00000000030f3773: or     $0x1,%rax
  0x00000000030f3777: mov    %rax,(%rsi)
  0x00000000030f377a: lock cmpxchg %rsi,(%rdx)
  0x00000000030f377f: je     0x00000000030f3798
  0x00000000030f3785: sub    %rsp,%rax
  0x00000000030f3788: and    $0xfffffffffffff007,%rax
  0x00000000030f378f: mov    %rax,(%rsi)
  0x00000000030f3792: jne    0x00000000030f3c9e
  0x00000000030f3798: movabs $0x174e3758,%rax   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f37a2: mov    0xdc(%rax),%esi
  0x00000000030f37a8: add    $0x8,%esi
  0x00000000030f37ab: mov    %esi,0xdc(%rax)
  0x00000000030f37b1: movabs $0x17394788,%rax   ;   {metadata({method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f37bb: and    $0x1ff8,%esi
  0x00000000030f37c1: cmp    $0x0,%esi
  0x00000000030f37c4: je     0x00000000030f3cb1  ;*aload_0
                                                ; - sun.misc.URLClassPath::getNextLoader@0 (line 442)

  0x00000000030f37ca: movsbl 0xc(%rdx),%eax     ;*getfield closed
                                                ; - sun.misc.URLClassPath::getNextLoader@1 (line 442)

  0x00000000030f37ce: cmp    $0x0,%eax
  0x00000000030f37d1: movabs $0x174e3758,%rax   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f37db: movabs $0x108,%rsi
  0x00000000030f37e5: je     0x00000000030f37f5
  0x00000000030f37eb: movabs $0x118,%rsi
  0x00000000030f37f5: mov    (%rax,%rsi,1),%rdi
  0x00000000030f37f9: lea    0x1(%rdi),%rdi
  0x00000000030f37fd: mov    %rdi,(%rax,%rsi,1)
  0x00000000030f3801: jne    0x00000000030f3bcd  ;*ifeq
                                                ; - sun.misc.URLClassPath::getNextLoader@4 (line 442)

  0x00000000030f3807: cmp    $0x0,%r8
  0x00000000030f380b: movabs $0x174e3758,%rax   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f3815: movabs $0x128,%rsi
  0x00000000030f381f: je     0x00000000030f382f
  0x00000000030f3825: movabs $0x138,%rsi
  0x00000000030f382f: mov    (%rax,%rsi,1),%rdi
  0x00000000030f3833: lea    0x1(%rdi),%rdi
  0x00000000030f3837: mov    %rdi,(%rax,%rsi,1)
  0x00000000030f383b: je     0x00000000030f3b61  ;*ifnull
                                                ; - sun.misc.URLClassPath::getNextLoader@10 (line 445)

  0x00000000030f3841: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - sun.misc.URLClassPath::getNextLoader@15 (line 446)
                                                ; implicit exception: dispatches to 0x00000000030f3cc8
  0x00000000030f3845: cmp    %eax,%r9d
  0x00000000030f3848: movabs $0x174e3758,%rax   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f3852: movabs $0x148,%rsi
  0x00000000030f385c: jge    0x00000000030f386c
  0x00000000030f3862: movabs $0x158,%rsi
  0x00000000030f386c: mov    (%rax,%rsi,1),%rdi
  0x00000000030f3870: lea    0x1(%rdi),%rdi
  0x00000000030f3874: mov    %rdi,(%rax,%rsi,1)
  0x00000000030f3878: jge    0x00000000030f3b14  ;*if_icmpge
                                                ; - sun.misc.URLClassPath::getNextLoader@16 (line 446)

  0x00000000030f387e: mov    0x18(%rdx),%esi    ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getNextLoader@20 (line 447)

  0x00000000030f3881: movslq %r9d,%rax
  0x00000000030f3884: cmp    0xc(%r8),%r9d
  0x00000000030f3888: jae    0x00000000030f3ccd
  0x00000000030f388e: mov    0x10(%r8,%rax,4),%edi  ;*iaload
                                                ; - sun.misc.URLClassPath::getNextLoader@25 (line 447)

  0x00000000030f3893: cmp    (%rsi),%rax        ;*invokevirtual get
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ; implicit exception: dispatches to 0x00000000030f3cd6
  0x00000000030f3896: mov    %rsi,%rax
  0x00000000030f3899: movabs $0x174e3758,%rdx   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f38a3: movabs $0x10001b6c0,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000030f38ad: mov    %r10,0x170(%rdx)
  0x00000000030f38b4: addq   $0x1,0x178(%rdx)
  0x00000000030f38bc: movabs $0x174e1890,%rax   ;   {metadata(method data for {method} {0x0000000017298a68} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f38c6: mov    0xdc(%rax),%edx
  0x00000000030f38cc: add    $0x8,%edx
  0x00000000030f38cf: mov    %edx,0xdc(%rax)
  0x00000000030f38d5: movabs $0x17298a60,%rax   ;   {metadata({method} {0x0000000017298a68} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f38df: and    $0x7ffff8,%edx
  0x00000000030f38e5: cmp    $0x0,%edx
  0x00000000030f38e8: je     0x00000000030f3cdb
  0x00000000030f38ee: mov    %rsi,%rax
  0x00000000030f38f1: movabs $0x174e1890,%rdx   ;   {metadata(method data for {method} {0x0000000017298a68} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f38fb: addq   $0x1,0x108(%rdx)
  0x00000000030f3903: movabs $0x174e1a20,%rax   ;   {metadata(method data for {method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f390d: mov    0xdc(%rax),%edx
  0x00000000030f3913: add    $0x8,%edx
  0x00000000030f3916: mov    %edx,0xdc(%rax)
  0x00000000030f391c: movabs $0x17299340,%rax   ;   {metadata({method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f3926: and    $0x7ffff8,%edx
  0x00000000030f392c: cmp    $0x0,%edx
  0x00000000030f392f: je     0x00000000030f3cf2
  0x00000000030f3935: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::rangeCheck@2 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x00000000030f3938: cmp    %eax,%edi
  0x00000000030f393a: movabs $0x174e1a20,%rax   ;   {metadata(method data for {method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f3944: movabs $0x108,%rdx
  0x00000000030f394e: jl     0x00000000030f395e
  0x00000000030f3954: movabs $0x118,%rdx
  0x00000000030f395e: mov    (%rax,%rdx,1),%rbx
  0x00000000030f3962: lea    0x1(%rbx),%rbx
  0x00000000030f3966: mov    %rbx,(%rax,%rdx,1)
  0x00000000030f396a: jge    0x00000000030f3c1a  ;*if_icmplt
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x00000000030f3970: mov    %rsi,%rax
  0x00000000030f3973: movabs $0x174e1890,%rdx   ;   {metadata(method data for {method} {0x0000000017298a68} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f397d: movabs $0x10001b6c0,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000030f3987: mov    %r10,0x120(%rdx)
  0x00000000030f398e: addq   $0x1,0x128(%rdx)
  0x00000000030f3996: movabs $0x174e1f28,%rax   ;   {metadata(method data for {method} {0x00000000172989c8} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f39a0: mov    0xdc(%rax),%edx
  0x00000000030f39a6: add    $0x8,%edx
  0x00000000030f39a9: mov    %edx,0xdc(%rax)
  0x00000000030f39af: movabs $0x172989c0,%rax   ;   {metadata({method} {0x00000000172989c8} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f39b9: and    $0x7ffff8,%edx
  0x00000000030f39bf: cmp    $0x0,%edx
  0x00000000030f39c2: je     0x00000000030f3d09
  0x00000000030f39c8: mov    0x14(%rsi),%eax    ;*getfield elementData
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x00000000030f39cb: movslq %edi,%rdx
  0x00000000030f39ce: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x00000000030f3d20
  0x00000000030f39d1: jae    0x00000000030f3d2a
  0x00000000030f39d7: mov    0x10(%rax,%rdx,4),%eax  ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x00000000030f39db: cmp    $0x0,%rax
  0x00000000030f39df: jne    0x00000000030f39fa
  0x00000000030f39e1: movabs $0x174e3758,%rdx   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f39eb: orl    $0x100,0x190(%rdx)
  0x00000000030f39f5: jmpq   0x00000000030f3abb
  0x00000000030f39fa: movabs $0x10003cfa8,%rsi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00000000030f3a04: mov    0x8(%rax),%edx
  0x00000000030f3a07: shl    $0x3,%rdx
  0x00000000030f3a0b: cmp    0x30(%rdx),%rsi
  0x00000000030f3a0f: jne    0x00000000030f3a9f
  0x00000000030f3a15: movabs $0x174e3758,%rdx   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f3a1f: mov    0x8(%rax),%esi
  0x00000000030f3a22: shl    $0x3,%rsi
  0x00000000030f3a26: cmp    0x1a0(%rdx),%rsi
  0x00000000030f3a2d: jne    0x00000000030f3a3c
  0x00000000030f3a2f: addq   $0x1,0x1a8(%rdx)
  0x00000000030f3a37: jmpq   0x00000000030f3abb
  0x00000000030f3a3c: cmp    0x1b0(%rdx),%rsi
  0x00000000030f3a43: jne    0x00000000030f3a52
  0x00000000030f3a45: addq   $0x1,0x1b8(%rdx)
  0x00000000030f3a4d: jmpq   0x00000000030f3abb
  0x00000000030f3a52: cmpq   $0x0,0x1a0(%rdx)
  0x00000000030f3a5d: jne    0x00000000030f3a76
  0x00000000030f3a5f: mov    %rsi,0x1a0(%rdx)
  0x00000000030f3a66: movq   $0x1,0x1a8(%rdx)
  0x00000000030f3a71: jmpq   0x00000000030f3abb
  0x00000000030f3a76: cmpq   $0x0,0x1b0(%rdx)
  0x00000000030f3a81: jne    0x00000000030f3a9a
  0x00000000030f3a83: mov    %rsi,0x1b0(%rdx)
  0x00000000030f3a8a: movq   $0x1,0x1b8(%rdx)
  0x00000000030f3a95: jmpq   0x00000000030f3abb
  0x00000000030f3a9a: jmpq   0x00000000030f3abb
  0x00000000030f3a9f: movabs $0x174e3758,%rdx   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f3aa9: subq   $0x1,0x198(%rdx)
  0x00000000030f3ab1: jmpq   0x00000000030f3d33
  0x00000000030f3ab6: jmpq   0x00000000030f3abb
  0x00000000030f3abb: mov    %rax,%r8           ;*checkcast
                                                ; - sun.misc.URLClassPath::getNextLoader@29 (line 447)

  0x00000000030f3abe: movabs $0x174e3758,%rax   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f3ac8: incl   0x1c8(%rax)        ;*ifeq
                                                ; - sun.misc.URLClassPath::getNextLoader@36 (line 448)

  0x00000000030f3ace: lea    0x88(%rsp),%rax
  0x00000000030f3ad6: mov    0x8(%rax),%rsi
  0x00000000030f3ada: mov    (%rsi),%rdx
  0x00000000030f3add: and    $0x7,%rdx
  0x00000000030f3ae1: cmp    $0x5,%rdx
  0x00000000030f3ae5: je     0x00000000030f3b02
  0x00000000030f3aeb: mov    (%rax),%rdx
  0x00000000030f3aee: test   %rdx,%rdx
  0x00000000030f3af1: je     0x00000000030f3b02
  0x00000000030f3af7: lock cmpxchg %rdx,(%rsi)
  0x00000000030f3afc: jne    0x00000000030f3d3c
  0x00000000030f3b02: mov    %r8,%rax
  0x00000000030f3b05: add    $0xa0,%rsp
  0x00000000030f3b0c: pop    %rbp
  0x00000000030f3b0d: test   %eax,-0x2903a13(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f3b13: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getNextLoader@79 (line 452)

  0x00000000030f3b14: lea    0x88(%rsp),%rax
  0x00000000030f3b1c: mov    0x8(%rax),%rdx
  0x00000000030f3b20: mov    (%rdx),%r8
  0x00000000030f3b23: and    $0x7,%r8
  0x00000000030f3b27: cmp    $0x5,%r8
  0x00000000030f3b2b: je     0x00000000030f3b48
  0x00000000030f3b31: mov    (%rax),%r8
  0x00000000030f3b34: test   %r8,%r8
  0x00000000030f3b37: je     0x00000000030f3b48
  0x00000000030f3b3d: lock cmpxchg %r8,(%rdx)
  0x00000000030f3b42: jne    0x00000000030f3d52
  0x00000000030f3b48: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030f3b52: add    $0xa0,%rsp
  0x00000000030f3b59: pop    %rbp
  0x00000000030f3b5a: test   %eax,-0x2903a60(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f3b60: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getNextLoader@81 (line 454)

  0x00000000030f3b61: mov    %rdx,%r8
  0x00000000030f3b64: movabs $0x174e3758,%rsi   ;   {metadata(method data for {method} {0x0000000017394790} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000030f3b6e: addq   $0x1,0x348(%rsi)
  0x00000000030f3b76: mov    %r9,%r8            ;*invokespecial getLoader
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 457)

  0x00000000030f3b79: nop
  0x00000000030f3b7a: nop
  0x00000000030f3b7b: nop
  0x00000000030f3b7c: nop
  0x00000000030f3b7d: nop
  0x00000000030f3b7e: nop
  0x00000000030f3b7f: callq  0x00000000030161a0  ; OopMap{[144]=Oop off=1252}
                                                ;*invokespecial getLoader
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 457)
                                                ;   {optimized virtual_call}
  0x00000000030f3b84: mov    %rax,%rdx          ;*invokespecial getLoader
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 457)

  0x00000000030f3b87: lea    0x88(%rsp),%rax
  0x00000000030f3b8f: mov    0x8(%rax),%rsi
  0x00000000030f3b93: mov    (%rsi),%r8
  0x00000000030f3b96: and    $0x7,%r8
  0x00000000030f3b9a: cmp    $0x5,%r8
  0x00000000030f3b9e: je     0x00000000030f3bbb
  0x00000000030f3ba4: mov    (%rax),%r8
  0x00000000030f3ba7: test   %r8,%r8
  0x00000000030f3baa: je     0x00000000030f3bbb
  0x00000000030f3bb0: lock cmpxchg %r8,(%rsi)
  0x00000000030f3bb5: jne    0x00000000030f3d68
  0x00000000030f3bbb: mov    %rdx,%rax
  0x00000000030f3bbe: add    $0xa0,%rsp
  0x00000000030f3bc5: pop    %rbp
  0x00000000030f3bc6: test   %eax,-0x2903acc(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f3bcc: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getNextLoader@87 (line 457)

  0x00000000030f3bcd: lea    0x88(%rsp),%rax
  0x00000000030f3bd5: mov    0x8(%rax),%r8
  0x00000000030f3bd9: mov    (%r8),%rdx
  0x00000000030f3bdc: and    $0x7,%rdx
  0x00000000030f3be0: cmp    $0x5,%rdx
  0x00000000030f3be4: je     0x00000000030f3c01
  0x00000000030f3bea: mov    (%rax),%rdx
  0x00000000030f3bed: test   %rdx,%rdx
  0x00000000030f3bf0: je     0x00000000030f3c01
  0x00000000030f3bf6: lock cmpxchg %rdx,(%r8)
  0x00000000030f3bfb: jne    0x00000000030f3d7e
  0x00000000030f3c01: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000030f3c0b: add    $0xa0,%rsp
  0x00000000030f3c12: pop    %rbp
  0x00000000030f3c13: test   %eax,-0x2903b19(%rip)        # 0x00000000007f0100
                                                ;   {poll_return}
  0x00000000030f3c19: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getNextLoader@8 (line 443)

  0x00000000030f3c1a: mov    %r9d,0x78(%rsp)
  0x00000000030f3c1f: mov    %r8,0x70(%rsp)
  0x00000000030f3c24: nopl   0x0(%rax)
  0x00000000030f3c28: jmpq   0x00000000030f3da3  ;   {no_reloc}
  0x00000000030f3c2d: add    %al,(%rax)
  0x00000000030f3c2f: add    %al,(%rax)
  0x00000000030f3c31: add    %ch,%cl
  0x00000000030f3c33: jbe    0x00000000030f3c36
  0x00000000030f3c35: add    %al,(%rax)         ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x00000000030f3c37: mov    %rsi,%rdx
  0x00000000030f3c3a: movabs $0x174e1a20,%rbx   ;   {metadata(method data for {method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f3c44: addq   $0x1,0x128(%rbx)
  0x00000000030f3c4c: mov    %rdi,%r8
  0x00000000030f3c4f: mov    %rsi,%rdx          ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x00000000030f3c52: mov    %rsi,0x80(%rsp)
  0x00000000030f3c5a: mov    %edi,0x7c(%rsp)
  0x00000000030f3c5e: mov    %rax,0x68(%rsp)
  0x00000000030f3c63: nop
  0x00000000030f3c64: nop
  0x00000000030f3c65: nop
  0x00000000030f3c66: nop
  0x00000000030f3c67: callq  0x00000000030161a0  ; OopMap{[128]=Oop [112]=Oop [104]=Oop [144]=Oop off=1484}
                                                ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {optimized virtual_call}
  0x00000000030f3c6c: mov    0x68(%rsp),%r8
  0x00000000030f3c71: movabs $0x174e1a20,%rdx   ;   {metadata(method data for {method} {0x0000000017299348} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000030f3c7b: addq   $0x1,0x138(%rdx)
  0x00000000030f3c83: mov    %rax,%r8
  0x00000000030f3c86: mov    0x68(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x00000000030f3c8b: nop
  0x00000000030f3c8c: nop
  0x00000000030f3c8d: nop
  0x00000000030f3c8e: nop
  0x00000000030f3c8f: callq  0x00000000030161a0  ; OopMap{[128]=Oop [112]=Oop [104]=Oop [144]=Oop off=1524}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {optimized virtual_call}
  0x00000000030f3c94: mov    0x68(%rsp),%rax
  0x00000000030f3c99: jmpq   0x00000000030f3de5
  0x00000000030f3c9e: mov    %rdx,0x8(%rsp)
  0x00000000030f3ca3: mov    %rsi,(%rsp)
  0x00000000030f3ca7: callq  0x00000000030d1520  ; OopMap{rdx=Oop r8=Oop [144]=Oop off=1548}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getNextLoader@-1 (line 442)
                                                ;   {runtime_call}
  0x00000000030f3cac: jmpq   0x00000000030f3798
  0x00000000030f3cb1: mov    %rax,0x8(%rsp)
  0x00000000030f3cb6: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f3cbe: callq  0x00000000030d3220  ; OopMap{rdx=Oop r8=Oop [144]=Oop off=1571}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getNextLoader@-1 (line 442)
                                                ;   {runtime_call}
  0x00000000030f3cc3: jmpq   0x00000000030f37ca
  0x00000000030f3cc8: callq  0x0000000003041280  ; OopMap{rdx=Oop r8=Oop [144]=Oop off=1581}
                                                ;*arraylength
                                                ; - sun.misc.URLClassPath::getNextLoader@15 (line 446)
                                                ;   {runtime_call}
  0x00000000030f3ccd: mov    %r9,(%rsp)
  0x00000000030f3cd1: callq  0x0000000003041940  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1590}
                                                ;*iaload
                                                ; - sun.misc.URLClassPath::getNextLoader@25 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3cd6: callq  0x0000000003041280  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1595}
                                                ;*invokevirtual get
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3cdb: mov    %rax,0x8(%rsp)
  0x00000000030f3ce0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f3ce8: callq  0x00000000030d3220  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1613}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3ced: jmpq   0x00000000030f38ee
  0x00000000030f3cf2: mov    %rax,0x8(%rsp)
  0x00000000030f3cf7: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f3cff: callq  0x00000000030d3220  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1636}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3d04: jmpq   0x00000000030f3935
  0x00000000030f3d09: mov    %rax,0x8(%rsp)
  0x00000000030f3d0e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000030f3d16: callq  0x00000000030d3220  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1659}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3d1b: jmpq   0x00000000030f39c8
  0x00000000030f3d20: callq  0x0000000003041280  ; OopMap{r8=Oop rax=Oop [144]=Oop off=1669}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3d25: callq  0x0000000003041280  ; OopMap{r8=Oop rax=Oop [144]=Oop off=1674}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3d2a: mov    %rdi,(%rsp)
  0x00000000030f3d2e: callq  0x0000000003041940  ; OopMap{r8=Oop rax=Oop [144]=Oop off=1683}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3d33: mov    %rax,(%rsp)
  0x00000000030f3d37: callq  0x00000000030d0d40  ; OopMap{[144]=Oop off=1692}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getNextLoader@29 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3d3c: lea    0x88(%rsp),%rax
  0x00000000030f3d44: mov    %rax,(%rsp)
  0x00000000030f3d48: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f3d4d: jmpq   0x00000000030f3b02
  0x00000000030f3d52: lea    0x88(%rsp),%rax
  0x00000000030f3d5a: mov    %rax,(%rsp)
  0x00000000030f3d5e: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f3d63: jmpq   0x00000000030f3b48
  0x00000000030f3d68: lea    0x88(%rsp),%rax
  0x00000000030f3d70: mov    %rax,(%rsp)
  0x00000000030f3d74: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f3d79: jmpq   0x00000000030f3bbb
  0x00000000030f3d7e: lea    0x88(%rsp),%rax
  0x00000000030f3d86: mov    %rax,(%rsp)
  0x00000000030f3d8a: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f3d8f: jmpq   0x00000000030f3c01
  0x00000000030f3d94: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000030f3d9e: mov    $0xa050f00,%eax
  0x00000000030f3da3: callq  0x00000000030d2160  ; OopMap{[112]=Oop rsi=Oop [144]=Oop off=1800}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3da8: jmpq   0x00000000030f3c28
  0x00000000030f3dad: mov    %rdx,%rdx
  0x00000000030f3db0: callq  0x0000000003040d60  ; OopMap{[112]=Oop rsi=Oop [144]=Oop off=1813}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x00000000030f3db5: jmpq   0x00000000030f3c37
  0x00000000030f3dba: nop
  0x00000000030f3dbb: nop
  0x00000000030f3dbc: mov    0x2a8(%r15),%rax
  0x00000000030f3dc3: movabs $0x0,%r10
  0x00000000030f3dcd: mov    %r10,0x2a8(%r15)
  0x00000000030f3dd4: movabs $0x0,%r10
  0x00000000030f3dde: mov    %r10,0x2b0(%r15)
  0x00000000030f3de5: mov    %rax,%rbx
  0x00000000030f3de8: lea    0x88(%rsp),%rax
  0x00000000030f3df0: mov    0x8(%rax),%rsi
  0x00000000030f3df4: mov    (%rsi),%rdi
  0x00000000030f3df7: and    $0x7,%rdi
  0x00000000030f3dfb: cmp    $0x5,%rdi
  0x00000000030f3dff: je     0x00000000030f3e1c
  0x00000000030f3e05: mov    (%rax),%rdi
  0x00000000030f3e08: test   %rdi,%rdi
  0x00000000030f3e0b: je     0x00000000030f3e1c
  0x00000000030f3e11: lock cmpxchg %rdi,(%rsi)
  0x00000000030f3e16: jne    0x00000000030f3e2c
  0x00000000030f3e1c: mov    %rbx,%rax
  0x00000000030f3e1f: add    $0xa0,%rsp
  0x00000000030f3e26: pop    %rbp
  0x00000000030f3e27: jmpq   0x0000000003041de0  ;   {runtime_call}
  0x00000000030f3e2c: lea    0x88(%rsp),%rax
  0x00000000030f3e34: mov    %rax,(%rsp)
  0x00000000030f3e38: callq  0x00000000030d1920  ;   {runtime_call}
  0x00000000030f3e3d: jmp    0x00000000030f3e1c
  0x00000000030f3e3f: hlt    
[Stub Code]
  0x00000000030f3e40: nop                       ;   {no_reloc}
  0x00000000030f3e41: nop
  0x00000000030f3e42: nop
  0x00000000030f3e43: nop
  0x00000000030f3e44: nop
  0x00000000030f3e45: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f3e4f: jmpq   0x00000000030f3e4f  ;   {runtime_call}
  0x00000000030f3e54: nop
  0x00000000030f3e55: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f3e5f: jmpq   0x00000000030f3e5f  ;   {runtime_call}
  0x00000000030f3e64: nop
  0x00000000030f3e65: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000030f3e6f: jmpq   0x00000000030f3e6f  ;   {runtime_call}
[Exception Handler]
  0x00000000030f3e74: callq  0x00000000030d09a0  ;   {runtime_call}
  0x00000000030f3e79: mov    %rsp,-0x28(%rsp)
  0x00000000030f3e7e: sub    $0x80,%rsp
  0x00000000030f3e85: mov    %rax,0x78(%rsp)
  0x00000000030f3e8a: mov    %rcx,0x70(%rsp)
  0x00000000030f3e8f: mov    %rdx,0x68(%rsp)
  0x00000000030f3e94: mov    %rbx,0x60(%rsp)
  0x00000000030f3e99: mov    %rbp,0x50(%rsp)
  0x00000000030f3e9e: mov    %rsi,0x48(%rsp)
  0x00000000030f3ea3: mov    %rdi,0x40(%rsp)
  0x00000000030f3ea8: mov    %r8,0x38(%rsp)
  0x00000000030f3ead: mov    %r9,0x30(%rsp)
  0x00000000030f3eb2: mov    %r10,0x28(%rsp)
  0x00000000030f3eb7: mov    %r11,0x20(%rsp)
  0x00000000030f3ebc: mov    %r12,0x18(%rsp)
  0x00000000030f3ec1: mov    %r13,0x10(%rsp)
  0x00000000030f3ec6: mov    %r14,0x8(%rsp)
  0x00000000030f3ecb: mov    %r15,(%rsp)
  0x00000000030f3ecf: movabs $0x5af3af20,%rcx   ;   {external_word}
  0x00000000030f3ed9: movabs $0x30f3e79,%rdx    ;   {internal_word}
  0x00000000030f3ee3: mov    %rsp,%r8
  0x00000000030f3ee6: and    $0xfffffffffffffff0,%rsp
  0x00000000030f3eea: callq  0x000000005abfd270  ;   {runtime_call}
  0x00000000030f3eef: hlt    
[Deopt Handler Code]
  0x00000000030f3ef0: movabs $0x30f3ef0,%r10    ;   {section_word}
  0x00000000030f3efa: push   %r10
  0x00000000030f3efc: jmpq   0x0000000003017600  ;   {runtime_call}
  0x00000000030f3f01: hlt    
  0x00000000030f3f02: hlt    
  0x00000000030f3f03: hlt    
  0x00000000030f3f04: hlt    
  0x00000000030f3f05: hlt    
  0x00000000030f3f06: hlt    
  0x00000000030f3f07: hlt    
